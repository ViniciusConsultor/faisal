IF NOT EXISTS (SELECT [Setting_Id] FROM [Base_Setting] WHERE [Setting_Id] ='DBColumnCaptionQty_Total')
	INSERT INTO [Base_Setting]
       ([Co_Id], [User_Id], [Setting_Id]
       , [Setting_Desc]
       ,[Setting_Value], [Stamp_User_Id], [Stamp_DateTime], [Setting_Value_DataType]
       ,[Setting_Value_MinimumValue], [Setting_Value_MaximumValue], [Upload_DateTime])
  VALUES
       (0,0,'DBColumnCaptionQty_Total'
       ,'Qty_Total Caption'
       ,'Total',0,'2009/11/09','String'
       ,NULL,NULL,NULL)
go
IF EXISTS (SELECT [Setting_Id] FROM [Base_Setting] WHERE [Setting_Id] ='DBColumnCaptionItem_Category')
	UPDATE [Base_Setting]
		SET [Setting_Value]='Cat.'
		WHERE [Co_Id]=0 AND [User_Id]=0 
			AND [Setting_Id]='DBColumnCaptionItem_Category'
go
IF EXISTS (SELECT [Setting_Id] FROM [Base_Setting] WHERE [Setting_Id] ='DBColumnCaptionCo_Code')
	UPDATE [Base_Setting]
		SET [Setting_Value]='Co.'
		WHERE [Co_Id]=0 AND [User_Id]=0 
			AND [Setting_Id]='DBColumnCaptionCo_Code'
go
IF EXISTS (SELECT [Setting_Id] FROM [Base_Setting] WHERE [Setting_Id] ='DBColumnCaptionItem_Code')
	UPDATE [Base_Setting]
		SET [Setting_Value]='Item'
		WHERE [Co_Id]=0 AND [User_Id]=0 
			AND [Setting_Id]='DBColumnCaptionItem_Code'
go
-- =============================================
-- Author:		Faisal Saleem
-- Create date: 01-Mar-2009
-- Description:	This stored procedure returns the records from inventory and
--				inventorydetail table to be used in report. It does not perform
--				any calculations.
-- =============================================
-- ------------ Modification History -----------
-- Author	Date		Details
-- ------   ----        -------
-- Faisal	01-Mar-2009	Added Comment header and because primary key is changed in both
--						inventory and inventorydetail table so the joins are changed
--						so that data shows on the report correctly.
-- Faisal	30-Mar-2009	Primary key is changed back to co_id and Inventory_ID because
--						there is possibility that there can be sale and sale return under sale document
-- Faisal	16-May-2009 Incorporated WarehouseID
-- Faisal	10-Oct-2009 Specified particular document types in where clause so that purchase order
--						is not reflected in stock report.
-- Faisal	18-Nov-2009 Included Purchase Warehouse with ID 18 so that it is reflected in stock report.
-- ---------------------------------------------
ALTER PROCEDURE [spGetInventoryDetails]
AS 
BEGIN 
	SELECT inv.Co_ID, Co.Co_Desc, 
		invdet.Item_ID, inv.Party_ID, 
		item.Item_Code, item.Item_Desc, 
		cat.Item_Desc AS Item_Category, inv.Inventory_Date, 
		inv.Payment_Mode, inv.Remarks,	
		inv.Inventory_ID, inv.Inventory_No, 
		inv.Discount, inv.SalesTax, inv.LogisticService, 
		invdet.DocumentType_ID, invdet.Warehouse_ID, doc.DocumentType_Desc, 
		invdet.Inventory_Qty_Size01, invdet.Inventory_Qty_Size02, 
		invdet.Inventory_Qty_Size03, invdet.Inventory_Qty_Size04, 
		invdet.Inventory_Qty_Size05, invdet.Inventory_Qty_Size06, 
		invdet.Inventory_Qty_Size07, invdet.Inventory_Qty_Size08, 
		invdet.Inventory_Qty_Size09, invdet.Inventory_Qty_Size10, 
		invdet.Inventory_Qty_Size11, invdet.Inventory_Qty_Size12, 
		invdet.Inventory_Qty_Size13, invdet.Inventory_Rate_Size01, 
		invdet.Inventory_Rate_Size02, invdet.Inventory_Rate_Size03, 
		invdet.Inventory_Rate_Size04, invdet.Inventory_Rate_Size05, 
		invdet.Inventory_Rate_Size06, invdet.Inventory_Rate_Size07, 
		invdet.Inventory_Rate_Size08, invdet.Inventory_Rate_Size09, 
		invdet.Inventory_Rate_Size10, invdet.Inventory_Rate_Size11, 
		invdet.Inventory_Rate_Size13, invdet.Inventory_Rate_Size12, 
		Party.Party_Desc, Party.COA_ID, 
		Party.City, Party.Country, 
		Party.Address 
	
	FROM Inv_Item cat 
	RIGHT OUTER JOIN Inv_Item AS item  
		ON cat.Co_ID = item.Co_ID 
		AND LEFT(item.Item_Code,2) = cat.Item_Code 
	RIGHT JOIN Inventory_Detail AS invdet  
		ON item.Co_ID = invdet.Co_ID 
		AND item.Item_ID = invdet.Item_ID 
	INNER JOIN Inventory AS inv  
		ON inv.Co_ID = invdet.Co_ID 
		AND inv.Inventory_ID = invdet.Inventory_ID
	LEFT OUTER JOIN Party  
		ON inv.Co_ID = Party.Co_ID 
		AND inv.Party_ID = Party.Party_ID 
	LEFT OUTER JOIN Base_Company Co 
		ON inv.Co_ID = Co.Co_ID 
	LEFT OUTER JOIN Common_DocumentType doc 
		ON invdet.DocumentType_ID = doc.DocumentType_ID
	WHERE inv.Status_ID <> 4 -- 4 is deleted
		AND invdet.DocumentType_ID IN (1, 2, 3, 4, 18) -- Sales, Sales Return, Purchase, Purchase Return
END
go
-- =============================================
-- Author:		Noman Latif
-- Create date: 28 Sep 2008
-- Description:	This stored procedure is used for
--              to calculate the stock.
-- =============================================
-- ------------ Modification History -----------
-- Author	Date		Details
-- ------   ----        -------
-- Faisal	20-Jun-2009	Add field of remarks to show in daily stock report.
-- Faisal	06-Aug-2009	Inventory_ID column is added so that it can be grouped in report.
-- Faisal	18-Nov-2009 Included DocumentType Purchase Warehouse with ID 18 so that 
--						it is reflected in stock.
-- ---------------------------------------------
ALTER PROCEDURE [spDailyStock]
	-- Add the parameters for the stored procedure here
	--@From_Date Datetime = '1900/01/01', 
	--@To_Date Datetime = '2008/09/28',
	--@Co_ID int = 1
	@From_Date Datetime, 
	@To_Date Datetime,
	@Co_ID int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	
-- Insert statements for procedure here
-- =============================================
-- For testing. uncomment these variables and
-- give values.
-- =============================================
--declare @From_Date Datetime,@To_Date Datetime,@Co_ID int
--set @From_Date = '2008-08-10'
--set @To_Date = '2008-08-30'
--set @Co_ID = 1
--select @From_Date = '2008-08-10',@To_Date = '2008-09-30',@Co_ID = 1

select 0 as DocumentType_ID, '1900-01-01' as Inventory_Date, 0 AS Inventory_ID, 'Opening' AS Remarks, 
	(sum(Inventory_Qty_Size01) + sum(Inventory_Qty_Size02) + sum(Inventory_Qty_Size03) + sum(Inventory_Qty_Size04) + 
	sum(Inventory_Qty_Size05) + sum(Inventory_Qty_Size06) + sum(Inventory_Qty_Size07) + sum(Inventory_Qty_Size08) + 
	sum(Inventory_Qty_Size09) + sum(Inventory_Qty_Size10) + sum(Inventory_Qty_Size11) + sum(Inventory_Qty_Size12) + 
	sum(Inventory_Qty_Size13)) as Opening_Qty, 
	((sum(Inventory_Qty_Size01 * Item_SaleRate_Size01)) + (sum(Inventory_Qty_Size02 * Item_SaleRate_Size02)) + 
    (sum(Inventory_Qty_Size03 * Item_SaleRate_Size03)) + (sum(Inventory_Qty_Size04 * Item_SaleRate_Size04)) + 
	(sum(Inventory_Qty_Size05 * Item_SaleRate_Size05)) + (sum(Inventory_Qty_Size06 * Item_SaleRate_Size06)) + 
	(sum(Inventory_Qty_Size07 * Item_SaleRate_Size07)) + (sum(Inventory_Qty_Size08 * Item_SaleRate_Size08)) + 
    (sum(Inventory_Qty_Size09 * Item_SaleRate_Size09)) + (sum(Inventory_Qty_Size10 * Item_SaleRate_Size10)) + 
	(sum(Inventory_Qty_Size11 * Item_SaleRate_Size11)) + (sum(Inventory_Qty_Size12 * Item_SaleRate_Size12)) + 
	(sum(Inventory_Qty_Size13 * Item_SaleRate_Size13))) as Opening_Amount,
	0 as Inventory_Qty_Size01, 0 as Inventory_Qty_Size02, 
    0 as Inventory_Qty_Size03, 0 as Inventory_Qty_Size04, 0 as Inventory_Qty_Size05, 0 as Inventory_Qty_Size06, 
	0 as Inventory_Qty_Size07, 0 as Inventory_Qty_Size08, 0 as Inventory_Qty_Size09, 0 as Inventory_Qty_Size10, 
	0 as Inventory_Qty_Size11, 0 as Inventory_Qty_Size12, 0 as Inventory_Qty_Size13, 
	0 as Item_SaleRate_Size01, 0 as Item_SaleRate_Size02, 0 as Item_SaleRate_Size03, 0 as Item_SaleRate_Size04, 
    0 as Item_SaleRate_Size05, 0 as Item_SaleRate_Size06, 0 as Item_SaleRate_Size07, 0 as Item_SaleRate_Size08, 
	0 as Item_SaleRate_Size09, 0 as Item_SaleRate_Size10, 0 as Item_SaleRate_Size11, 0 as Item_SaleRate_Size12, 
	0 as Item_SaleRate_Size13 
from (

    -- fetch the records, opening, of purchase and sale return which will be positive values

SELECT invdet.Item_ID, item.Item_Code, item.Item_Desc, cat.Item_Desc as Cat_Desc,
	invdet.Inventory_Qty_Size01 as Inventory_Qty_Size01, invdet.Inventory_Qty_Size02 as Inventory_Qty_Size02, 
    invdet.Inventory_Qty_Size03 as Inventory_Qty_Size03, invdet.Inventory_Qty_Size04 as Inventory_Qty_Size04, 
	invdet.Inventory_Qty_Size05 as Inventory_Qty_Size05, invdet.Inventory_Qty_Size06 as Inventory_Qty_Size06, 
	invdet.Inventory_Qty_Size07 as Inventory_Qty_Size07, invdet.Inventory_Qty_Size08 as Inventory_Qty_Size08, 
	invdet.Inventory_Qty_Size09 as Inventory_Qty_Size09, invdet.Inventory_Qty_Size10 as Inventory_Qty_Size10, 
	invdet.Inventory_Qty_Size11 as Inventory_Qty_Size11, invdet.Inventory_Qty_Size12 as Inventory_Qty_Size12, 
	invdet.Inventory_Qty_Size13 as Inventory_Qty_Size13, item.Item_SaleRate_Size01, item.Item_SaleRate_Size02, 
	item.Item_SaleRate_Size03, item.Item_SaleRate_Size04, item.Item_SaleRate_Size05, item.Item_SaleRate_Size06, 
	item.Item_SaleRate_Size07, item.Item_SaleRate_Size08, item.Item_SaleRate_Size09, item.Item_SaleRate_Size10, 
	item.Item_SaleRate_Size11, item.Item_SaleRate_Size12, item.Item_SaleRate_Size13
FROM   Inv_Item AS cat RIGHT OUTER JOIN
       Inv_Item AS item ON cat.Co_ID = item.Co_ID AND LEFT(item.Item_Code, 2) = cat.Item_Code RIGHT OUTER JOIN
       Inventory_Detail AS invdet ON item.Co_ID = invdet.Co_ID AND item.Item_ID = invdet.Item_ID INNER JOIN
       Inventory AS inv ON inv.Co_ID = invdet.Co_ID AND inv.Inventory_ID = invdet.Inventory_ID
WHERE  (item.Co_ID = @Co_ID and inv.Status_ID <> 4 and invdet.DocumentType_ID IN (3, 2, 18) and inv.inventory_Date < @From_Date)

UNION ALL

    -- fetch the records, opening, of sales and purchase return which will be negative values

SELECT invdet.Item_ID, item.Item_Code, item.Item_Desc, cat.Item_Desc as Cat_Desc, - invdet.Inventory_Qty_Size01 as Inventory_Qty_Size01, 
	- invdet.Inventory_Qty_Size02 as Inventory_Qty_Size02, - invdet.Inventory_Qty_Size03 as Inventory_Qty_Size03, 
	- invdet.Inventory_Qty_Size04 as Inventory_Qty_Size04, - invdet.Inventory_Qty_Size05 as Inventory_Qty_Size05, 
	- invdet.Inventory_Qty_Size06 as Inventory_Qty_Size06, - invdet.Inventory_Qty_Size07 as Inventory_Qty_Size07, 
	- invdet.Inventory_Qty_Size08 as Inventory_Qty_Size08, - invdet.Inventory_Qty_Size09 as Inventory_Qty_Size09, 
	- invdet.Inventory_Qty_Size10 as Inventory_Qty_Size10, - invdet.Inventory_Qty_Size11 as Inventory_Qty_Size11, 
	- invdet.Inventory_Qty_Size12 as Inventory_Qty_Size12, - invdet.Inventory_Qty_Size13 as Inventory_Qty_Size13, 
	item.Item_SaleRate_Size01, item.Item_SaleRate_Size02, item.Item_SaleRate_Size03, item.Item_SaleRate_Size04, 
	item.Item_SaleRate_Size05, item.Item_SaleRate_Size06, item.Item_SaleRate_Size07, item.Item_SaleRate_Size08, 
	item.Item_SaleRate_Size09, item.Item_SaleRate_Size10, item.Item_SaleRate_Size11, item.Item_SaleRate_Size12, 
	item.Item_SaleRate_Size13
FROM   Inv_Item AS cat RIGHT OUTER JOIN
       Inv_Item AS item ON cat.Co_ID = item.Co_ID AND LEFT(item.Item_Code, 2) = cat.Item_Code RIGHT OUTER JOIN
       Inventory_Detail AS invdet ON item.Co_ID = invdet.Co_ID AND item.Item_ID = invdet.Item_ID INNER JOIN
       Inventory AS inv ON inv.Co_ID = invdet.Co_ID AND inv.Inventory_ID = invdet.Inventory_ID
WHERE  (item.Co_ID = @Co_ID and inv.Status_ID <> 4 AND (invdet.DocumentType_ID IN (1, 4)) and inv.inventory_Date < @From_Date)
) a 

union all

SELECT invdet.DocumentType_ID, inv.inventory_Date, inv.Inventory_ID, inv.Remarks, 0 as Opening_Qty, 0 as Opening_Amount, 
	invdet.Inventory_Qty_Size01 as Inventory_Qty_Size01, invdet.Inventory_Qty_Size02 as Inventory_Qty_Size02, 
    invdet.Inventory_Qty_Size03 as Inventory_Qty_Size03, invdet.Inventory_Qty_Size04 as Inventory_Qty_Size04, 
	invdet.Inventory_Qty_Size05 as Inventory_Qty_Size05, invdet.Inventory_Qty_Size06 as Inventory_Qty_Size06, 
	invdet.Inventory_Qty_Size07 as Inventory_Qty_Size07, invdet.Inventory_Qty_Size08 as Inventory_Qty_Size08, 
	invdet.Inventory_Qty_Size09 as Inventory_Qty_Size09, invdet.Inventory_Qty_Size10 as Inventory_Qty_Size10, 
	invdet.Inventory_Qty_Size11 as Inventory_Qty_Size11, invdet.Inventory_Qty_Size12 as Inventory_Qty_Size12, 
	invdet.Inventory_Qty_Size13 as Inventory_Qty_Size13, item.Item_SaleRate_Size01, item.Item_SaleRate_Size02, 
	item.Item_SaleRate_Size03, item.Item_SaleRate_Size04, item.Item_SaleRate_Size05, item.Item_SaleRate_Size06, 
	item.Item_SaleRate_Size07, item.Item_SaleRate_Size08, item.Item_SaleRate_Size09, item.Item_SaleRate_Size10, 
	item.Item_SaleRate_Size11, item.Item_SaleRate_Size12, item.Item_SaleRate_Size13
FROM   Inv_Item AS cat RIGHT OUTER JOIN
       Inv_Item AS item ON cat.Co_ID = item.Co_ID AND LEFT(item.Item_Code, 2) = cat.Item_Code RIGHT OUTER JOIN
       Inventory_Detail AS invdet ON item.Co_ID = invdet.Co_ID AND item.Item_ID = invdet.Item_ID INNER JOIN
       Inventory AS inv ON inv.Co_ID = invdet.Co_ID AND inv.Inventory_ID = invdet.Inventory_ID
WHERE  (item.Co_ID = @Co_ID and inv.Status_ID <> 4 AND (invdet.DocumentType_ID IN (3, 2, 18)) and inv.inventory_Date between @From_Date and @To_Date)

union all

SELECT invdet.DocumentType_ID, inv.inventory_Date, inv.Inventory_ID, inv.Remarks,  0 as Opening_Qty, 0 as Opening_Amount, 
	- invdet.Inventory_Qty_Size01 as Inventory_Qty_Size01, - invdet.Inventory_Qty_Size02 as Inventory_Qty_Size02, 
	- invdet.Inventory_Qty_Size03 as Inventory_Qty_Size03, - invdet.Inventory_Qty_Size04 as Inventory_Qty_Size04, 
	- invdet.Inventory_Qty_Size05 as Inventory_Qty_Size05, - invdet.Inventory_Qty_Size06 as Inventory_Qty_Size06, 
	- invdet.Inventory_Qty_Size07 as Inventory_Qty_Size07, - invdet.Inventory_Qty_Size08 as Inventory_Qty_Size08, 
	- invdet.Inventory_Qty_Size09 as Inventory_Qty_Size09, - invdet.Inventory_Qty_Size10 as Inventory_Qty_Size10, 
	- invdet.Inventory_Qty_Size11 as Inventory_Qty_Size11, - invdet.Inventory_Qty_Size12 as Inventory_Qty_Size12, 
	- invdet.Inventory_Qty_Size13 as Inventory_Qty_Size13, item.Item_SaleRate_Size01, item.Item_SaleRate_Size02, 
	item.Item_SaleRate_Size03, item.Item_SaleRate_Size04, item.Item_SaleRate_Size05, item.Item_SaleRate_Size06, 
	item.Item_SaleRate_Size07, item.Item_SaleRate_Size08, item.Item_SaleRate_Size09, item.Item_SaleRate_Size10, 
	item.Item_SaleRate_Size11, item.Item_SaleRate_Size12, item.Item_SaleRate_Size13
FROM   Inv_Item AS cat RIGHT OUTER JOIN
       Inv_Item AS item ON cat.Co_ID = item.Co_ID AND LEFT(item.Item_Code, 2) = cat.Item_Code RIGHT OUTER JOIN
       Inventory_Detail AS invdet ON item.Co_ID = invdet.Co_ID AND item.Item_ID = invdet.Item_ID INNER JOIN
       Inventory AS inv ON inv.Co_ID = invdet.Co_ID AND inv.Inventory_ID = invdet.Inventory_ID
WHERE  (item.Co_ID = @Co_ID and inv.Status_ID <> 4 and (invdet.DocumentType_ID IN (1, 4)) AND inv.inventory_Date between @From_Date AND @To_Date)
END
go
ALTER VIEW [vwStockInquiry]
AS
SELECT     Co_ID, Co_Code, Item_ID, Item_Code, Item_Category, Item_Desc, SUM(Inventory_Qty_Size01) AS Inventory_Qty_Size01, SUM(Inventory_Qty_Size02) 
                      AS Inventory_Qty_Size02, SUM(Inventory_Qty_Size03) AS Inventory_Qty_Size03, SUM(Inventory_Qty_Size04) AS Inventory_Qty_Size04, 
                      SUM(Inventory_Qty_Size05) AS Inventory_Qty_Size05, SUM(Inventory_Qty_Size06) AS Inventory_Qty_Size06, SUM(Inventory_Qty_Size07) 
                      AS Inventory_Qty_Size07, SUM(Inventory_Qty_Size08) AS Inventory_Qty_Size08, SUM(Inventory_Qty_Size09) AS Inventory_Qty_Size09, 
                      SUM(Inventory_Qty_Size10) AS Inventory_Qty_Size10, SUM(Inventory_Qty_Size11) AS Inventory_Qty_Size11, SUM(Inventory_Qty_Size12) 
                      AS Inventory_Qty_Size12, SUM(Inventory_Qty_Size13) AS Inventory_Qty_Size13
FROM         (SELECT     inv.Co_ID, Co.Co_Code, invdet.Item_ID, item.Item_Code, cat.Item_Desc AS Item_Category, item.Item_Desc, invdet.Warehouse_ID, 
                                              - invdet.Inventory_Qty_Size01 AS Inventory_Qty_Size01, - invdet.Inventory_Qty_Size02 AS Inventory_Qty_Size02, 
                                              - invdet.Inventory_Qty_Size03 AS Inventory_Qty_Size03, - invdet.Inventory_Qty_Size04 AS Inventory_Qty_Size04, 
                                              - invdet.Inventory_Qty_Size05 AS Inventory_Qty_Size05, - invdet.Inventory_Qty_Size06 AS Inventory_Qty_Size06, 
                                              - invdet.Inventory_Qty_Size07 AS Inventory_Qty_Size07, - invdet.Inventory_Qty_Size08 AS Inventory_Qty_Size08, 
                                              - invdet.Inventory_Qty_Size09 AS Inventory_Qty_Size09, - invdet.Inventory_Qty_Size10 AS Inventory_Qty_Size10, 
                                              - invdet.Inventory_Qty_Size11 AS Inventory_Qty_Size11, - invdet.Inventory_Qty_Size12 AS Inventory_Qty_Size12, 
                                              - invdet.Inventory_Qty_Size13 AS Inventory_Qty_Size13
                       FROM          Inv_Item AS cat RIGHT OUTER JOIN
                                              Inv_Item AS item ON cat.Co_ID = item.Co_ID AND LEFT(item.Item_Code, 2) = cat.Item_Code RIGHT OUTER JOIN
                                              Inventory_Detail AS invdet ON item.Co_ID = invdet.Co_ID AND item.Item_ID = invdet.Item_ID INNER JOIN
                                              Inventory AS inv ON inv.Co_ID = invdet.Co_ID AND inv.Inventory_ID = invdet.Inventory_ID LEFT OUTER JOIN
                                              Party ON inv.Co_ID = Party.Co_ID AND inv.Party_ID = Party.Party_ID LEFT OUTER JOIN
                                              Base_Company AS Co ON inv.Co_ID = Co.Co_Id LEFT OUTER JOIN
                                              Common_DocumentType AS doc ON invdet.DocumentType_ID = doc.DocumentType_ID
                       WHERE      (inv.Status_ID <> 4) AND (invdet.DocumentType_ID IN (1, 4))
                       UNION ALL
                       SELECT     inv.Co_ID, Co.Co_Code, invdet.Item_ID, item.Item_Code, cat.Item_Desc AS Item_Category, item.Item_Desc, invdet.Warehouse_ID, 
                                             invdet.Inventory_Qty_Size01, invdet.Inventory_Qty_Size02, invdet.Inventory_Qty_Size03, invdet.Inventory_Qty_Size04, 
                                             invdet.Inventory_Qty_Size05, invdet.Inventory_Qty_Size06, invdet.Inventory_Qty_Size07, invdet.Inventory_Qty_Size08, 
                                             invdet.Inventory_Qty_Size09, invdet.Inventory_Qty_Size10, invdet.Inventory_Qty_Size11, invdet.Inventory_Qty_Size12, 
                                             invdet.Inventory_Qty_Size13
                       FROM         Inv_Item AS cat RIGHT OUTER JOIN
                                             Inv_Item AS item ON cat.Co_ID = item.Co_ID AND LEFT(item.Item_Code, 2) = cat.Item_Code RIGHT OUTER JOIN
                                             Inventory_Detail AS invdet ON item.Co_ID = invdet.Co_ID AND item.Item_ID = invdet.Item_ID INNER JOIN
                                             Inventory AS inv ON inv.Co_ID = invdet.Co_ID AND inv.Inventory_ID = invdet.Inventory_ID LEFT OUTER JOIN
                                             Party AS Party_1 ON inv.Co_ID = Party_1.Co_ID AND inv.Party_ID = Party_1.Party_ID LEFT OUTER JOIN
                                             Base_Company AS Co ON inv.Co_ID = Co.Co_Id LEFT OUTER JOIN
                                             Common_DocumentType AS doc ON invdet.DocumentType_ID = doc.DocumentType_ID
                       WHERE     (inv.Status_ID <> 4) AND (invdet.DocumentType_ID IN (2, 3, 18))) AS a
GROUP BY Co_ID, Co_Code, Item_ID, Item_Code, Item_Category, Item_Desc