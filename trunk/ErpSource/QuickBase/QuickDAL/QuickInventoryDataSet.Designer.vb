'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("QuickInventoryDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class QuickInventoryDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableWarehouse As WarehouseDataTable
    
    Private tableInventorySalesInvoice As InventorySalesInvoiceDataTable
    
    Private tableItemSummary As ItemSummaryDataTable
    
    Private tableTemp_SalesInvoiceReport As Temp_SalesInvoiceReportDataTable
    
    Private tableInventoryDetail As InventoryDetailDataTable
    
    Private tableItem As ItemDataTable
    
    Private tableInventory As InventoryDataTable
    
    Private tableInvs_Inventory As Invs_InventoryDataTable
    
    Private tableInvs_InventoryDetail As Invs_InventoryDetailDataTable
    
    Private tableInvs_Item As Invs_ItemDataTable
    
    Private tableInvs_Inventory_SalesInvoice As Invs_Inventory_SalesInvoiceDataTable
    
    Private tableInvs_ItemSummary As Invs_ItemSummaryDataTable
    
    Private tableInv_ItemSize As Inv_ItemSizeDataTable
    
    Private tableStockInquiry As StockInquiryDataTable
    
    Private relationFK_Inv_SalesInvoice_Detail_Inv_Item As Global.System.Data.DataRelation
    
    Private relationFK_Inv_SalesInvoice_Detail_Inv_Item1 As Global.System.Data.DataRelation
    
    Private relationFK_Inv_SalesInvoice_Detail_Inv_Item2 As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Warehouse")) Is Nothing) Then
                MyBase.Tables.Add(New WarehouseDataTable(ds.Tables("Warehouse")))
            End If
            If (Not (ds.Tables("InventorySalesInvoice")) Is Nothing) Then
                MyBase.Tables.Add(New InventorySalesInvoiceDataTable(ds.Tables("InventorySalesInvoice")))
            End If
            If (Not (ds.Tables("ItemSummary")) Is Nothing) Then
                MyBase.Tables.Add(New ItemSummaryDataTable(ds.Tables("ItemSummary")))
            End If
            If (Not (ds.Tables("Temp_SalesInvoiceReport")) Is Nothing) Then
                MyBase.Tables.Add(New Temp_SalesInvoiceReportDataTable(ds.Tables("Temp_SalesInvoiceReport")))
            End If
            If (Not (ds.Tables("InventoryDetail")) Is Nothing) Then
                MyBase.Tables.Add(New InventoryDetailDataTable(ds.Tables("InventoryDetail")))
            End If
            If (Not (ds.Tables("Item")) Is Nothing) Then
                MyBase.Tables.Add(New ItemDataTable(ds.Tables("Item")))
            End If
            If (Not (ds.Tables("Inventory")) Is Nothing) Then
                MyBase.Tables.Add(New InventoryDataTable(ds.Tables("Inventory")))
            End If
            If (Not (ds.Tables("Invs_Inventory")) Is Nothing) Then
                MyBase.Tables.Add(New Invs_InventoryDataTable(ds.Tables("Invs_Inventory")))
            End If
            If (Not (ds.Tables("Invs_InventoryDetail")) Is Nothing) Then
                MyBase.Tables.Add(New Invs_InventoryDetailDataTable(ds.Tables("Invs_InventoryDetail")))
            End If
            If (Not (ds.Tables("Invs_Item")) Is Nothing) Then
                MyBase.Tables.Add(New Invs_ItemDataTable(ds.Tables("Invs_Item")))
            End If
            If (Not (ds.Tables("Invs_Inventory_SalesInvoice")) Is Nothing) Then
                MyBase.Tables.Add(New Invs_Inventory_SalesInvoiceDataTable(ds.Tables("Invs_Inventory_SalesInvoice")))
            End If
            If (Not (ds.Tables("Invs_ItemSummary")) Is Nothing) Then
                MyBase.Tables.Add(New Invs_ItemSummaryDataTable(ds.Tables("Invs_ItemSummary")))
            End If
            If (Not (ds.Tables("Inv_ItemSize")) Is Nothing) Then
                MyBase.Tables.Add(New Inv_ItemSizeDataTable(ds.Tables("Inv_ItemSize")))
            End If
            If (Not (ds.Tables("StockInquiry")) Is Nothing) Then
                MyBase.Tables.Add(New StockInquiryDataTable(ds.Tables("StockInquiry")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Warehouse() As WarehouseDataTable
        Get
            Return Me.tableWarehouse
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property InventorySalesInvoice() As InventorySalesInvoiceDataTable
        Get
            Return Me.tableInventorySalesInvoice
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ItemSummary() As ItemSummaryDataTable
        Get
            Return Me.tableItemSummary
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Temp_SalesInvoiceReport() As Temp_SalesInvoiceReportDataTable
        Get
            Return Me.tableTemp_SalesInvoiceReport
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property InventoryDetail() As InventoryDetailDataTable
        Get
            Return Me.tableInventoryDetail
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Item() As ItemDataTable
        Get
            Return Me.tableItem
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Inventory() As InventoryDataTable
        Get
            Return Me.tableInventory
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Invs_Inventory() As Invs_InventoryDataTable
        Get
            Return Me.tableInvs_Inventory
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Invs_InventoryDetail() As Invs_InventoryDetailDataTable
        Get
            Return Me.tableInvs_InventoryDetail
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Invs_Item() As Invs_ItemDataTable
        Get
            Return Me.tableInvs_Item
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Invs_Inventory_SalesInvoice() As Invs_Inventory_SalesInvoiceDataTable
        Get
            Return Me.tableInvs_Inventory_SalesInvoice
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Invs_ItemSummary() As Invs_ItemSummaryDataTable
        Get
            Return Me.tableInvs_ItemSummary
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Inv_ItemSize() As Inv_ItemSizeDataTable
        Get
            Return Me.tableInv_ItemSize
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property StockInquiry() As StockInquiryDataTable
        Get
            Return Me.tableStockInquiry
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As QuickInventoryDataSet = CType(MyBase.Clone,QuickInventoryDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("Warehouse")) Is Nothing) Then
                MyBase.Tables.Add(New WarehouseDataTable(ds.Tables("Warehouse")))
            End If
            If (Not (ds.Tables("InventorySalesInvoice")) Is Nothing) Then
                MyBase.Tables.Add(New InventorySalesInvoiceDataTable(ds.Tables("InventorySalesInvoice")))
            End If
            If (Not (ds.Tables("ItemSummary")) Is Nothing) Then
                MyBase.Tables.Add(New ItemSummaryDataTable(ds.Tables("ItemSummary")))
            End If
            If (Not (ds.Tables("Temp_SalesInvoiceReport")) Is Nothing) Then
                MyBase.Tables.Add(New Temp_SalesInvoiceReportDataTable(ds.Tables("Temp_SalesInvoiceReport")))
            End If
            If (Not (ds.Tables("InventoryDetail")) Is Nothing) Then
                MyBase.Tables.Add(New InventoryDetailDataTable(ds.Tables("InventoryDetail")))
            End If
            If (Not (ds.Tables("Item")) Is Nothing) Then
                MyBase.Tables.Add(New ItemDataTable(ds.Tables("Item")))
            End If
            If (Not (ds.Tables("Inventory")) Is Nothing) Then
                MyBase.Tables.Add(New InventoryDataTable(ds.Tables("Inventory")))
            End If
            If (Not (ds.Tables("Invs_Inventory")) Is Nothing) Then
                MyBase.Tables.Add(New Invs_InventoryDataTable(ds.Tables("Invs_Inventory")))
            End If
            If (Not (ds.Tables("Invs_InventoryDetail")) Is Nothing) Then
                MyBase.Tables.Add(New Invs_InventoryDetailDataTable(ds.Tables("Invs_InventoryDetail")))
            End If
            If (Not (ds.Tables("Invs_Item")) Is Nothing) Then
                MyBase.Tables.Add(New Invs_ItemDataTable(ds.Tables("Invs_Item")))
            End If
            If (Not (ds.Tables("Invs_Inventory_SalesInvoice")) Is Nothing) Then
                MyBase.Tables.Add(New Invs_Inventory_SalesInvoiceDataTable(ds.Tables("Invs_Inventory_SalesInvoice")))
            End If
            If (Not (ds.Tables("Invs_ItemSummary")) Is Nothing) Then
                MyBase.Tables.Add(New Invs_ItemSummaryDataTable(ds.Tables("Invs_ItemSummary")))
            End If
            If (Not (ds.Tables("Inv_ItemSize")) Is Nothing) Then
                MyBase.Tables.Add(New Inv_ItemSizeDataTable(ds.Tables("Inv_ItemSize")))
            End If
            If (Not (ds.Tables("StockInquiry")) Is Nothing) Then
                MyBase.Tables.Add(New StockInquiryDataTable(ds.Tables("StockInquiry")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableWarehouse = CType(MyBase.Tables("Warehouse"),WarehouseDataTable)
        If (initTable = true) Then
            If (Not (Me.tableWarehouse) Is Nothing) Then
                Me.tableWarehouse.InitVars
            End If
        End If
        Me.tableInventorySalesInvoice = CType(MyBase.Tables("InventorySalesInvoice"),InventorySalesInvoiceDataTable)
        If (initTable = true) Then
            If (Not (Me.tableInventorySalesInvoice) Is Nothing) Then
                Me.tableInventorySalesInvoice.InitVars
            End If
        End If
        Me.tableItemSummary = CType(MyBase.Tables("ItemSummary"),ItemSummaryDataTable)
        If (initTable = true) Then
            If (Not (Me.tableItemSummary) Is Nothing) Then
                Me.tableItemSummary.InitVars
            End If
        End If
        Me.tableTemp_SalesInvoiceReport = CType(MyBase.Tables("Temp_SalesInvoiceReport"),Temp_SalesInvoiceReportDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTemp_SalesInvoiceReport) Is Nothing) Then
                Me.tableTemp_SalesInvoiceReport.InitVars
            End If
        End If
        Me.tableInventoryDetail = CType(MyBase.Tables("InventoryDetail"),InventoryDetailDataTable)
        If (initTable = true) Then
            If (Not (Me.tableInventoryDetail) Is Nothing) Then
                Me.tableInventoryDetail.InitVars
            End If
        End If
        Me.tableItem = CType(MyBase.Tables("Item"),ItemDataTable)
        If (initTable = true) Then
            If (Not (Me.tableItem) Is Nothing) Then
                Me.tableItem.InitVars
            End If
        End If
        Me.tableInventory = CType(MyBase.Tables("Inventory"),InventoryDataTable)
        If (initTable = true) Then
            If (Not (Me.tableInventory) Is Nothing) Then
                Me.tableInventory.InitVars
            End If
        End If
        Me.tableInvs_Inventory = CType(MyBase.Tables("Invs_Inventory"),Invs_InventoryDataTable)
        If (initTable = true) Then
            If (Not (Me.tableInvs_Inventory) Is Nothing) Then
                Me.tableInvs_Inventory.InitVars
            End If
        End If
        Me.tableInvs_InventoryDetail = CType(MyBase.Tables("Invs_InventoryDetail"),Invs_InventoryDetailDataTable)
        If (initTable = true) Then
            If (Not (Me.tableInvs_InventoryDetail) Is Nothing) Then
                Me.tableInvs_InventoryDetail.InitVars
            End If
        End If
        Me.tableInvs_Item = CType(MyBase.Tables("Invs_Item"),Invs_ItemDataTable)
        If (initTable = true) Then
            If (Not (Me.tableInvs_Item) Is Nothing) Then
                Me.tableInvs_Item.InitVars
            End If
        End If
        Me.tableInvs_Inventory_SalesInvoice = CType(MyBase.Tables("Invs_Inventory_SalesInvoice"),Invs_Inventory_SalesInvoiceDataTable)
        If (initTable = true) Then
            If (Not (Me.tableInvs_Inventory_SalesInvoice) Is Nothing) Then
                Me.tableInvs_Inventory_SalesInvoice.InitVars
            End If
        End If
        Me.tableInvs_ItemSummary = CType(MyBase.Tables("Invs_ItemSummary"),Invs_ItemSummaryDataTable)
        If (initTable = true) Then
            If (Not (Me.tableInvs_ItemSummary) Is Nothing) Then
                Me.tableInvs_ItemSummary.InitVars
            End If
        End If
        Me.tableInv_ItemSize = CType(MyBase.Tables("Inv_ItemSize"),Inv_ItemSizeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableInv_ItemSize) Is Nothing) Then
                Me.tableInv_ItemSize.InitVars
            End If
        End If
        Me.tableStockInquiry = CType(MyBase.Tables("StockInquiry"),StockInquiryDataTable)
        If (initTable = true) Then
            If (Not (Me.tableStockInquiry) Is Nothing) Then
                Me.tableStockInquiry.InitVars
            End If
        End If
        Me.relationFK_Inv_SalesInvoice_Detail_Inv_Item = Me.Relations("FK_Inv_SalesInvoice_Detail_Inv_Item")
        Me.relationFK_Inv_SalesInvoice_Detail_Inv_Item1 = Me.Relations("FK_Inv_SalesInvoice_Detail_Inv_Item1")
        Me.relationFK_Inv_SalesInvoice_Detail_Inv_Item2 = Me.Relations("FK_Inv_SalesInvoice_Detail_Inv_Item2")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "QuickInventoryDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/QuickInventoryDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableWarehouse = New WarehouseDataTable()
        MyBase.Tables.Add(Me.tableWarehouse)
        Me.tableInventorySalesInvoice = New InventorySalesInvoiceDataTable()
        MyBase.Tables.Add(Me.tableInventorySalesInvoice)
        Me.tableItemSummary = New ItemSummaryDataTable()
        MyBase.Tables.Add(Me.tableItemSummary)
        Me.tableTemp_SalesInvoiceReport = New Temp_SalesInvoiceReportDataTable()
        MyBase.Tables.Add(Me.tableTemp_SalesInvoiceReport)
        Me.tableInventoryDetail = New InventoryDetailDataTable()
        MyBase.Tables.Add(Me.tableInventoryDetail)
        Me.tableItem = New ItemDataTable()
        MyBase.Tables.Add(Me.tableItem)
        Me.tableInventory = New InventoryDataTable()
        MyBase.Tables.Add(Me.tableInventory)
        Me.tableInvs_Inventory = New Invs_InventoryDataTable()
        MyBase.Tables.Add(Me.tableInvs_Inventory)
        Me.tableInvs_InventoryDetail = New Invs_InventoryDetailDataTable()
        MyBase.Tables.Add(Me.tableInvs_InventoryDetail)
        Me.tableInvs_Item = New Invs_ItemDataTable()
        MyBase.Tables.Add(Me.tableInvs_Item)
        Me.tableInvs_Inventory_SalesInvoice = New Invs_Inventory_SalesInvoiceDataTable()
        MyBase.Tables.Add(Me.tableInvs_Inventory_SalesInvoice)
        Me.tableInvs_ItemSummary = New Invs_ItemSummaryDataTable()
        MyBase.Tables.Add(Me.tableInvs_ItemSummary)
        Me.tableInv_ItemSize = New Inv_ItemSizeDataTable()
        MyBase.Tables.Add(Me.tableInv_ItemSize)
        Me.tableStockInquiry = New StockInquiryDataTable()
        MyBase.Tables.Add(Me.tableStockInquiry)
        Me.relationFK_Inv_SalesInvoice_Detail_Inv_Item = New Global.System.Data.DataRelation("FK_Inv_SalesInvoice_Detail_Inv_Item", New Global.System.Data.DataColumn() {Me.tableItem.Co_IDColumn, Me.tableItem.Item_IDColumn}, New Global.System.Data.DataColumn() {Me.tableInventoryDetail.Co_IDColumn, Me.tableInventoryDetail.Item_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_Inv_SalesInvoice_Detail_Inv_Item)
        Me.relationFK_Inv_SalesInvoice_Detail_Inv_Item1 = New Global.System.Data.DataRelation("FK_Inv_SalesInvoice_Detail_Inv_Item1", New Global.System.Data.DataColumn() {Me.tableItem.Co_IDColumn, Me.tableItem.Item_IDColumn}, New Global.System.Data.DataColumn() {Me.tableInvs_InventoryDetail.Co_IDColumn, Me.tableInvs_InventoryDetail.Item_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_Inv_SalesInvoice_Detail_Inv_Item1)
        Me.relationFK_Inv_SalesInvoice_Detail_Inv_Item2 = New Global.System.Data.DataRelation("FK_Inv_SalesInvoice_Detail_Inv_Item2", New Global.System.Data.DataColumn() {Me.tableInvs_Item.Co_IDColumn, Me.tableInvs_Item.Item_IDColumn}, New Global.System.Data.DataColumn() {Me.tableInventoryDetail.Co_IDColumn, Me.tableInventoryDetail.Item_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_Inv_SalesInvoice_Detail_Inv_Item2)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeWarehouse() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeInventorySalesInvoice() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeItemSummary() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTemp_SalesInvoiceReport() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeInventoryDetail() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeItem() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeInventory() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeInvs_Inventory() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeInvs_InventoryDetail() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeInvs_Item() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeInvs_Inventory_SalesInvoice() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeInvs_ItemSummary() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeInv_ItemSize() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeStockInquiry() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As QuickInventoryDataSet = New QuickInventoryDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub WarehouseRowChangeEventHandler(ByVal sender As Object, ByVal e As WarehouseRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub InventorySalesInvoiceRowChangeEventHandler(ByVal sender As Object, ByVal e As InventorySalesInvoiceRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ItemSummaryRowChangeEventHandler(ByVal sender As Object, ByVal e As ItemSummaryRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Temp_SalesInvoiceReportRowChangeEventHandler(ByVal sender As Object, ByVal e As Temp_SalesInvoiceReportRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub InventoryDetailRowChangeEventHandler(ByVal sender As Object, ByVal e As InventoryDetailRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ItemRowChangeEventHandler(ByVal sender As Object, ByVal e As ItemRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub InventoryRowChangeEventHandler(ByVal sender As Object, ByVal e As InventoryRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Invs_InventoryRowChangeEventHandler(ByVal sender As Object, ByVal e As Invs_InventoryRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Invs_InventoryDetailRowChangeEventHandler(ByVal sender As Object, ByVal e As Invs_InventoryDetailRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Invs_ItemRowChangeEventHandler(ByVal sender As Object, ByVal e As Invs_ItemRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Invs_Inventory_SalesInvoiceRowChangeEventHandler(ByVal sender As Object, ByVal e As Invs_Inventory_SalesInvoiceRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Invs_ItemSummaryRowChangeEventHandler(ByVal sender As Object, ByVal e As Invs_ItemSummaryRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Inv_ItemSizeRowChangeEventHandler(ByVal sender As Object, ByVal e As Inv_ItemSizeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub StockInquiryRowChangeEventHandler(ByVal sender As Object, ByVal e As StockInquiryRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class WarehouseDataTable
        Inherits Global.System.Data.TypedTableBase(Of WarehouseRow)
        
        Private columnCo_ID As Global.System.Data.DataColumn
        
        Private columnWarehouse_ID As Global.System.Data.DataColumn
        
        Private columnWarehouse_Name As Global.System.Data.DataColumn
        
        Private columnStamp_UserID As Global.System.Data.DataColumn
        
        Private columnStamp_DateTime As Global.System.Data.DataColumn
        
        Private columnUpload_DateTime As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Warehouse"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCo_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Warehouse_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWarehouse_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Warehouse_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWarehouse_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_UserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Upload_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpload_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As WarehouseRow
            Get
                Return CType(Me.Rows(index),WarehouseRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WarehouseRowChanging As WarehouseRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WarehouseRowChanged As WarehouseRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WarehouseRowDeleting As WarehouseRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WarehouseRowDeleted As WarehouseRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddWarehouseRow(ByVal row As WarehouseRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddWarehouseRow(ByVal Co_ID As Short, ByVal Warehouse_ID As Integer, ByVal Warehouse_Name As String, ByVal Stamp_UserID As Integer, ByVal Stamp_DateTime As Date, ByVal Upload_DateTime As Date) As WarehouseRow
            Dim rowWarehouseRow As WarehouseRow = CType(Me.NewRow,WarehouseRow)
            Dim columnValuesArray() As Object = New Object() {Co_ID, Warehouse_ID, Warehouse_Name, Stamp_UserID, Stamp_DateTime, Upload_DateTime}
            rowWarehouseRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowWarehouseRow)
            Return rowWarehouseRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCo_IDWarehouse_ID(ByVal Co_ID As Short, ByVal Warehouse_ID As Integer) As WarehouseRow
            Return CType(Me.Rows.Find(New Object() {Co_ID, Warehouse_ID}),WarehouseRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As WarehouseDataTable = CType(MyBase.Clone,WarehouseDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New WarehouseDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCo_ID = MyBase.Columns("Co_ID")
            Me.columnWarehouse_ID = MyBase.Columns("Warehouse_ID")
            Me.columnWarehouse_Name = MyBase.Columns("Warehouse_Name")
            Me.columnStamp_UserID = MyBase.Columns("Stamp_UserID")
            Me.columnStamp_DateTime = MyBase.Columns("Stamp_DateTime")
            Me.columnUpload_DateTime = MyBase.Columns("Upload_DateTime")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCo_ID = New Global.System.Data.DataColumn("Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCo_ID)
            Me.columnWarehouse_ID = New Global.System.Data.DataColumn("Warehouse_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWarehouse_ID)
            Me.columnWarehouse_Name = New Global.System.Data.DataColumn("Warehouse_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWarehouse_Name)
            Me.columnStamp_UserID = New Global.System.Data.DataColumn("Stamp_UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_UserID)
            Me.columnStamp_DateTime = New Global.System.Data.DataColumn("Stamp_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_DateTime)
            Me.columnUpload_DateTime = New Global.System.Data.DataColumn("Upload_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpload_DateTime)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCo_ID, Me.columnWarehouse_ID}, true))
            Me.columnCo_ID.AllowDBNull = false
            Me.columnWarehouse_ID.AllowDBNull = false
            Me.columnWarehouse_Name.AllowDBNull = false
            Me.columnWarehouse_Name.MaxLength = 100
            Me.columnStamp_UserID.AllowDBNull = false
            Me.columnStamp_DateTime.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewWarehouseRow() As WarehouseRow
            Return CType(Me.NewRow,WarehouseRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New WarehouseRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(WarehouseRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.WarehouseRowChangedEvent) Is Nothing) Then
                RaiseEvent WarehouseRowChanged(Me, New WarehouseRowChangeEvent(CType(e.Row,WarehouseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.WarehouseRowChangingEvent) Is Nothing) Then
                RaiseEvent WarehouseRowChanging(Me, New WarehouseRowChangeEvent(CType(e.Row,WarehouseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.WarehouseRowDeletedEvent) Is Nothing) Then
                RaiseEvent WarehouseRowDeleted(Me, New WarehouseRowChangeEvent(CType(e.Row,WarehouseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.WarehouseRowDeletingEvent) Is Nothing) Then
                RaiseEvent WarehouseRowDeleting(Me, New WarehouseRowChangeEvent(CType(e.Row,WarehouseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveWarehouseRow(ByVal row As WarehouseRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuickInventoryDataSet = New QuickInventoryDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "WarehouseDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class InventorySalesInvoiceDataTable
        Inherits Global.System.Data.TypedTableBase(Of InventorySalesInvoiceRow)
        
        Private columnCo_ID As Global.System.Data.DataColumn
        
        Private columnInventory_ID As Global.System.Data.DataColumn
        
        Private columnSalesMan_ID As Global.System.Data.DataColumn
        
        Private columnStamp_DateTime As Global.System.Data.DataColumn
        
        Private columnStamp_UserID As Global.System.Data.DataColumn
        
        Private columnDiscount As Global.System.Data.DataColumn
        
        Private columnSalesTax As Global.System.Data.DataColumn
        
        Private columnTotalCashReceived As Global.System.Data.DataColumn
        
        Private columnUpload_DateTime As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "InventorySalesInvoice"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCo_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SalesMan_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalesMan_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_UserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SalesTaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalesTax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalCashReceivedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalCashReceived
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Upload_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpload_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As InventorySalesInvoiceRow
            Get
                Return CType(Me.Rows(index),InventorySalesInvoiceRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event InventorySalesInvoiceRowChanging As InventorySalesInvoiceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event InventorySalesInvoiceRowChanged As InventorySalesInvoiceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event InventorySalesInvoiceRowDeleting As InventorySalesInvoiceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event InventorySalesInvoiceRowDeleted As InventorySalesInvoiceRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddInventorySalesInvoiceRow(ByVal row As InventorySalesInvoiceRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddInventorySalesInvoiceRow(ByVal Co_ID As Short, ByVal Inventory_ID As Integer, ByVal SalesMan_ID As Integer, ByVal Stamp_DateTime As Date, ByVal Stamp_UserID As Integer, ByVal Discount As Decimal, ByVal SalesTax As Decimal, ByVal TotalCashReceived As Decimal, ByVal Upload_DateTime As Date) As InventorySalesInvoiceRow
            Dim rowInventorySalesInvoiceRow As InventorySalesInvoiceRow = CType(Me.NewRow,InventorySalesInvoiceRow)
            Dim columnValuesArray() As Object = New Object() {Co_ID, Inventory_ID, SalesMan_ID, Stamp_DateTime, Stamp_UserID, Discount, SalesTax, TotalCashReceived, Upload_DateTime}
            rowInventorySalesInvoiceRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowInventorySalesInvoiceRow)
            Return rowInventorySalesInvoiceRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCo_IDInventory_ID(ByVal Co_ID As Short, ByVal Inventory_ID As Integer) As InventorySalesInvoiceRow
            Return CType(Me.Rows.Find(New Object() {Co_ID, Inventory_ID}),InventorySalesInvoiceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As InventorySalesInvoiceDataTable = CType(MyBase.Clone,InventorySalesInvoiceDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New InventorySalesInvoiceDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCo_ID = MyBase.Columns("Co_ID")
            Me.columnInventory_ID = MyBase.Columns("Inventory_ID")
            Me.columnSalesMan_ID = MyBase.Columns("SalesMan_ID")
            Me.columnStamp_DateTime = MyBase.Columns("Stamp_DateTime")
            Me.columnStamp_UserID = MyBase.Columns("Stamp_UserID")
            Me.columnDiscount = MyBase.Columns("Discount")
            Me.columnSalesTax = MyBase.Columns("SalesTax")
            Me.columnTotalCashReceived = MyBase.Columns("TotalCashReceived")
            Me.columnUpload_DateTime = MyBase.Columns("Upload_DateTime")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCo_ID = New Global.System.Data.DataColumn("Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCo_ID)
            Me.columnInventory_ID = New Global.System.Data.DataColumn("Inventory_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_ID)
            Me.columnSalesMan_ID = New Global.System.Data.DataColumn("SalesMan_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalesMan_ID)
            Me.columnStamp_DateTime = New Global.System.Data.DataColumn("Stamp_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_DateTime)
            Me.columnStamp_UserID = New Global.System.Data.DataColumn("Stamp_UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_UserID)
            Me.columnDiscount = New Global.System.Data.DataColumn("Discount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount)
            Me.columnSalesTax = New Global.System.Data.DataColumn("SalesTax", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalesTax)
            Me.columnTotalCashReceived = New Global.System.Data.DataColumn("TotalCashReceived", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalCashReceived)
            Me.columnUpload_DateTime = New Global.System.Data.DataColumn("Upload_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpload_DateTime)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCo_ID, Me.columnInventory_ID}, true))
            Me.columnCo_ID.AllowDBNull = false
            Me.columnInventory_ID.AllowDBNull = false
            Me.columnSalesMan_ID.AllowDBNull = false
            Me.columnStamp_DateTime.AllowDBNull = false
            Me.columnStamp_UserID.AllowDBNull = false
            Me.columnDiscount.AllowDBNull = false
            Me.columnSalesTax.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewInventorySalesInvoiceRow() As InventorySalesInvoiceRow
            Return CType(Me.NewRow,InventorySalesInvoiceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New InventorySalesInvoiceRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(InventorySalesInvoiceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.InventorySalesInvoiceRowChangedEvent) Is Nothing) Then
                RaiseEvent InventorySalesInvoiceRowChanged(Me, New InventorySalesInvoiceRowChangeEvent(CType(e.Row,InventorySalesInvoiceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.InventorySalesInvoiceRowChangingEvent) Is Nothing) Then
                RaiseEvent InventorySalesInvoiceRowChanging(Me, New InventorySalesInvoiceRowChangeEvent(CType(e.Row,InventorySalesInvoiceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.InventorySalesInvoiceRowDeletedEvent) Is Nothing) Then
                RaiseEvent InventorySalesInvoiceRowDeleted(Me, New InventorySalesInvoiceRowChangeEvent(CType(e.Row,InventorySalesInvoiceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.InventorySalesInvoiceRowDeletingEvent) Is Nothing) Then
                RaiseEvent InventorySalesInvoiceRowDeleting(Me, New InventorySalesInvoiceRowChangeEvent(CType(e.Row,InventorySalesInvoiceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveInventorySalesInvoiceRow(ByVal row As InventorySalesInvoiceRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuickInventoryDataSet = New QuickInventoryDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "InventorySalesInvoiceDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ItemSummaryDataTable
        Inherits Global.System.Data.TypedTableBase(Of ItemSummaryRow)
        
        Private columnCo_ID As Global.System.Data.DataColumn
        
        Private columnSource_First_ID As Global.System.Data.DataColumn
        
        Private columnSource_Second_ID As Global.System.Data.DataColumn
        
        Private columnSource_DocumentType_ID As Global.System.Data.DataColumn
        
        Private columnSummary_Type As Global.System.Data.DataColumn
        
        Private columnItemSummary_Size01 As Global.System.Data.DataColumn
        
        Private columnItemSummary_Size02 As Global.System.Data.DataColumn
        
        Private columnItemSummary_Size03 As Global.System.Data.DataColumn
        
        Private columnItemSummary_Size04 As Global.System.Data.DataColumn
        
        Private columnItemSummary_Size05 As Global.System.Data.DataColumn
        
        Private columnItemSummary_Size06 As Global.System.Data.DataColumn
        
        Private columnItemSummary_Size07 As Global.System.Data.DataColumn
        
        Private columnItemSummary_Size08 As Global.System.Data.DataColumn
        
        Private columnItemSummary_Size09 As Global.System.Data.DataColumn
        
        Private columnItemSummary_Size10 As Global.System.Data.DataColumn
        
        Private columnItemSummary_Size11 As Global.System.Data.DataColumn
        
        Private columnItemSummary_Size12 As Global.System.Data.DataColumn
        
        Private columnItemSummary_Size13 As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columnStamp_UserID As Global.System.Data.DataColumn
        
        Private columnStamp_DateTime As Global.System.Data.DataColumn
        
        Private columnUpload_DateTime As Global.System.Data.DataColumn
        
        Private columnWarehouse_ID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ItemSummary"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCo_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_First_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_First_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_Second_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_Second_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_DocumentType_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_DocumentType_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Summary_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSummary_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemSummary_Size01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemSummary_Size01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemSummary_Size02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemSummary_Size02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemSummary_Size03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemSummary_Size03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemSummary_Size04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemSummary_Size04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemSummary_Size05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemSummary_Size05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemSummary_Size06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemSummary_Size06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemSummary_Size07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemSummary_Size07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemSummary_Size08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemSummary_Size08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemSummary_Size09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemSummary_Size09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemSummary_Size10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemSummary_Size10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemSummary_Size11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemSummary_Size11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemSummary_Size12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemSummary_Size12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemSummary_Size13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemSummary_Size13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_UserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Upload_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpload_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Warehouse_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWarehouse_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ItemSummaryRow
            Get
                Return CType(Me.Rows(index),ItemSummaryRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ItemSummaryRowChanging As ItemSummaryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ItemSummaryRowChanged As ItemSummaryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ItemSummaryRowDeleting As ItemSummaryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ItemSummaryRowDeleted As ItemSummaryRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddItemSummaryRow(ByVal row As ItemSummaryRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddItemSummaryRow( _
                    ByVal Co_ID As Short,  _
                    ByVal Source_First_ID As Integer,  _
                    ByVal Source_Second_ID As Integer,  _
                    ByVal Source_DocumentType_ID As Integer,  _
                    ByVal Summary_Type As String,  _
                    ByVal ItemSummary_Size01 As Decimal,  _
                    ByVal ItemSummary_Size02 As Decimal,  _
                    ByVal ItemSummary_Size03 As Decimal,  _
                    ByVal ItemSummary_Size04 As Decimal,  _
                    ByVal ItemSummary_Size05 As Decimal,  _
                    ByVal ItemSummary_Size06 As Decimal,  _
                    ByVal ItemSummary_Size07 As Decimal,  _
                    ByVal ItemSummary_Size08 As Decimal,  _
                    ByVal ItemSummary_Size09 As Decimal,  _
                    ByVal ItemSummary_Size10 As Decimal,  _
                    ByVal ItemSummary_Size11 As Decimal,  _
                    ByVal ItemSummary_Size12 As Decimal,  _
                    ByVal ItemSummary_Size13 As Decimal,  _
                    ByVal Total As Decimal,  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Upload_DateTime As Date,  _
                    ByVal Warehouse_ID As Integer) As ItemSummaryRow
            Dim rowItemSummaryRow As ItemSummaryRow = CType(Me.NewRow,ItemSummaryRow)
            Dim columnValuesArray() As Object = New Object() {Co_ID, Source_First_ID, Source_Second_ID, Source_DocumentType_ID, Summary_Type, ItemSummary_Size01, ItemSummary_Size02, ItemSummary_Size03, ItemSummary_Size04, ItemSummary_Size05, ItemSummary_Size06, ItemSummary_Size07, ItemSummary_Size08, ItemSummary_Size09, ItemSummary_Size10, ItemSummary_Size11, ItemSummary_Size12, ItemSummary_Size13, Total, Stamp_UserID, Stamp_DateTime, Upload_DateTime, Warehouse_ID}
            rowItemSummaryRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowItemSummaryRow)
            Return rowItemSummaryRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBySource_DocumentType_IDSource_Second_IDSource_First_IDCo_ID(ByVal Source_DocumentType_ID As Integer, ByVal Source_Second_ID As Integer, ByVal Source_First_ID As Integer, ByVal Co_ID As Short) As ItemSummaryRow
            Return CType(Me.Rows.Find(New Object() {Source_DocumentType_ID, Source_Second_ID, Source_First_ID, Co_ID}),ItemSummaryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ItemSummaryDataTable = CType(MyBase.Clone,ItemSummaryDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ItemSummaryDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCo_ID = MyBase.Columns("Co_ID")
            Me.columnSource_First_ID = MyBase.Columns("Source_First_ID")
            Me.columnSource_Second_ID = MyBase.Columns("Source_Second_ID")
            Me.columnSource_DocumentType_ID = MyBase.Columns("Source_DocumentType_ID")
            Me.columnSummary_Type = MyBase.Columns("Summary_Type")
            Me.columnItemSummary_Size01 = MyBase.Columns("ItemSummary_Size01")
            Me.columnItemSummary_Size02 = MyBase.Columns("ItemSummary_Size02")
            Me.columnItemSummary_Size03 = MyBase.Columns("ItemSummary_Size03")
            Me.columnItemSummary_Size04 = MyBase.Columns("ItemSummary_Size04")
            Me.columnItemSummary_Size05 = MyBase.Columns("ItemSummary_Size05")
            Me.columnItemSummary_Size06 = MyBase.Columns("ItemSummary_Size06")
            Me.columnItemSummary_Size07 = MyBase.Columns("ItemSummary_Size07")
            Me.columnItemSummary_Size08 = MyBase.Columns("ItemSummary_Size08")
            Me.columnItemSummary_Size09 = MyBase.Columns("ItemSummary_Size09")
            Me.columnItemSummary_Size10 = MyBase.Columns("ItemSummary_Size10")
            Me.columnItemSummary_Size11 = MyBase.Columns("ItemSummary_Size11")
            Me.columnItemSummary_Size12 = MyBase.Columns("ItemSummary_Size12")
            Me.columnItemSummary_Size13 = MyBase.Columns("ItemSummary_Size13")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnStamp_UserID = MyBase.Columns("Stamp_UserID")
            Me.columnStamp_DateTime = MyBase.Columns("Stamp_DateTime")
            Me.columnUpload_DateTime = MyBase.Columns("Upload_DateTime")
            Me.columnWarehouse_ID = MyBase.Columns("Warehouse_ID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCo_ID = New Global.System.Data.DataColumn("Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCo_ID)
            Me.columnSource_First_ID = New Global.System.Data.DataColumn("Source_First_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_First_ID)
            Me.columnSource_Second_ID = New Global.System.Data.DataColumn("Source_Second_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_Second_ID)
            Me.columnSource_DocumentType_ID = New Global.System.Data.DataColumn("Source_DocumentType_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_DocumentType_ID)
            Me.columnSummary_Type = New Global.System.Data.DataColumn("Summary_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSummary_Type)
            Me.columnItemSummary_Size01 = New Global.System.Data.DataColumn("ItemSummary_Size01", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemSummary_Size01)
            Me.columnItemSummary_Size02 = New Global.System.Data.DataColumn("ItemSummary_Size02", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemSummary_Size02)
            Me.columnItemSummary_Size03 = New Global.System.Data.DataColumn("ItemSummary_Size03", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemSummary_Size03)
            Me.columnItemSummary_Size04 = New Global.System.Data.DataColumn("ItemSummary_Size04", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemSummary_Size04)
            Me.columnItemSummary_Size05 = New Global.System.Data.DataColumn("ItemSummary_Size05", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemSummary_Size05)
            Me.columnItemSummary_Size06 = New Global.System.Data.DataColumn("ItemSummary_Size06", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemSummary_Size06)
            Me.columnItemSummary_Size07 = New Global.System.Data.DataColumn("ItemSummary_Size07", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemSummary_Size07)
            Me.columnItemSummary_Size08 = New Global.System.Data.DataColumn("ItemSummary_Size08", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemSummary_Size08)
            Me.columnItemSummary_Size09 = New Global.System.Data.DataColumn("ItemSummary_Size09", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemSummary_Size09)
            Me.columnItemSummary_Size10 = New Global.System.Data.DataColumn("ItemSummary_Size10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemSummary_Size10)
            Me.columnItemSummary_Size11 = New Global.System.Data.DataColumn("ItemSummary_Size11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemSummary_Size11)
            Me.columnItemSummary_Size12 = New Global.System.Data.DataColumn("ItemSummary_Size12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemSummary_Size12)
            Me.columnItemSummary_Size13 = New Global.System.Data.DataColumn("ItemSummary_Size13", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemSummary_Size13)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnStamp_UserID = New Global.System.Data.DataColumn("Stamp_UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_UserID)
            Me.columnStamp_DateTime = New Global.System.Data.DataColumn("Stamp_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_DateTime)
            Me.columnUpload_DateTime = New Global.System.Data.DataColumn("Upload_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpload_DateTime)
            Me.columnWarehouse_ID = New Global.System.Data.DataColumn("Warehouse_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWarehouse_ID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSource_DocumentType_ID, Me.columnSource_Second_ID, Me.columnSource_First_ID, Me.columnCo_ID}, true))
            Me.columnCo_ID.AllowDBNull = false
            Me.columnSource_First_ID.AllowDBNull = false
            Me.columnSource_Second_ID.AllowDBNull = false
            Me.columnSource_DocumentType_ID.AllowDBNull = false
            Me.columnItemSummary_Size01.AllowDBNull = false
            Me.columnItemSummary_Size02.AllowDBNull = false
            Me.columnItemSummary_Size03.AllowDBNull = false
            Me.columnItemSummary_Size04.AllowDBNull = false
            Me.columnItemSummary_Size05.AllowDBNull = false
            Me.columnItemSummary_Size06.AllowDBNull = false
            Me.columnItemSummary_Size07.AllowDBNull = false
            Me.columnItemSummary_Size08.AllowDBNull = false
            Me.columnItemSummary_Size09.AllowDBNull = false
            Me.columnItemSummary_Size10.AllowDBNull = false
            Me.columnItemSummary_Size11.AllowDBNull = false
            Me.columnItemSummary_Size12.AllowDBNull = false
            Me.columnItemSummary_Size13.AllowDBNull = false
            Me.columnTotal.ReadOnly = true
            Me.columnStamp_UserID.AllowDBNull = false
            Me.columnStamp_DateTime.AllowDBNull = false
            Me.columnWarehouse_ID.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewItemSummaryRow() As ItemSummaryRow
            Return CType(Me.NewRow,ItemSummaryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ItemSummaryRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ItemSummaryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ItemSummaryRowChangedEvent) Is Nothing) Then
                RaiseEvent ItemSummaryRowChanged(Me, New ItemSummaryRowChangeEvent(CType(e.Row,ItemSummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ItemSummaryRowChangingEvent) Is Nothing) Then
                RaiseEvent ItemSummaryRowChanging(Me, New ItemSummaryRowChangeEvent(CType(e.Row,ItemSummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ItemSummaryRowDeletedEvent) Is Nothing) Then
                RaiseEvent ItemSummaryRowDeleted(Me, New ItemSummaryRowChangeEvent(CType(e.Row,ItemSummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ItemSummaryRowDeletingEvent) Is Nothing) Then
                RaiseEvent ItemSummaryRowDeleting(Me, New ItemSummaryRowChangeEvent(CType(e.Row,ItemSummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveItemSummaryRow(ByVal row As ItemSummaryRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuickInventoryDataSet = New QuickInventoryDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ItemSummaryDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Temp_SalesInvoiceReportDataTable
        Inherits Global.System.Data.TypedTableBase(Of Temp_SalesInvoiceReportRow)
        
        Private columnCo_ID As Global.System.Data.DataColumn
        
        Private columnCo_Desc As Global.System.Data.DataColumn
        
        Private columnAddress_Desc As Global.System.Data.DataColumn
        
        Private columnInventory_Date As Global.System.Data.DataColumn
        
        Private columnParty_ID As Global.System.Data.DataColumn
        
        Private columnParty_Desc As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnDocumentType_ID As Global.System.Data.DataColumn
        
        Private columnItem_ID As Global.System.Data.DataColumn
        
        Private columnItem_Code As Global.System.Data.DataColumn
        
        Private columnItem_Desc As Global.System.Data.DataColumn
        
        Private columnSize_Desc As Global.System.Data.DataColumn
        
        Private columnRate As Global.System.Data.DataColumn
        
        Private columnQty As Global.System.Data.DataColumn
        
        Private columnDiscount As Global.System.Data.DataColumn
        
        Private columnSalesTax As Global.System.Data.DataColumn
        
        Private columnInventory_No As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Temp_SalesInvoiceReport"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCo_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Co_DescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCo_Desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Address_DescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress_Desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Party_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParty_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Party_DescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParty_Desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DocumentType_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumentType_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_DescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Size_DescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSize_Desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SalesTaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalesTax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Temp_SalesInvoiceReportRow
            Get
                Return CType(Me.Rows(index),Temp_SalesInvoiceReportRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Temp_SalesInvoiceReportRowChanging As Temp_SalesInvoiceReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Temp_SalesInvoiceReportRowChanged As Temp_SalesInvoiceReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Temp_SalesInvoiceReportRowDeleting As Temp_SalesInvoiceReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Temp_SalesInvoiceReportRowDeleted As Temp_SalesInvoiceReportRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTemp_SalesInvoiceReportRow(ByVal row As Temp_SalesInvoiceReportRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTemp_SalesInvoiceReportRow( _
                    ByVal Co_ID As Short,  _
                    ByVal Co_Desc As String,  _
                    ByVal Address_Desc As String,  _
                    ByVal Inventory_Date As Date,  _
                    ByVal Party_ID As Integer,  _
                    ByVal Party_Desc As String,  _
                    ByVal Remarks As String,  _
                    ByVal DocumentType_ID As Short,  _
                    ByVal Item_ID As Integer,  _
                    ByVal Item_Code As String,  _
                    ByVal Item_Desc As String,  _
                    ByVal Size_Desc As String,  _
                    ByVal Rate As Decimal,  _
                    ByVal Qty As Decimal,  _
                    ByVal Discount As Decimal,  _
                    ByVal SalesTax As Decimal,  _
                    ByVal Inventory_No As String) As Temp_SalesInvoiceReportRow
            Dim rowTemp_SalesInvoiceReportRow As Temp_SalesInvoiceReportRow = CType(Me.NewRow,Temp_SalesInvoiceReportRow)
            Dim columnValuesArray() As Object = New Object() {Co_ID, Co_Desc, Address_Desc, Inventory_Date, Party_ID, Party_Desc, Remarks, DocumentType_ID, Item_ID, Item_Code, Item_Desc, Size_Desc, Rate, Qty, Discount, SalesTax, Inventory_No}
            rowTemp_SalesInvoiceReportRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTemp_SalesInvoiceReportRow)
            Return rowTemp_SalesInvoiceReportRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Temp_SalesInvoiceReportDataTable = CType(MyBase.Clone,Temp_SalesInvoiceReportDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Temp_SalesInvoiceReportDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCo_ID = MyBase.Columns("Co_ID")
            Me.columnCo_Desc = MyBase.Columns("Co_Desc")
            Me.columnAddress_Desc = MyBase.Columns("Address_Desc")
            Me.columnInventory_Date = MyBase.Columns("Inventory_Date")
            Me.columnParty_ID = MyBase.Columns("Party_ID")
            Me.columnParty_Desc = MyBase.Columns("Party_Desc")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnDocumentType_ID = MyBase.Columns("DocumentType_ID")
            Me.columnItem_ID = MyBase.Columns("Item_ID")
            Me.columnItem_Code = MyBase.Columns("Item_Code")
            Me.columnItem_Desc = MyBase.Columns("Item_Desc")
            Me.columnSize_Desc = MyBase.Columns("Size_Desc")
            Me.columnRate = MyBase.Columns("Rate")
            Me.columnQty = MyBase.Columns("Qty")
            Me.columnDiscount = MyBase.Columns("Discount")
            Me.columnSalesTax = MyBase.Columns("SalesTax")
            Me.columnInventory_No = MyBase.Columns("Inventory_No")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCo_ID = New Global.System.Data.DataColumn("Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCo_ID)
            Me.columnCo_Desc = New Global.System.Data.DataColumn("Co_Desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCo_Desc)
            Me.columnAddress_Desc = New Global.System.Data.DataColumn("Address_Desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress_Desc)
            Me.columnInventory_Date = New Global.System.Data.DataColumn("Inventory_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Date)
            Me.columnParty_ID = New Global.System.Data.DataColumn("Party_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParty_ID)
            Me.columnParty_Desc = New Global.System.Data.DataColumn("Party_Desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParty_Desc)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnDocumentType_ID = New Global.System.Data.DataColumn("DocumentType_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumentType_ID)
            Me.columnItem_ID = New Global.System.Data.DataColumn("Item_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_ID)
            Me.columnItem_Code = New Global.System.Data.DataColumn("Item_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Code)
            Me.columnItem_Desc = New Global.System.Data.DataColumn("Item_Desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Desc)
            Me.columnSize_Desc = New Global.System.Data.DataColumn("Size_Desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSize_Desc)
            Me.columnRate = New Global.System.Data.DataColumn("Rate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRate)
            Me.columnQty = New Global.System.Data.DataColumn("Qty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty)
            Me.columnDiscount = New Global.System.Data.DataColumn("Discount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount)
            Me.columnSalesTax = New Global.System.Data.DataColumn("SalesTax", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalesTax)
            Me.columnInventory_No = New Global.System.Data.DataColumn("Inventory_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_No)
            Me.columnCo_ID.AllowDBNull = false
            Me.columnCo_Desc.AllowDBNull = false
            Me.columnCo_Desc.MaxLength = 200
            Me.columnAddress_Desc.AllowDBNull = false
            Me.columnAddress_Desc.MaxLength = 300
            Me.columnInventory_Date.AllowDBNull = false
            Me.columnParty_ID.AllowDBNull = false
            Me.columnParty_Desc.AllowDBNull = false
            Me.columnParty_Desc.MaxLength = 300
            Me.columnRemarks.AllowDBNull = false
            Me.columnRemarks.MaxLength = 300
            Me.columnDocumentType_ID.AllowDBNull = false
            Me.columnItem_ID.AllowDBNull = false
            Me.columnItem_Code.AllowDBNull = false
            Me.columnItem_Code.MaxLength = 50
            Me.columnItem_Desc.AllowDBNull = false
            Me.columnItem_Desc.MaxLength = 50
            Me.columnSize_Desc.AllowDBNull = false
            Me.columnSize_Desc.MaxLength = 50
            Me.columnRate.AllowDBNull = false
            Me.columnQty.AllowDBNull = false
            Me.columnDiscount.AllowDBNull = false
            Me.columnSalesTax.AllowDBNull = false
            Me.columnInventory_No.AllowDBNull = false
            Me.columnInventory_No.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTemp_SalesInvoiceReportRow() As Temp_SalesInvoiceReportRow
            Return CType(Me.NewRow,Temp_SalesInvoiceReportRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Temp_SalesInvoiceReportRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Temp_SalesInvoiceReportRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Temp_SalesInvoiceReportRowChangedEvent) Is Nothing) Then
                RaiseEvent Temp_SalesInvoiceReportRowChanged(Me, New Temp_SalesInvoiceReportRowChangeEvent(CType(e.Row,Temp_SalesInvoiceReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Temp_SalesInvoiceReportRowChangingEvent) Is Nothing) Then
                RaiseEvent Temp_SalesInvoiceReportRowChanging(Me, New Temp_SalesInvoiceReportRowChangeEvent(CType(e.Row,Temp_SalesInvoiceReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Temp_SalesInvoiceReportRowDeletedEvent) Is Nothing) Then
                RaiseEvent Temp_SalesInvoiceReportRowDeleted(Me, New Temp_SalesInvoiceReportRowChangeEvent(CType(e.Row,Temp_SalesInvoiceReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Temp_SalesInvoiceReportRowDeletingEvent) Is Nothing) Then
                RaiseEvent Temp_SalesInvoiceReportRowDeleting(Me, New Temp_SalesInvoiceReportRowChangeEvent(CType(e.Row,Temp_SalesInvoiceReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTemp_SalesInvoiceReportRow(ByVal row As Temp_SalesInvoiceReportRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuickInventoryDataSet = New QuickInventoryDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Temp_SalesInvoiceReportDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class InventoryDetailDataTable
        Inherits Global.System.Data.TypedTableBase(Of InventoryDetailRow)
        
        Private columnCo_ID As Global.System.Data.DataColumn
        
        Private columnInventory_ID As Global.System.Data.DataColumn
        
        Private columnInventoryDetail_ID As Global.System.Data.DataColumn
        
        Private columnDocumentType_ID As Global.System.Data.DataColumn
        
        Private columnItem_ID As Global.System.Data.DataColumn
        
        Private columnItem_Code As Global.System.Data.DataColumn
        
        Private columnItem_Desc As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size01 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size02 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size03 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size04 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size05 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size06 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size07 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size08 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size09 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size10 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size11 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size12 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size13 As Global.System.Data.DataColumn
        
        Private columnInventory_Rate_Size01 As Global.System.Data.DataColumn
        
        Private columnInventory_Rate_Size02 As Global.System.Data.DataColumn
        
        Private columnInventory_Rate_Size03 As Global.System.Data.DataColumn
        
        Private columnInventory_Rate_Size04 As Global.System.Data.DataColumn
        
        Private columnInventory_Rate_Size05 As Global.System.Data.DataColumn
        
        Private columnInventory_Rate_Size06 As Global.System.Data.DataColumn
        
        Private columnInventory_Rate_Size07 As Global.System.Data.DataColumn
        
        Private columnInventory_Rate_Size08 As Global.System.Data.DataColumn
        
        Private columnInventory_Rate_Size09 As Global.System.Data.DataColumn
        
        Private columnInventory_Rate_Size10 As Global.System.Data.DataColumn
        
        Private columnInventory_Rate_Size11 As Global.System.Data.DataColumn
        
        Private columnInventory_Rate_Size12 As Global.System.Data.DataColumn
        
        Private columnInventory_Rate_Size13 As Global.System.Data.DataColumn
        
        Private columnStamp_DateTime As Global.System.Data.DataColumn
        
        Private columnStamp_UserID As Global.System.Data.DataColumn
        
        Private columnSource_DocumentType_ID As Global.System.Data.DataColumn
        
        Private columnSource_Document_Co_ID As Global.System.Data.DataColumn
        
        Private columnSource_Document_No As Global.System.Data.DataColumn
        
        Private columnTotalQty As Global.System.Data.DataColumn
        
        Private columnTotalAmount As Global.System.Data.DataColumn
        
        Private columnUpload_DateTime As Global.System.Data.DataColumn
        
        Private columnDiscount As Global.System.Data.DataColumn
        
        Private columnSalesTax As Global.System.Data.DataColumn
        
        Private columnWarehouse_ID As Global.System.Data.DataColumn
        
        Private columnRecordStatus_ID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "InventoryDetail"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCo_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InventoryDetail_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventoryDetail_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DocumentType_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumentType_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_DescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Rate_Size01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Rate_Size01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Rate_Size02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Rate_Size02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Rate_Size03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Rate_Size03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Rate_Size04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Rate_Size04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Rate_Size05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Rate_Size05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Rate_Size06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Rate_Size06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Rate_Size07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Rate_Size07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Rate_Size08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Rate_Size08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Rate_Size09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Rate_Size09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Rate_Size10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Rate_Size10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Rate_Size11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Rate_Size11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Rate_Size12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Rate_Size12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Rate_Size13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Rate_Size13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_UserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_DocumentType_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_DocumentType_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_Document_Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_Document_Co_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_Document_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_Document_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Upload_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpload_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SalesTaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalesTax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Warehouse_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWarehouse_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RecordStatus_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecordStatus_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As InventoryDetailRow
            Get
                Return CType(Me.Rows(index),InventoryDetailRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event InventoryDetailRowChanging As InventoryDetailRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event InventoryDetailRowChanged As InventoryDetailRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event InventoryDetailRowDeleting As InventoryDetailRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event InventoryDetailRowDeleted As InventoryDetailRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddInventoryDetailRow(ByVal row As InventoryDetailRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddInventoryDetailRow( _
                    ByVal Co_ID As Short,  _
                    ByVal Inventory_ID As Integer,  _
                    ByVal InventoryDetail_ID As Integer,  _
                    ByVal DocumentType_ID As Short,  _
                    ByVal Item_ID As Integer,  _
                    ByVal Item_Code As String,  _
                    ByVal Item_Desc As String,  _
                    ByVal Inventory_Qty_Size01 As Decimal,  _
                    ByVal Inventory_Qty_Size02 As Decimal,  _
                    ByVal Inventory_Qty_Size03 As Decimal,  _
                    ByVal Inventory_Qty_Size04 As Decimal,  _
                    ByVal Inventory_Qty_Size05 As Decimal,  _
                    ByVal Inventory_Qty_Size06 As Decimal,  _
                    ByVal Inventory_Qty_Size07 As Decimal,  _
                    ByVal Inventory_Qty_Size08 As Decimal,  _
                    ByVal Inventory_Qty_Size09 As Decimal,  _
                    ByVal Inventory_Qty_Size10 As Decimal,  _
                    ByVal Inventory_Qty_Size11 As Decimal,  _
                    ByVal Inventory_Qty_Size12 As Decimal,  _
                    ByVal Inventory_Qty_Size13 As Decimal,  _
                    ByVal Inventory_Rate_Size01 As Decimal,  _
                    ByVal Inventory_Rate_Size02 As Decimal,  _
                    ByVal Inventory_Rate_Size03 As Decimal,  _
                    ByVal Inventory_Rate_Size04 As Decimal,  _
                    ByVal Inventory_Rate_Size05 As Decimal,  _
                    ByVal Inventory_Rate_Size06 As Decimal,  _
                    ByVal Inventory_Rate_Size07 As Decimal,  _
                    ByVal Inventory_Rate_Size08 As Decimal,  _
                    ByVal Inventory_Rate_Size09 As Decimal,  _
                    ByVal Inventory_Rate_Size10 As Decimal,  _
                    ByVal Inventory_Rate_Size11 As Decimal,  _
                    ByVal Inventory_Rate_Size12 As Decimal,  _
                    ByVal Inventory_Rate_Size13 As Decimal,  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal Source_DocumentType_ID As Short,  _
                    ByVal Source_Document_Co_ID As Short,  _
                    ByVal Source_Document_No As Integer,  _
                    ByVal TotalQty As Decimal,  _
                    ByVal TotalAmount As Decimal,  _
                    ByVal Upload_DateTime As Date,  _
                    ByVal Discount As Integer,  _
                    ByVal SalesTax As Integer,  _
                    ByVal Warehouse_ID As Integer,  _
                    ByVal RecordStatus_ID As Integer) As InventoryDetailRow
            Dim rowInventoryDetailRow As InventoryDetailRow = CType(Me.NewRow,InventoryDetailRow)
            Dim columnValuesArray() As Object = New Object() {Co_ID, Inventory_ID, InventoryDetail_ID, DocumentType_ID, Item_ID, Item_Code, Item_Desc, Inventory_Qty_Size01, Inventory_Qty_Size02, Inventory_Qty_Size03, Inventory_Qty_Size04, Inventory_Qty_Size05, Inventory_Qty_Size06, Inventory_Qty_Size07, Inventory_Qty_Size08, Inventory_Qty_Size09, Inventory_Qty_Size10, Inventory_Qty_Size11, Inventory_Qty_Size12, Inventory_Qty_Size13, Inventory_Rate_Size01, Inventory_Rate_Size02, Inventory_Rate_Size03, Inventory_Rate_Size04, Inventory_Rate_Size05, Inventory_Rate_Size06, Inventory_Rate_Size07, Inventory_Rate_Size08, Inventory_Rate_Size09, Inventory_Rate_Size10, Inventory_Rate_Size11, Inventory_Rate_Size12, Inventory_Rate_Size13, Stamp_DateTime, Stamp_UserID, Source_DocumentType_ID, Source_Document_Co_ID, Source_Document_No, TotalQty, TotalAmount, Upload_DateTime, Discount, SalesTax, Warehouse_ID, RecordStatus_ID}
            rowInventoryDetailRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowInventoryDetailRow)
            Return rowInventoryDetailRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCo_IDInventory_IDInventoryDetail_ID(ByVal Co_ID As Short, ByVal Inventory_ID As Integer, ByVal InventoryDetail_ID As Integer) As InventoryDetailRow
            Return CType(Me.Rows.Find(New Object() {Co_ID, Inventory_ID, InventoryDetail_ID}),InventoryDetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As InventoryDetailDataTable = CType(MyBase.Clone,InventoryDetailDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New InventoryDetailDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCo_ID = MyBase.Columns("Co_ID")
            Me.columnInventory_ID = MyBase.Columns("Inventory_ID")
            Me.columnInventoryDetail_ID = MyBase.Columns("InventoryDetail_ID")
            Me.columnDocumentType_ID = MyBase.Columns("DocumentType_ID")
            Me.columnItem_ID = MyBase.Columns("Item_ID")
            Me.columnItem_Code = MyBase.Columns("Item_Code")
            Me.columnItem_Desc = MyBase.Columns("Item_Desc")
            Me.columnInventory_Qty_Size01 = MyBase.Columns("Inventory_Qty_Size01")
            Me.columnInventory_Qty_Size02 = MyBase.Columns("Inventory_Qty_Size02")
            Me.columnInventory_Qty_Size03 = MyBase.Columns("Inventory_Qty_Size03")
            Me.columnInventory_Qty_Size04 = MyBase.Columns("Inventory_Qty_Size04")
            Me.columnInventory_Qty_Size05 = MyBase.Columns("Inventory_Qty_Size05")
            Me.columnInventory_Qty_Size06 = MyBase.Columns("Inventory_Qty_Size06")
            Me.columnInventory_Qty_Size07 = MyBase.Columns("Inventory_Qty_Size07")
            Me.columnInventory_Qty_Size08 = MyBase.Columns("Inventory_Qty_Size08")
            Me.columnInventory_Qty_Size09 = MyBase.Columns("Inventory_Qty_Size09")
            Me.columnInventory_Qty_Size10 = MyBase.Columns("Inventory_Qty_Size10")
            Me.columnInventory_Qty_Size11 = MyBase.Columns("Inventory_Qty_Size11")
            Me.columnInventory_Qty_Size12 = MyBase.Columns("Inventory_Qty_Size12")
            Me.columnInventory_Qty_Size13 = MyBase.Columns("Inventory_Qty_Size13")
            Me.columnInventory_Rate_Size01 = MyBase.Columns("Inventory_Rate_Size01")
            Me.columnInventory_Rate_Size02 = MyBase.Columns("Inventory_Rate_Size02")
            Me.columnInventory_Rate_Size03 = MyBase.Columns("Inventory_Rate_Size03")
            Me.columnInventory_Rate_Size04 = MyBase.Columns("Inventory_Rate_Size04")
            Me.columnInventory_Rate_Size05 = MyBase.Columns("Inventory_Rate_Size05")
            Me.columnInventory_Rate_Size06 = MyBase.Columns("Inventory_Rate_Size06")
            Me.columnInventory_Rate_Size07 = MyBase.Columns("Inventory_Rate_Size07")
            Me.columnInventory_Rate_Size08 = MyBase.Columns("Inventory_Rate_Size08")
            Me.columnInventory_Rate_Size09 = MyBase.Columns("Inventory_Rate_Size09")
            Me.columnInventory_Rate_Size10 = MyBase.Columns("Inventory_Rate_Size10")
            Me.columnInventory_Rate_Size11 = MyBase.Columns("Inventory_Rate_Size11")
            Me.columnInventory_Rate_Size12 = MyBase.Columns("Inventory_Rate_Size12")
            Me.columnInventory_Rate_Size13 = MyBase.Columns("Inventory_Rate_Size13")
            Me.columnStamp_DateTime = MyBase.Columns("Stamp_DateTime")
            Me.columnStamp_UserID = MyBase.Columns("Stamp_UserID")
            Me.columnSource_DocumentType_ID = MyBase.Columns("Source_DocumentType_ID")
            Me.columnSource_Document_Co_ID = MyBase.Columns("Source_Document_Co_ID")
            Me.columnSource_Document_No = MyBase.Columns("Source_Document_No")
            Me.columnTotalQty = MyBase.Columns("TotalQty")
            Me.columnTotalAmount = MyBase.Columns("TotalAmount")
            Me.columnUpload_DateTime = MyBase.Columns("Upload_DateTime")
            Me.columnDiscount = MyBase.Columns("Discount")
            Me.columnSalesTax = MyBase.Columns("SalesTax")
            Me.columnWarehouse_ID = MyBase.Columns("Warehouse_ID")
            Me.columnRecordStatus_ID = MyBase.Columns("RecordStatus_ID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCo_ID = New Global.System.Data.DataColumn("Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCo_ID)
            Me.columnInventory_ID = New Global.System.Data.DataColumn("Inventory_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_ID)
            Me.columnInventoryDetail_ID = New Global.System.Data.DataColumn("InventoryDetail_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventoryDetail_ID)
            Me.columnDocumentType_ID = New Global.System.Data.DataColumn("DocumentType_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumentType_ID)
            Me.columnItem_ID = New Global.System.Data.DataColumn("Item_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_ID)
            Me.columnItem_Code = New Global.System.Data.DataColumn("Item_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Code)
            Me.columnItem_Desc = New Global.System.Data.DataColumn("Item_Desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Desc)
            Me.columnInventory_Qty_Size01 = New Global.System.Data.DataColumn("Inventory_Qty_Size01", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size01)
            Me.columnInventory_Qty_Size02 = New Global.System.Data.DataColumn("Inventory_Qty_Size02", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size02)
            Me.columnInventory_Qty_Size03 = New Global.System.Data.DataColumn("Inventory_Qty_Size03", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size03)
            Me.columnInventory_Qty_Size04 = New Global.System.Data.DataColumn("Inventory_Qty_Size04", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size04)
            Me.columnInventory_Qty_Size05 = New Global.System.Data.DataColumn("Inventory_Qty_Size05", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size05)
            Me.columnInventory_Qty_Size06 = New Global.System.Data.DataColumn("Inventory_Qty_Size06", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size06)
            Me.columnInventory_Qty_Size07 = New Global.System.Data.DataColumn("Inventory_Qty_Size07", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size07)
            Me.columnInventory_Qty_Size08 = New Global.System.Data.DataColumn("Inventory_Qty_Size08", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size08)
            Me.columnInventory_Qty_Size09 = New Global.System.Data.DataColumn("Inventory_Qty_Size09", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size09)
            Me.columnInventory_Qty_Size10 = New Global.System.Data.DataColumn("Inventory_Qty_Size10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size10)
            Me.columnInventory_Qty_Size11 = New Global.System.Data.DataColumn("Inventory_Qty_Size11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size11)
            Me.columnInventory_Qty_Size12 = New Global.System.Data.DataColumn("Inventory_Qty_Size12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size12)
            Me.columnInventory_Qty_Size13 = New Global.System.Data.DataColumn("Inventory_Qty_Size13", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size13)
            Me.columnInventory_Rate_Size01 = New Global.System.Data.DataColumn("Inventory_Rate_Size01", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Rate_Size01)
            Me.columnInventory_Rate_Size02 = New Global.System.Data.DataColumn("Inventory_Rate_Size02", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Rate_Size02)
            Me.columnInventory_Rate_Size03 = New Global.System.Data.DataColumn("Inventory_Rate_Size03", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Rate_Size03)
            Me.columnInventory_Rate_Size04 = New Global.System.Data.DataColumn("Inventory_Rate_Size04", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Rate_Size04)
            Me.columnInventory_Rate_Size05 = New Global.System.Data.DataColumn("Inventory_Rate_Size05", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Rate_Size05)
            Me.columnInventory_Rate_Size06 = New Global.System.Data.DataColumn("Inventory_Rate_Size06", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Rate_Size06)
            Me.columnInventory_Rate_Size07 = New Global.System.Data.DataColumn("Inventory_Rate_Size07", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Rate_Size07)
            Me.columnInventory_Rate_Size08 = New Global.System.Data.DataColumn("Inventory_Rate_Size08", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Rate_Size08)
            Me.columnInventory_Rate_Size09 = New Global.System.Data.DataColumn("Inventory_Rate_Size09", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Rate_Size09)
            Me.columnInventory_Rate_Size10 = New Global.System.Data.DataColumn("Inventory_Rate_Size10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Rate_Size10)
            Me.columnInventory_Rate_Size11 = New Global.System.Data.DataColumn("Inventory_Rate_Size11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Rate_Size11)
            Me.columnInventory_Rate_Size12 = New Global.System.Data.DataColumn("Inventory_Rate_Size12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Rate_Size12)
            Me.columnInventory_Rate_Size13 = New Global.System.Data.DataColumn("Inventory_Rate_Size13", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Rate_Size13)
            Me.columnStamp_DateTime = New Global.System.Data.DataColumn("Stamp_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_DateTime)
            Me.columnStamp_UserID = New Global.System.Data.DataColumn("Stamp_UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_UserID)
            Me.columnSource_DocumentType_ID = New Global.System.Data.DataColumn("Source_DocumentType_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_DocumentType_ID)
            Me.columnSource_Document_Co_ID = New Global.System.Data.DataColumn("Source_Document_Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_Document_Co_ID)
            Me.columnSource_Document_No = New Global.System.Data.DataColumn("Source_Document_No", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_Document_No)
            Me.columnTotalQty = New Global.System.Data.DataColumn("TotalQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalQty)
            Me.columnTotalAmount = New Global.System.Data.DataColumn("TotalAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalAmount)
            Me.columnUpload_DateTime = New Global.System.Data.DataColumn("Upload_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpload_DateTime)
            Me.columnDiscount = New Global.System.Data.DataColumn("Discount", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount)
            Me.columnSalesTax = New Global.System.Data.DataColumn("SalesTax", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalesTax)
            Me.columnWarehouse_ID = New Global.System.Data.DataColumn("Warehouse_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWarehouse_ID)
            Me.columnRecordStatus_ID = New Global.System.Data.DataColumn("RecordStatus_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecordStatus_ID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCo_ID, Me.columnInventory_ID, Me.columnInventoryDetail_ID}, true))
            Me.columnCo_ID.AllowDBNull = false
            Me.columnInventory_ID.AllowDBNull = false
            Me.columnInventoryDetail_ID.AllowDBNull = false
            Me.columnDocumentType_ID.AllowDBNull = false
            Me.columnItem_ID.AllowDBNull = false
            Me.columnInventory_Qty_Size01.AllowDBNull = false
            Me.columnInventory_Qty_Size02.AllowDBNull = false
            Me.columnInventory_Qty_Size03.AllowDBNull = false
            Me.columnInventory_Qty_Size04.AllowDBNull = false
            Me.columnInventory_Qty_Size05.AllowDBNull = false
            Me.columnInventory_Qty_Size06.AllowDBNull = false
            Me.columnInventory_Qty_Size07.AllowDBNull = false
            Me.columnInventory_Qty_Size08.AllowDBNull = false
            Me.columnInventory_Qty_Size09.AllowDBNull = false
            Me.columnInventory_Qty_Size10.AllowDBNull = false
            Me.columnInventory_Qty_Size11.AllowDBNull = false
            Me.columnInventory_Qty_Size12.AllowDBNull = false
            Me.columnInventory_Qty_Size13.AllowDBNull = false
            Me.columnInventory_Rate_Size01.AllowDBNull = false
            Me.columnInventory_Rate_Size02.AllowDBNull = false
            Me.columnInventory_Rate_Size03.AllowDBNull = false
            Me.columnInventory_Rate_Size04.AllowDBNull = false
            Me.columnInventory_Rate_Size05.AllowDBNull = false
            Me.columnInventory_Rate_Size06.AllowDBNull = false
            Me.columnInventory_Rate_Size07.AllowDBNull = false
            Me.columnInventory_Rate_Size08.AllowDBNull = false
            Me.columnInventory_Rate_Size09.AllowDBNull = false
            Me.columnInventory_Rate_Size10.AllowDBNull = false
            Me.columnInventory_Rate_Size11.AllowDBNull = false
            Me.columnInventory_Rate_Size12.AllowDBNull = false
            Me.columnInventory_Rate_Size13.AllowDBNull = false
            Me.columnWarehouse_ID.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewInventoryDetailRow() As InventoryDetailRow
            Return CType(Me.NewRow,InventoryDetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New InventoryDetailRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(InventoryDetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.InventoryDetailRowChangedEvent) Is Nothing) Then
                RaiseEvent InventoryDetailRowChanged(Me, New InventoryDetailRowChangeEvent(CType(e.Row,InventoryDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.InventoryDetailRowChangingEvent) Is Nothing) Then
                RaiseEvent InventoryDetailRowChanging(Me, New InventoryDetailRowChangeEvent(CType(e.Row,InventoryDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.InventoryDetailRowDeletedEvent) Is Nothing) Then
                RaiseEvent InventoryDetailRowDeleted(Me, New InventoryDetailRowChangeEvent(CType(e.Row,InventoryDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.InventoryDetailRowDeletingEvent) Is Nothing) Then
                RaiseEvent InventoryDetailRowDeleting(Me, New InventoryDetailRowChangeEvent(CType(e.Row,InventoryDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveInventoryDetailRow(ByVal row As InventoryDetailRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuickInventoryDataSet = New QuickInventoryDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "InventoryDetailDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ItemDataTable
        Inherits Global.System.Data.TypedTableBase(Of ItemRow)
        
        Private columnCo_ID As Global.System.Data.DataColumn
        
        Private columnItem_ID As Global.System.Data.DataColumn
        
        Private columnItem_Code As Global.System.Data.DataColumn
        
        Private columnItem_Desc As Global.System.Data.DataColumn
        
        Private columnItem_SaleRate_Size01 As Global.System.Data.DataColumn
        
        Private columnItem_SaleRate_Size02 As Global.System.Data.DataColumn
        
        Private columnItem_SaleRate_Size03 As Global.System.Data.DataColumn
        
        Private columnItem_SaleRate_Size04 As Global.System.Data.DataColumn
        
        Private columnItem_SaleRate_Size05 As Global.System.Data.DataColumn
        
        Private columnItem_SaleRate_Size06 As Global.System.Data.DataColumn
        
        Private columnItem_SaleRate_Size07 As Global.System.Data.DataColumn
        
        Private columnItem_SaleRate_Size08 As Global.System.Data.DataColumn
        
        Private columnItem_SaleRate_Size09 As Global.System.Data.DataColumn
        
        Private columnItem_SaleRate_Size10 As Global.System.Data.DataColumn
        
        Private columnItem_SaleRate_Size11 As Global.System.Data.DataColumn
        
        Private columnItem_SaleRate_Size12 As Global.System.Data.DataColumn
        
        Private columnItem_SaleRate_Size13 As Global.System.Data.DataColumn
        
        Private columnStamp_UserID As Global.System.Data.DataColumn
        
        Private columnStamp_DateTime As Global.System.Data.DataColumn
        
        Private columnParent_Item_ID As Global.System.Data.DataColumn
        
        Private columnParty_ID As Global.System.Data.DataColumn
        
        Private columnAddress_ID As Global.System.Data.DataColumn
        
        Private columnUpload_DateTime As Global.System.Data.DataColumn
        
        Private columnItem_MinStock_Size0 As Global.System.Data.DataColumn
        
        Private columnItem_MinStock_Size1 As Global.System.Data.DataColumn
        
        Private columnItem_MinStock_Size2 As Global.System.Data.DataColumn
        
        Private columnItem_MinStock_Size3 As Global.System.Data.DataColumn
        
        Private columnItem_MinStock_Size4 As Global.System.Data.DataColumn
        
        Private columnItem_MinStock_Size5 As Global.System.Data.DataColumn
        
        Private columnItem_MinStock_Size6 As Global.System.Data.DataColumn
        
        Private columnItem_MinStock_Size7 As Global.System.Data.DataColumn
        
        Private columnItem_MinStock_Size8 As Global.System.Data.DataColumn
        
        Private columnItem_MinStock_Size9 As Global.System.Data.DataColumn
        
        Private columnItem_MinStock_Size10 As Global.System.Data.DataColumn
        
        Private columnItem_MinStock_Size11 As Global.System.Data.DataColumn
        
        Private columnItem_MinStock_Size12 As Global.System.Data.DataColumn
        
        Private columnItem_MinStock_Size13 As Global.System.Data.DataColumn
        
        Private columnTotalMinStockQty As Global.System.Data.DataColumn
        
        Private columnTotalMinStockAmount As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Item"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCo_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_DescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_SaleRate_Size01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_SaleRate_Size01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_SaleRate_Size02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_SaleRate_Size02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_SaleRate_Size03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_SaleRate_Size03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_SaleRate_Size04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_SaleRate_Size04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_SaleRate_Size05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_SaleRate_Size05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_SaleRate_Size06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_SaleRate_Size06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_SaleRate_Size07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_SaleRate_Size07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_SaleRate_Size08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_SaleRate_Size08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_SaleRate_Size09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_SaleRate_Size09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_SaleRate_Size10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_SaleRate_Size10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_SaleRate_Size11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_SaleRate_Size11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_SaleRate_Size12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_SaleRate_Size12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_SaleRate_Size13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_SaleRate_Size13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_UserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Parent_Item_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParent_Item_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Party_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParty_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Address_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Upload_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpload_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_MinStock_Size0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_MinStock_Size0
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_MinStock_Size1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_MinStock_Size1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_MinStock_Size2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_MinStock_Size2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_MinStock_Size3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_MinStock_Size3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_MinStock_Size4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_MinStock_Size4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_MinStock_Size5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_MinStock_Size5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_MinStock_Size6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_MinStock_Size6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_MinStock_Size7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_MinStock_Size7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_MinStock_Size8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_MinStock_Size8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_MinStock_Size9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_MinStock_Size9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_MinStock_Size10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_MinStock_Size10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_MinStock_Size11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_MinStock_Size11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_MinStock_Size12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_MinStock_Size12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_MinStock_Size13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_MinStock_Size13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalMinStockQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalMinStockQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalMinStockAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalMinStockAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ItemRow
            Get
                Return CType(Me.Rows(index),ItemRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ItemRowChanging As ItemRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ItemRowChanged As ItemRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ItemRowDeleting As ItemRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ItemRowDeleted As ItemRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddItemRow(ByVal row As ItemRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddItemRow( _
                    ByVal Co_ID As Short,  _
                    ByVal Item_ID As Integer,  _
                    ByVal Item_Code As String,  _
                    ByVal Item_Desc As String,  _
                    ByVal Item_SaleRate_Size01 As Decimal,  _
                    ByVal Item_SaleRate_Size02 As Decimal,  _
                    ByVal Item_SaleRate_Size03 As Decimal,  _
                    ByVal Item_SaleRate_Size04 As Decimal,  _
                    ByVal Item_SaleRate_Size05 As Decimal,  _
                    ByVal Item_SaleRate_Size06 As Decimal,  _
                    ByVal Item_SaleRate_Size07 As Decimal,  _
                    ByVal Item_SaleRate_Size08 As Decimal,  _
                    ByVal Item_SaleRate_Size09 As Decimal,  _
                    ByVal Item_SaleRate_Size10 As Decimal,  _
                    ByVal Item_SaleRate_Size11 As Decimal,  _
                    ByVal Item_SaleRate_Size12 As Decimal,  _
                    ByVal Item_SaleRate_Size13 As Decimal,  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Parent_Item_ID As Integer,  _
                    ByVal Party_ID As Integer,  _
                    ByVal Address_ID As Long,  _
                    ByVal Upload_DateTime As Date,  _
                    ByVal Item_MinStock_Size0 As Integer,  _
                    ByVal Item_MinStock_Size1 As Integer,  _
                    ByVal Item_MinStock_Size2 As Integer,  _
                    ByVal Item_MinStock_Size3 As Integer,  _
                    ByVal Item_MinStock_Size4 As Integer,  _
                    ByVal Item_MinStock_Size5 As Integer,  _
                    ByVal Item_MinStock_Size6 As Integer,  _
                    ByVal Item_MinStock_Size7 As Integer,  _
                    ByVal Item_MinStock_Size8 As Integer,  _
                    ByVal Item_MinStock_Size9 As Integer,  _
                    ByVal Item_MinStock_Size10 As Integer,  _
                    ByVal Item_MinStock_Size11 As Integer,  _
                    ByVal Item_MinStock_Size12 As Integer,  _
                    ByVal Item_MinStock_Size13 As Integer,  _
                    ByVal TotalMinStockQty As String,  _
                    ByVal TotalMinStockAmount As String) As ItemRow
            Dim rowItemRow As ItemRow = CType(Me.NewRow,ItemRow)
            Dim columnValuesArray() As Object = New Object() {Co_ID, Item_ID, Item_Code, Item_Desc, Item_SaleRate_Size01, Item_SaleRate_Size02, Item_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Size06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_SaleRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, Stamp_UserID, Stamp_DateTime, Parent_Item_ID, Party_ID, Address_ID, Upload_DateTime, Item_MinStock_Size0, Item_MinStock_Size1, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStock_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_MinStock_Size8, Item_MinStock_Size9, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size12, Item_MinStock_Size13, TotalMinStockQty, TotalMinStockAmount}
            rowItemRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowItemRow)
            Return rowItemRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCo_IDItem_ID(ByVal Co_ID As Short, ByVal Item_ID As Integer) As ItemRow
            Return CType(Me.Rows.Find(New Object() {Co_ID, Item_ID}),ItemRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ItemDataTable = CType(MyBase.Clone,ItemDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ItemDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCo_ID = MyBase.Columns("Co_ID")
            Me.columnItem_ID = MyBase.Columns("Item_ID")
            Me.columnItem_Code = MyBase.Columns("Item_Code")
            Me.columnItem_Desc = MyBase.Columns("Item_Desc")
            Me.columnItem_SaleRate_Size01 = MyBase.Columns("Item_SaleRate_Size01")
            Me.columnItem_SaleRate_Size02 = MyBase.Columns("Item_SaleRate_Size02")
            Me.columnItem_SaleRate_Size03 = MyBase.Columns("Item_SaleRate_Size03")
            Me.columnItem_SaleRate_Size04 = MyBase.Columns("Item_SaleRate_Size04")
            Me.columnItem_SaleRate_Size05 = MyBase.Columns("Item_SaleRate_Size05")
            Me.columnItem_SaleRate_Size06 = MyBase.Columns("Item_SaleRate_Size06")
            Me.columnItem_SaleRate_Size07 = MyBase.Columns("Item_SaleRate_Size07")
            Me.columnItem_SaleRate_Size08 = MyBase.Columns("Item_SaleRate_Size08")
            Me.columnItem_SaleRate_Size09 = MyBase.Columns("Item_SaleRate_Size09")
            Me.columnItem_SaleRate_Size10 = MyBase.Columns("Item_SaleRate_Size10")
            Me.columnItem_SaleRate_Size11 = MyBase.Columns("Item_SaleRate_Size11")
            Me.columnItem_SaleRate_Size12 = MyBase.Columns("Item_SaleRate_Size12")
            Me.columnItem_SaleRate_Size13 = MyBase.Columns("Item_SaleRate_Size13")
            Me.columnStamp_UserID = MyBase.Columns("Stamp_UserID")
            Me.columnStamp_DateTime = MyBase.Columns("Stamp_DateTime")
            Me.columnParent_Item_ID = MyBase.Columns("Parent_Item_ID")
            Me.columnParty_ID = MyBase.Columns("Party_ID")
            Me.columnAddress_ID = MyBase.Columns("Address_ID")
            Me.columnUpload_DateTime = MyBase.Columns("Upload_DateTime")
            Me.columnItem_MinStock_Size0 = MyBase.Columns("Item_MinStock_Size0")
            Me.columnItem_MinStock_Size1 = MyBase.Columns("Item_MinStock_Size1")
            Me.columnItem_MinStock_Size2 = MyBase.Columns("Item_MinStock_Size2")
            Me.columnItem_MinStock_Size3 = MyBase.Columns("Item_MinStock_Size3")
            Me.columnItem_MinStock_Size4 = MyBase.Columns("Item_MinStock_Size4")
            Me.columnItem_MinStock_Size5 = MyBase.Columns("Item_MinStock_Size5")
            Me.columnItem_MinStock_Size6 = MyBase.Columns("Item_MinStock_Size6")
            Me.columnItem_MinStock_Size7 = MyBase.Columns("Item_MinStock_Size7")
            Me.columnItem_MinStock_Size8 = MyBase.Columns("Item_MinStock_Size8")
            Me.columnItem_MinStock_Size9 = MyBase.Columns("Item_MinStock_Size9")
            Me.columnItem_MinStock_Size10 = MyBase.Columns("Item_MinStock_Size10")
            Me.columnItem_MinStock_Size11 = MyBase.Columns("Item_MinStock_Size11")
            Me.columnItem_MinStock_Size12 = MyBase.Columns("Item_MinStock_Size12")
            Me.columnItem_MinStock_Size13 = MyBase.Columns("Item_MinStock_Size13")
            Me.columnTotalMinStockQty = MyBase.Columns("TotalMinStockQty")
            Me.columnTotalMinStockAmount = MyBase.Columns("TotalMinStockAmount")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCo_ID = New Global.System.Data.DataColumn("Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCo_ID)
            Me.columnItem_ID = New Global.System.Data.DataColumn("Item_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_ID)
            Me.columnItem_Code = New Global.System.Data.DataColumn("Item_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Code)
            Me.columnItem_Desc = New Global.System.Data.DataColumn("Item_Desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Desc)
            Me.columnItem_SaleRate_Size01 = New Global.System.Data.DataColumn("Item_SaleRate_Size01", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_SaleRate_Size01)
            Me.columnItem_SaleRate_Size02 = New Global.System.Data.DataColumn("Item_SaleRate_Size02", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_SaleRate_Size02)
            Me.columnItem_SaleRate_Size03 = New Global.System.Data.DataColumn("Item_SaleRate_Size03", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_SaleRate_Size03)
            Me.columnItem_SaleRate_Size04 = New Global.System.Data.DataColumn("Item_SaleRate_Size04", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_SaleRate_Size04)
            Me.columnItem_SaleRate_Size05 = New Global.System.Data.DataColumn("Item_SaleRate_Size05", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_SaleRate_Size05)
            Me.columnItem_SaleRate_Size06 = New Global.System.Data.DataColumn("Item_SaleRate_Size06", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_SaleRate_Size06)
            Me.columnItem_SaleRate_Size07 = New Global.System.Data.DataColumn("Item_SaleRate_Size07", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_SaleRate_Size07)
            Me.columnItem_SaleRate_Size08 = New Global.System.Data.DataColumn("Item_SaleRate_Size08", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_SaleRate_Size08)
            Me.columnItem_SaleRate_Size09 = New Global.System.Data.DataColumn("Item_SaleRate_Size09", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_SaleRate_Size09)
            Me.columnItem_SaleRate_Size10 = New Global.System.Data.DataColumn("Item_SaleRate_Size10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_SaleRate_Size10)
            Me.columnItem_SaleRate_Size11 = New Global.System.Data.DataColumn("Item_SaleRate_Size11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_SaleRate_Size11)
            Me.columnItem_SaleRate_Size12 = New Global.System.Data.DataColumn("Item_SaleRate_Size12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_SaleRate_Size12)
            Me.columnItem_SaleRate_Size13 = New Global.System.Data.DataColumn("Item_SaleRate_Size13", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_SaleRate_Size13)
            Me.columnStamp_UserID = New Global.System.Data.DataColumn("Stamp_UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_UserID)
            Me.columnStamp_DateTime = New Global.System.Data.DataColumn("Stamp_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_DateTime)
            Me.columnParent_Item_ID = New Global.System.Data.DataColumn("Parent_Item_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParent_Item_ID)
            Me.columnParty_ID = New Global.System.Data.DataColumn("Party_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParty_ID)
            Me.columnAddress_ID = New Global.System.Data.DataColumn("Address_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress_ID)
            Me.columnUpload_DateTime = New Global.System.Data.DataColumn("Upload_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpload_DateTime)
            Me.columnItem_MinStock_Size0 = New Global.System.Data.DataColumn("Item_MinStock_Size0", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_MinStock_Size0)
            Me.columnItem_MinStock_Size1 = New Global.System.Data.DataColumn("Item_MinStock_Size1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_MinStock_Size1)
            Me.columnItem_MinStock_Size2 = New Global.System.Data.DataColumn("Item_MinStock_Size2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_MinStock_Size2)
            Me.columnItem_MinStock_Size3 = New Global.System.Data.DataColumn("Item_MinStock_Size3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_MinStock_Size3)
            Me.columnItem_MinStock_Size4 = New Global.System.Data.DataColumn("Item_MinStock_Size4", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_MinStock_Size4)
            Me.columnItem_MinStock_Size5 = New Global.System.Data.DataColumn("Item_MinStock_Size5", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_MinStock_Size5)
            Me.columnItem_MinStock_Size6 = New Global.System.Data.DataColumn("Item_MinStock_Size6", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_MinStock_Size6)
            Me.columnItem_MinStock_Size7 = New Global.System.Data.DataColumn("Item_MinStock_Size7", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_MinStock_Size7)
            Me.columnItem_MinStock_Size8 = New Global.System.Data.DataColumn("Item_MinStock_Size8", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_MinStock_Size8)
            Me.columnItem_MinStock_Size9 = New Global.System.Data.DataColumn("Item_MinStock_Size9", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_MinStock_Size9)
            Me.columnItem_MinStock_Size10 = New Global.System.Data.DataColumn("Item_MinStock_Size10", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_MinStock_Size10)
            Me.columnItem_MinStock_Size11 = New Global.System.Data.DataColumn("Item_MinStock_Size11", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_MinStock_Size11)
            Me.columnItem_MinStock_Size12 = New Global.System.Data.DataColumn("Item_MinStock_Size12", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_MinStock_Size12)
            Me.columnItem_MinStock_Size13 = New Global.System.Data.DataColumn("Item_MinStock_Size13", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_MinStock_Size13)
            Me.columnTotalMinStockQty = New Global.System.Data.DataColumn("TotalMinStockQty", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalMinStockQty)
            Me.columnTotalMinStockAmount = New Global.System.Data.DataColumn("TotalMinStockAmount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalMinStockAmount)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint11", New Global.System.Data.DataColumn() {Me.columnCo_ID, Me.columnItem_ID}, true))
            Me.columnCo_ID.AllowDBNull = false
            Me.columnItem_ID.AllowDBNull = false
            Me.columnItem_Code.MaxLength = 50
            Me.columnItem_Desc.AllowDBNull = false
            Me.columnItem_Desc.MaxLength = 50
            Me.columnItem_SaleRate_Size01.AllowDBNull = false
            Me.columnItem_SaleRate_Size01.DefaultValue = CType(0,Decimal)
            Me.columnItem_SaleRate_Size02.AllowDBNull = false
            Me.columnItem_SaleRate_Size02.DefaultValue = CType(0,Decimal)
            Me.columnItem_SaleRate_Size03.AllowDBNull = false
            Me.columnItem_SaleRate_Size03.DefaultValue = CType(0,Decimal)
            Me.columnItem_SaleRate_Size04.AllowDBNull = false
            Me.columnItem_SaleRate_Size04.DefaultValue = CType(0,Decimal)
            Me.columnItem_SaleRate_Size05.AllowDBNull = false
            Me.columnItem_SaleRate_Size05.DefaultValue = CType(0,Decimal)
            Me.columnItem_SaleRate_Size06.AllowDBNull = false
            Me.columnItem_SaleRate_Size06.DefaultValue = CType(0,Decimal)
            Me.columnItem_SaleRate_Size07.AllowDBNull = false
            Me.columnItem_SaleRate_Size07.DefaultValue = CType(0,Decimal)
            Me.columnItem_SaleRate_Size08.AllowDBNull = false
            Me.columnItem_SaleRate_Size08.DefaultValue = CType(0,Decimal)
            Me.columnItem_SaleRate_Size09.AllowDBNull = false
            Me.columnItem_SaleRate_Size09.DefaultValue = CType(0,Decimal)
            Me.columnItem_SaleRate_Size10.AllowDBNull = false
            Me.columnItem_SaleRate_Size10.DefaultValue = CType(0,Decimal)
            Me.columnItem_SaleRate_Size11.AllowDBNull = false
            Me.columnItem_SaleRate_Size11.DefaultValue = CType(0,Decimal)
            Me.columnItem_SaleRate_Size12.AllowDBNull = false
            Me.columnItem_SaleRate_Size12.DefaultValue = CType(0,Decimal)
            Me.columnItem_SaleRate_Size13.AllowDBNull = false
            Me.columnItem_SaleRate_Size13.DefaultValue = CType(0,Decimal)
            Me.columnStamp_UserID.AllowDBNull = false
            Me.columnStamp_DateTime.AllowDBNull = false
            Me.columnParent_Item_ID.AllowDBNull = false
            Me.columnParty_ID.AllowDBNull = false
            Me.columnAddress_ID.AllowDBNull = false
            Me.columnTotalMinStockQty.Caption = "Qty"
            Me.columnTotalMinStockAmount.Caption = "Amount"
            Me.ExtendedProperties.Add("Generator_RowClassName", "ItemRow")
            Me.ExtendedProperties.Add("Generator_RowEvArgName", "ItemRowChangeEvent")
            Me.ExtendedProperties.Add("Generator_RowEvHandlerName", "ItemRowChangeEventHandler")
            Me.ExtendedProperties.Add("Generator_TableClassName", "ItemDataTable")
            Me.ExtendedProperties.Add("Generator_TablePropName", "Item")
            Me.ExtendedProperties.Add("Generator_TableVarName", "tableItem")
            Me.ExtendedProperties.Add("Generator_UserTableName", "Item")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewItemRow() As ItemRow
            Return CType(Me.NewRow,ItemRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ItemRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ItemRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ItemRowChangedEvent) Is Nothing) Then
                RaiseEvent ItemRowChanged(Me, New ItemRowChangeEvent(CType(e.Row,ItemRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ItemRowChangingEvent) Is Nothing) Then
                RaiseEvent ItemRowChanging(Me, New ItemRowChangeEvent(CType(e.Row,ItemRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ItemRowDeletedEvent) Is Nothing) Then
                RaiseEvent ItemRowDeleted(Me, New ItemRowChangeEvent(CType(e.Row,ItemRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ItemRowDeletingEvent) Is Nothing) Then
                RaiseEvent ItemRowDeleting(Me, New ItemRowChangeEvent(CType(e.Row,ItemRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveItemRow(ByVal row As ItemRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuickInventoryDataSet = New QuickInventoryDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ItemDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class InventoryDataTable
        Inherits Global.System.Data.TypedTableBase(Of InventoryRow)
        
        Private columnCo_ID As Global.System.Data.DataColumn
        
        Private columnParty_ID As Global.System.Data.DataColumn
        
        Private columnPayment_Mode As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnStamp_DateTime As Global.System.Data.DataColumn
        
        Private columnStamp_UserID As Global.System.Data.DataColumn
        
        Private columnInventory_ID As Global.System.Data.DataColumn
        
        Private columnInventory_Date As Global.System.Data.DataColumn
        
        Private columnDocumentType_ID As Global.System.Data.DataColumn
        
        Private columnRecordStatus_ID As Global.System.Data.DataColumn
        
        Private columnUpload_DateTime As Global.System.Data.DataColumn
        
        Private columnCategory_Party_ID As Global.System.Data.DataColumn
        
        Private columnLogisticService As Global.System.Data.DataColumn
        
        Private columnDiscount As Global.System.Data.DataColumn
        
        Private columnSalesTax As Global.System.Data.DataColumn
        
        Private columnSource_DocumentType_ID As Global.System.Data.DataColumn
        
        Private columnSource_Document_No As Global.System.Data.DataColumn
        
        Private columnSource_Document_Co_ID As Global.System.Data.DataColumn
        
        Private columnInventory_No As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Inventory"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCo_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Party_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParty_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Payment_ModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayment_Mode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_UserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DocumentType_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumentType_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RecordStatus_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecordStatus_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Upload_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpload_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Category_Party_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategory_Party_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LogisticServiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogisticService
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SalesTaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalesTax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_DocumentType_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_DocumentType_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_Document_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_Document_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_Document_Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_Document_Co_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As InventoryRow
            Get
                Return CType(Me.Rows(index),InventoryRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event InventoryRowChanging As InventoryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event InventoryRowChanged As InventoryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event InventoryRowDeleting As InventoryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event InventoryRowDeleted As InventoryRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddInventoryRow(ByVal row As InventoryRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddInventoryRow( _
                    ByVal Co_ID As Short,  _
                    ByVal Party_ID As Integer,  _
                    ByVal Payment_Mode As Short,  _
                    ByVal Remarks As String,  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal Inventory_ID As Integer,  _
                    ByVal Inventory_Date As Date,  _
                    ByVal DocumentType_ID As Short,  _
                    ByVal RecordStatus_ID As Integer,  _
                    ByVal Upload_DateTime As Date,  _
                    ByVal Category_Party_ID As Integer,  _
                    ByVal LogisticService As String,  _
                    ByVal Discount As Integer,  _
                    ByVal SalesTax As Integer,  _
                    ByVal Source_DocumentType_ID As Short,  _
                    ByVal Source_Document_No As Integer,  _
                    ByVal Source_Document_Co_ID As Short,  _
                    ByVal Inventory_No As String) As InventoryRow
            Dim rowInventoryRow As InventoryRow = CType(Me.NewRow,InventoryRow)
            Dim columnValuesArray() As Object = New Object() {Co_ID, Party_ID, Payment_Mode, Remarks, Stamp_DateTime, Stamp_UserID, Inventory_ID, Inventory_Date, DocumentType_ID, RecordStatus_ID, Upload_DateTime, Category_Party_ID, LogisticService, Discount, SalesTax, Source_DocumentType_ID, Source_Document_No, Source_Document_Co_ID, Inventory_No}
            rowInventoryRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowInventoryRow)
            Return rowInventoryRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCo_IDInventory_IDDocumentType_ID(ByVal Co_ID As Short, ByVal Inventory_ID As Integer, ByVal DocumentType_ID As Short) As InventoryRow
            Return CType(Me.Rows.Find(New Object() {Co_ID, Inventory_ID, DocumentType_ID}),InventoryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As InventoryDataTable = CType(MyBase.Clone,InventoryDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New InventoryDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCo_ID = MyBase.Columns("Co_ID")
            Me.columnParty_ID = MyBase.Columns("Party_ID")
            Me.columnPayment_Mode = MyBase.Columns("Payment_Mode")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnStamp_DateTime = MyBase.Columns("Stamp_DateTime")
            Me.columnStamp_UserID = MyBase.Columns("Stamp_UserID")
            Me.columnInventory_ID = MyBase.Columns("Inventory_ID")
            Me.columnInventory_Date = MyBase.Columns("Inventory_Date")
            Me.columnDocumentType_ID = MyBase.Columns("DocumentType_ID")
            Me.columnRecordStatus_ID = MyBase.Columns("RecordStatus_ID")
            Me.columnUpload_DateTime = MyBase.Columns("Upload_DateTime")
            Me.columnCategory_Party_ID = MyBase.Columns("Category_Party_ID")
            Me.columnLogisticService = MyBase.Columns("LogisticService")
            Me.columnDiscount = MyBase.Columns("Discount")
            Me.columnSalesTax = MyBase.Columns("SalesTax")
            Me.columnSource_DocumentType_ID = MyBase.Columns("Source_DocumentType_ID")
            Me.columnSource_Document_No = MyBase.Columns("Source_Document_No")
            Me.columnSource_Document_Co_ID = MyBase.Columns("Source_Document_Co_ID")
            Me.columnInventory_No = MyBase.Columns("Inventory_No")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCo_ID = New Global.System.Data.DataColumn("Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCo_ID)
            Me.columnParty_ID = New Global.System.Data.DataColumn("Party_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParty_ID)
            Me.columnPayment_Mode = New Global.System.Data.DataColumn("Payment_Mode", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayment_Mode)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnStamp_DateTime = New Global.System.Data.DataColumn("Stamp_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_DateTime)
            Me.columnStamp_UserID = New Global.System.Data.DataColumn("Stamp_UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_UserID)
            Me.columnInventory_ID = New Global.System.Data.DataColumn("Inventory_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_ID)
            Me.columnInventory_Date = New Global.System.Data.DataColumn("Inventory_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Date)
            Me.columnDocumentType_ID = New Global.System.Data.DataColumn("DocumentType_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumentType_ID)
            Me.columnRecordStatus_ID = New Global.System.Data.DataColumn("RecordStatus_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecordStatus_ID)
            Me.columnUpload_DateTime = New Global.System.Data.DataColumn("Upload_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpload_DateTime)
            Me.columnCategory_Party_ID = New Global.System.Data.DataColumn("Category_Party_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategory_Party_ID)
            Me.columnLogisticService = New Global.System.Data.DataColumn("LogisticService", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogisticService)
            Me.columnDiscount = New Global.System.Data.DataColumn("Discount", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount)
            Me.columnSalesTax = New Global.System.Data.DataColumn("SalesTax", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalesTax)
            Me.columnSource_DocumentType_ID = New Global.System.Data.DataColumn("Source_DocumentType_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_DocumentType_ID)
            Me.columnSource_Document_No = New Global.System.Data.DataColumn("Source_Document_No", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_Document_No)
            Me.columnSource_Document_Co_ID = New Global.System.Data.DataColumn("Source_Document_Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_Document_Co_ID)
            Me.columnInventory_No = New Global.System.Data.DataColumn("Inventory_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_No)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCo_ID, Me.columnInventory_ID, Me.columnDocumentType_ID}, true))
            Me.columnCo_ID.AllowDBNull = false
            Me.columnRemarks.MaxLength = 300
            Me.columnInventory_ID.AllowDBNull = false
            Me.columnDocumentType_ID.AllowDBNull = false
            Me.columnRecordStatus_ID.AllowDBNull = false
            Me.columnLogisticService.MaxLength = 50
            Me.columnInventory_No.AllowDBNull = false
            Me.columnInventory_No.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewInventoryRow() As InventoryRow
            Return CType(Me.NewRow,InventoryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New InventoryRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(InventoryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.InventoryRowChangedEvent) Is Nothing) Then
                RaiseEvent InventoryRowChanged(Me, New InventoryRowChangeEvent(CType(e.Row,InventoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.InventoryRowChangingEvent) Is Nothing) Then
                RaiseEvent InventoryRowChanging(Me, New InventoryRowChangeEvent(CType(e.Row,InventoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.InventoryRowDeletedEvent) Is Nothing) Then
                RaiseEvent InventoryRowDeleted(Me, New InventoryRowChangeEvent(CType(e.Row,InventoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.InventoryRowDeletingEvent) Is Nothing) Then
                RaiseEvent InventoryRowDeleting(Me, New InventoryRowChangeEvent(CType(e.Row,InventoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveInventoryRow(ByVal row As InventoryRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuickInventoryDataSet = New QuickInventoryDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "InventoryDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Invs_InventoryDataTable
        Inherits Global.System.Data.TypedTableBase(Of Invs_InventoryRow)
        
        Private columnCo_ID As Global.System.Data.DataColumn
        
        Private columnParty_ID As Global.System.Data.DataColumn
        
        Private columnPayment_Mode As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnStamp_DateTime As Global.System.Data.DataColumn
        
        Private columnStamp_UserID As Global.System.Data.DataColumn
        
        Private columnInventory_ID As Global.System.Data.DataColumn
        
        Private columnInventory_Date As Global.System.Data.DataColumn
        
        Private columnInventory_No As Global.System.Data.DataColumn
        
        Private columnDocumentType_ID As Global.System.Data.DataColumn
        
        Private columnStatus_ID As Global.System.Data.DataColumn
        
        Private columnUpload_DateTime As Global.System.Data.DataColumn
        
        Private columnCategory_Party_ID As Global.System.Data.DataColumn
        
        Private columnLogisticService As Global.System.Data.DataColumn
        
        Private columnDiscount As Global.System.Data.DataColumn
        
        Private columnSalesTax As Global.System.Data.DataColumn
        
        Private columnSource_DocumentType_ID As Global.System.Data.DataColumn
        
        Private columnSource_Document_No As Global.System.Data.DataColumn
        
        Private columnSource_Document_Co_ID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Invs_Inventory"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCo_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Party_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParty_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Payment_ModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayment_Mode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_UserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DocumentType_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumentType_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Status_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Upload_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpload_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Category_Party_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategory_Party_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LogisticServiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogisticService
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SalesTaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalesTax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_DocumentType_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_DocumentType_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_Document_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_Document_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_Document_Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_Document_Co_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Invs_InventoryRow
            Get
                Return CType(Me.Rows(index),Invs_InventoryRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_InventoryRowChanging As Invs_InventoryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_InventoryRowChanged As Invs_InventoryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_InventoryRowDeleting As Invs_InventoryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_InventoryRowDeleted As Invs_InventoryRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddInvs_InventoryRow(ByVal row As Invs_InventoryRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddInvs_InventoryRow( _
                    ByVal Co_ID As Short,  _
                    ByVal Party_ID As Integer,  _
                    ByVal Payment_Mode As Short,  _
                    ByVal Remarks As String,  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal Inventory_ID As Integer,  _
                    ByVal Inventory_Date As Date,  _
                    ByVal Inventory_No As Integer,  _
                    ByVal DocumentType_ID As Short,  _
                    ByVal Status_ID As Integer,  _
                    ByVal Upload_DateTime As Date,  _
                    ByVal Category_Party_ID As Integer,  _
                    ByVal LogisticService As String,  _
                    ByVal Discount As Integer,  _
                    ByVal SalesTax As Integer,  _
                    ByVal Source_DocumentType_ID As Short,  _
                    ByVal Source_Document_No As Integer,  _
                    ByVal Source_Document_Co_ID As Short) As Invs_InventoryRow
            Dim rowInvs_InventoryRow As Invs_InventoryRow = CType(Me.NewRow,Invs_InventoryRow)
            Dim columnValuesArray() As Object = New Object() {Co_ID, Party_ID, Payment_Mode, Remarks, Stamp_DateTime, Stamp_UserID, Inventory_ID, Inventory_Date, Inventory_No, DocumentType_ID, Status_ID, Upload_DateTime, Category_Party_ID, LogisticService, Discount, SalesTax, Source_DocumentType_ID, Source_Document_No, Source_Document_Co_ID}
            rowInvs_InventoryRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowInvs_InventoryRow)
            Return rowInvs_InventoryRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCo_IDInventory_ID(ByVal Co_ID As Short, ByVal Inventory_ID As Integer) As Invs_InventoryRow
            Return CType(Me.Rows.Find(New Object() {Co_ID, Inventory_ID}),Invs_InventoryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Invs_InventoryDataTable = CType(MyBase.Clone,Invs_InventoryDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Invs_InventoryDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCo_ID = MyBase.Columns("Co_ID")
            Me.columnParty_ID = MyBase.Columns("Party_ID")
            Me.columnPayment_Mode = MyBase.Columns("Payment_Mode")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnStamp_DateTime = MyBase.Columns("Stamp_DateTime")
            Me.columnStamp_UserID = MyBase.Columns("Stamp_UserID")
            Me.columnInventory_ID = MyBase.Columns("Inventory_ID")
            Me.columnInventory_Date = MyBase.Columns("Inventory_Date")
            Me.columnInventory_No = MyBase.Columns("Inventory_No")
            Me.columnDocumentType_ID = MyBase.Columns("DocumentType_ID")
            Me.columnStatus_ID = MyBase.Columns("Status_ID")
            Me.columnUpload_DateTime = MyBase.Columns("Upload_DateTime")
            Me.columnCategory_Party_ID = MyBase.Columns("Category_Party_ID")
            Me.columnLogisticService = MyBase.Columns("LogisticService")
            Me.columnDiscount = MyBase.Columns("Discount")
            Me.columnSalesTax = MyBase.Columns("SalesTax")
            Me.columnSource_DocumentType_ID = MyBase.Columns("Source_DocumentType_ID")
            Me.columnSource_Document_No = MyBase.Columns("Source_Document_No")
            Me.columnSource_Document_Co_ID = MyBase.Columns("Source_Document_Co_ID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCo_ID = New Global.System.Data.DataColumn("Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCo_ID)
            Me.columnParty_ID = New Global.System.Data.DataColumn("Party_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParty_ID)
            Me.columnPayment_Mode = New Global.System.Data.DataColumn("Payment_Mode", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayment_Mode)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnStamp_DateTime = New Global.System.Data.DataColumn("Stamp_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_DateTime)
            Me.columnStamp_UserID = New Global.System.Data.DataColumn("Stamp_UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_UserID)
            Me.columnInventory_ID = New Global.System.Data.DataColumn("Inventory_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_ID)
            Me.columnInventory_Date = New Global.System.Data.DataColumn("Inventory_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Date)
            Me.columnInventory_No = New Global.System.Data.DataColumn("Inventory_No", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_No)
            Me.columnDocumentType_ID = New Global.System.Data.DataColumn("DocumentType_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumentType_ID)
            Me.columnStatus_ID = New Global.System.Data.DataColumn("Status_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus_ID)
            Me.columnUpload_DateTime = New Global.System.Data.DataColumn("Upload_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpload_DateTime)
            Me.columnCategory_Party_ID = New Global.System.Data.DataColumn("Category_Party_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategory_Party_ID)
            Me.columnLogisticService = New Global.System.Data.DataColumn("LogisticService", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogisticService)
            Me.columnDiscount = New Global.System.Data.DataColumn("Discount", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount)
            Me.columnSalesTax = New Global.System.Data.DataColumn("SalesTax", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalesTax)
            Me.columnSource_DocumentType_ID = New Global.System.Data.DataColumn("Source_DocumentType_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_DocumentType_ID)
            Me.columnSource_Document_No = New Global.System.Data.DataColumn("Source_Document_No", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_Document_No)
            Me.columnSource_Document_Co_ID = New Global.System.Data.DataColumn("Source_Document_Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_Document_Co_ID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCo_ID, Me.columnInventory_ID}, true))
            Me.columnCo_ID.AllowDBNull = false
            Me.columnRemarks.MaxLength = 300
            Me.columnInventory_ID.AllowDBNull = false
            Me.columnInventory_Date.AllowDBNull = false
            Me.columnInventory_No.AllowDBNull = false
            Me.columnDocumentType_ID.AllowDBNull = false
            Me.columnStatus_ID.AllowDBNull = false
            Me.columnLogisticService.MaxLength = 50
            Me.columnDiscount.AllowDBNull = false
            Me.columnSalesTax.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewInvs_InventoryRow() As Invs_InventoryRow
            Return CType(Me.NewRow,Invs_InventoryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Invs_InventoryRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Invs_InventoryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Invs_InventoryRowChangedEvent) Is Nothing) Then
                RaiseEvent Invs_InventoryRowChanged(Me, New Invs_InventoryRowChangeEvent(CType(e.Row,Invs_InventoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Invs_InventoryRowChangingEvent) Is Nothing) Then
                RaiseEvent Invs_InventoryRowChanging(Me, New Invs_InventoryRowChangeEvent(CType(e.Row,Invs_InventoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Invs_InventoryRowDeletedEvent) Is Nothing) Then
                RaiseEvent Invs_InventoryRowDeleted(Me, New Invs_InventoryRowChangeEvent(CType(e.Row,Invs_InventoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Invs_InventoryRowDeletingEvent) Is Nothing) Then
                RaiseEvent Invs_InventoryRowDeleting(Me, New Invs_InventoryRowChangeEvent(CType(e.Row,Invs_InventoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveInvs_InventoryRow(ByVal row As Invs_InventoryRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuickInventoryDataSet = New QuickInventoryDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Invs_InventoryDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Invs_InventoryDetailDataTable
        Inherits Global.System.Data.TypedTableBase(Of Invs_InventoryDetailRow)
        
        Private columnCo_ID As Global.System.Data.DataColumn
        
        Private columnInventory_ID As Global.System.Data.DataColumn
        
        Private columnInventoryDetail_ID As Global.System.Data.DataColumn
        
        Private columnDocumentType_ID As Global.System.Data.DataColumn
        
        Private columnItem_ID As Global.System.Data.DataColumn
        
        Private columnItem_Code As Global.System.Data.DataColumn
        
        Private columnItem_Desc As Global.System.Data.DataColumn
        
        Private columnStamp_DateTime As Global.System.Data.DataColumn
        
        Private columnStamp_UserID As Global.System.Data.DataColumn
        
        Private columnSource_DocumentType_ID As Global.System.Data.DataColumn
        
        Private columnSource_Document_Co_ID As Global.System.Data.DataColumn
        
        Private columnSource_Document_No As Global.System.Data.DataColumn
        
        Private columnTotalQty As Global.System.Data.DataColumn
        
        Private columnTotalAmount As Global.System.Data.DataColumn
        
        Private columnUpload_DateTime As Global.System.Data.DataColumn
        
        Private columnWarehouse_ID As Global.System.Data.DataColumn
        
        Private columnItemSize_ID As Global.System.Data.DataColumn
        
        Private columnItemQty As Global.System.Data.DataColumn
        
        Private columnItemRate As Global.System.Data.DataColumn
        
        Private columnDiscount As Global.System.Data.DataColumn
        
        Private columnSalesTax As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Invs_InventoryDetail"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCo_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InventoryDetail_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventoryDetail_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DocumentType_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumentType_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_DescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_UserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_DocumentType_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_DocumentType_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_Document_Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_Document_Co_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_Document_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_Document_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Upload_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpload_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Warehouse_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWarehouse_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemSize_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemSize_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SalesTaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalesTax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Invs_InventoryDetailRow
            Get
                Return CType(Me.Rows(index),Invs_InventoryDetailRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_InventoryDetailRowChanging As Invs_InventoryDetailRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_InventoryDetailRowChanged As Invs_InventoryDetailRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_InventoryDetailRowDeleting As Invs_InventoryDetailRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_InventoryDetailRowDeleted As Invs_InventoryDetailRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddInvs_InventoryDetailRow(ByVal row As Invs_InventoryDetailRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddInvs_InventoryDetailRow( _
                    ByVal Co_ID As Short,  _
                    ByVal Inventory_ID As Integer,  _
                    ByVal InventoryDetail_ID As Integer,  _
                    ByVal DocumentType_ID As Short,  _
                    ByVal Item_ID As Integer,  _
                    ByVal Item_Code As String,  _
                    ByVal Item_Desc As String,  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal Source_DocumentType_ID As Short,  _
                    ByVal Source_Document_Co_ID As Short,  _
                    ByVal Source_Document_No As Integer,  _
                    ByVal TotalQty As Decimal,  _
                    ByVal TotalAmount As Decimal,  _
                    ByVal Upload_DateTime As Date,  _
                    ByVal Warehouse_ID As Integer,  _
                    ByVal ItemSize_ID As Short,  _
                    ByVal ItemQty As Double,  _
                    ByVal ItemRate As Decimal,  _
                    ByVal Discount As Double,  _
                    ByVal SalesTax As Double) As Invs_InventoryDetailRow
            Dim rowInvs_InventoryDetailRow As Invs_InventoryDetailRow = CType(Me.NewRow,Invs_InventoryDetailRow)
            Dim columnValuesArray() As Object = New Object() {Co_ID, Inventory_ID, InventoryDetail_ID, DocumentType_ID, Item_ID, Item_Code, Item_Desc, Stamp_DateTime, Stamp_UserID, Source_DocumentType_ID, Source_Document_Co_ID, Source_Document_No, TotalQty, TotalAmount, Upload_DateTime, Warehouse_ID, ItemSize_ID, ItemQty, ItemRate, Discount, SalesTax}
            rowInvs_InventoryDetailRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowInvs_InventoryDetailRow)
            Return rowInvs_InventoryDetailRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCo_IDInventory_IDInventoryDetail_ID(ByVal Co_ID As Short, ByVal Inventory_ID As Integer, ByVal InventoryDetail_ID As Integer) As Invs_InventoryDetailRow
            Return CType(Me.Rows.Find(New Object() {Co_ID, Inventory_ID, InventoryDetail_ID}),Invs_InventoryDetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Invs_InventoryDetailDataTable = CType(MyBase.Clone,Invs_InventoryDetailDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Invs_InventoryDetailDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCo_ID = MyBase.Columns("Co_ID")
            Me.columnInventory_ID = MyBase.Columns("Inventory_ID")
            Me.columnInventoryDetail_ID = MyBase.Columns("InventoryDetail_ID")
            Me.columnDocumentType_ID = MyBase.Columns("DocumentType_ID")
            Me.columnItem_ID = MyBase.Columns("Item_ID")
            Me.columnItem_Code = MyBase.Columns("Item_Code")
            Me.columnItem_Desc = MyBase.Columns("Item_Desc")
            Me.columnStamp_DateTime = MyBase.Columns("Stamp_DateTime")
            Me.columnStamp_UserID = MyBase.Columns("Stamp_UserID")
            Me.columnSource_DocumentType_ID = MyBase.Columns("Source_DocumentType_ID")
            Me.columnSource_Document_Co_ID = MyBase.Columns("Source_Document_Co_ID")
            Me.columnSource_Document_No = MyBase.Columns("Source_Document_No")
            Me.columnTotalQty = MyBase.Columns("TotalQty")
            Me.columnTotalAmount = MyBase.Columns("TotalAmount")
            Me.columnUpload_DateTime = MyBase.Columns("Upload_DateTime")
            Me.columnWarehouse_ID = MyBase.Columns("Warehouse_ID")
            Me.columnItemSize_ID = MyBase.Columns("ItemSize_ID")
            Me.columnItemQty = MyBase.Columns("ItemQty")
            Me.columnItemRate = MyBase.Columns("ItemRate")
            Me.columnDiscount = MyBase.Columns("Discount")
            Me.columnSalesTax = MyBase.Columns("SalesTax")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCo_ID = New Global.System.Data.DataColumn("Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCo_ID)
            Me.columnInventory_ID = New Global.System.Data.DataColumn("Inventory_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_ID)
            Me.columnInventoryDetail_ID = New Global.System.Data.DataColumn("InventoryDetail_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventoryDetail_ID)
            Me.columnDocumentType_ID = New Global.System.Data.DataColumn("DocumentType_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumentType_ID)
            Me.columnItem_ID = New Global.System.Data.DataColumn("Item_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_ID)
            Me.columnItem_Code = New Global.System.Data.DataColumn("Item_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Code)
            Me.columnItem_Desc = New Global.System.Data.DataColumn("Item_Desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Desc)
            Me.columnStamp_DateTime = New Global.System.Data.DataColumn("Stamp_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_DateTime)
            Me.columnStamp_UserID = New Global.System.Data.DataColumn("Stamp_UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_UserID)
            Me.columnSource_DocumentType_ID = New Global.System.Data.DataColumn("Source_DocumentType_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_DocumentType_ID)
            Me.columnSource_Document_Co_ID = New Global.System.Data.DataColumn("Source_Document_Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_Document_Co_ID)
            Me.columnSource_Document_No = New Global.System.Data.DataColumn("Source_Document_No", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_Document_No)
            Me.columnTotalQty = New Global.System.Data.DataColumn("TotalQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalQty)
            Me.columnTotalAmount = New Global.System.Data.DataColumn("TotalAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalAmount)
            Me.columnUpload_DateTime = New Global.System.Data.DataColumn("Upload_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpload_DateTime)
            Me.columnWarehouse_ID = New Global.System.Data.DataColumn("Warehouse_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWarehouse_ID)
            Me.columnItemSize_ID = New Global.System.Data.DataColumn("ItemSize_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemSize_ID)
            Me.columnItemQty = New Global.System.Data.DataColumn("ItemQty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemQty)
            Me.columnItemRate = New Global.System.Data.DataColumn("ItemRate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemRate)
            Me.columnDiscount = New Global.System.Data.DataColumn("Discount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount)
            Me.columnSalesTax = New Global.System.Data.DataColumn("SalesTax", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalesTax)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCo_ID, Me.columnInventory_ID, Me.columnInventoryDetail_ID}, true))
            Me.columnCo_ID.AllowDBNull = false
            Me.columnInventory_ID.AllowDBNull = false
            Me.columnInventoryDetail_ID.AllowDBNull = false
            Me.columnDocumentType_ID.AllowDBNull = false
            Me.columnItem_ID.AllowDBNull = false
            Me.columnItemSize_ID.AllowDBNull = false
            Me.columnItemQty.AllowDBNull = false
            Me.columnItemRate.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewInvs_InventoryDetailRow() As Invs_InventoryDetailRow
            Return CType(Me.NewRow,Invs_InventoryDetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Invs_InventoryDetailRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Invs_InventoryDetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Invs_InventoryDetailRowChangedEvent) Is Nothing) Then
                RaiseEvent Invs_InventoryDetailRowChanged(Me, New Invs_InventoryDetailRowChangeEvent(CType(e.Row,Invs_InventoryDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Invs_InventoryDetailRowChangingEvent) Is Nothing) Then
                RaiseEvent Invs_InventoryDetailRowChanging(Me, New Invs_InventoryDetailRowChangeEvent(CType(e.Row,Invs_InventoryDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Invs_InventoryDetailRowDeletedEvent) Is Nothing) Then
                RaiseEvent Invs_InventoryDetailRowDeleted(Me, New Invs_InventoryDetailRowChangeEvent(CType(e.Row,Invs_InventoryDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Invs_InventoryDetailRowDeletingEvent) Is Nothing) Then
                RaiseEvent Invs_InventoryDetailRowDeleting(Me, New Invs_InventoryDetailRowChangeEvent(CType(e.Row,Invs_InventoryDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveInvs_InventoryDetailRow(ByVal row As Invs_InventoryDetailRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuickInventoryDataSet = New QuickInventoryDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Invs_InventoryDetailDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Invs_ItemDataTable
        Inherits Global.System.Data.TypedTableBase(Of Invs_ItemRow)
        
        Private columnCo_ID As Global.System.Data.DataColumn
        
        Private columnItem_ID As Global.System.Data.DataColumn
        
        Private columnItem_Code As Global.System.Data.DataColumn
        
        Private columnItem_Desc As Global.System.Data.DataColumn
        
        Private columnStamp_UserID As Global.System.Data.DataColumn
        
        Private columnStamp_DateTime As Global.System.Data.DataColumn
        
        Private columnParent_Item_ID As Global.System.Data.DataColumn
        
        Private columnParty_ID As Global.System.Data.DataColumn
        
        Private columnUpload_DateTime As Global.System.Data.DataColumn
        
        Private columnTotalMinStockQty As Global.System.Data.DataColumn
        
        Private columnTotalMinStockAmount As Global.System.Data.DataColumn
        
        Private columnAddress_ID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Invs_Item"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCo_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_DescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_UserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Parent_Item_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParent_Item_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Party_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParty_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Upload_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpload_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalMinStockQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalMinStockQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalMinStockAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalMinStockAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Address_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Invs_ItemRow
            Get
                Return CType(Me.Rows(index),Invs_ItemRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_ItemRowChanging As Invs_ItemRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_ItemRowChanged As Invs_ItemRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_ItemRowDeleting As Invs_ItemRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_ItemRowDeleted As Invs_ItemRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddInvs_ItemRow(ByVal row As Invs_ItemRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddInvs_ItemRow(ByVal Co_ID As Short, ByVal Item_ID As Integer, ByVal Item_Code As String, ByVal Item_Desc As String, ByVal Stamp_UserID As Integer, ByVal Stamp_DateTime As Date, ByVal Parent_Item_ID As Integer, ByVal Party_ID As Integer, ByVal Upload_DateTime As Date, ByVal TotalMinStockQty As String, ByVal TotalMinStockAmount As String, ByVal Address_ID As Integer) As Invs_ItemRow
            Dim rowInvs_ItemRow As Invs_ItemRow = CType(Me.NewRow,Invs_ItemRow)
            Dim columnValuesArray() As Object = New Object() {Co_ID, Item_ID, Item_Code, Item_Desc, Stamp_UserID, Stamp_DateTime, Parent_Item_ID, Party_ID, Upload_DateTime, TotalMinStockQty, TotalMinStockAmount, Address_ID}
            rowInvs_ItemRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowInvs_ItemRow)
            Return rowInvs_ItemRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCo_IDItem_ID(ByVal Co_ID As Short, ByVal Item_ID As Integer) As Invs_ItemRow
            Return CType(Me.Rows.Find(New Object() {Co_ID, Item_ID}),Invs_ItemRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Invs_ItemDataTable = CType(MyBase.Clone,Invs_ItemDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Invs_ItemDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCo_ID = MyBase.Columns("Co_ID")
            Me.columnItem_ID = MyBase.Columns("Item_ID")
            Me.columnItem_Code = MyBase.Columns("Item_Code")
            Me.columnItem_Desc = MyBase.Columns("Item_Desc")
            Me.columnStamp_UserID = MyBase.Columns("Stamp_UserID")
            Me.columnStamp_DateTime = MyBase.Columns("Stamp_DateTime")
            Me.columnParent_Item_ID = MyBase.Columns("Parent_Item_ID")
            Me.columnParty_ID = MyBase.Columns("Party_ID")
            Me.columnUpload_DateTime = MyBase.Columns("Upload_DateTime")
            Me.columnTotalMinStockQty = MyBase.Columns("TotalMinStockQty")
            Me.columnTotalMinStockAmount = MyBase.Columns("TotalMinStockAmount")
            Me.columnAddress_ID = MyBase.Columns("Address_ID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCo_ID = New Global.System.Data.DataColumn("Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCo_ID)
            Me.columnItem_ID = New Global.System.Data.DataColumn("Item_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_ID)
            Me.columnItem_Code = New Global.System.Data.DataColumn("Item_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Code)
            Me.columnItem_Desc = New Global.System.Data.DataColumn("Item_Desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Desc)
            Me.columnStamp_UserID = New Global.System.Data.DataColumn("Stamp_UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_UserID)
            Me.columnStamp_DateTime = New Global.System.Data.DataColumn("Stamp_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_DateTime)
            Me.columnParent_Item_ID = New Global.System.Data.DataColumn("Parent_Item_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParent_Item_ID)
            Me.columnParty_ID = New Global.System.Data.DataColumn("Party_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParty_ID)
            Me.columnUpload_DateTime = New Global.System.Data.DataColumn("Upload_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpload_DateTime)
            Me.columnTotalMinStockQty = New Global.System.Data.DataColumn("TotalMinStockQty", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalMinStockQty)
            Me.columnTotalMinStockAmount = New Global.System.Data.DataColumn("TotalMinStockAmount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalMinStockAmount)
            Me.columnAddress_ID = New Global.System.Data.DataColumn("Address_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress_ID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCo_ID, Me.columnItem_ID}, true))
            Me.columnCo_ID.AllowDBNull = false
            Me.columnItem_ID.AllowDBNull = false
            Me.columnItem_Code.AllowDBNull = false
            Me.columnItem_Code.MaxLength = 50
            Me.columnItem_Desc.AllowDBNull = false
            Me.columnItem_Desc.MaxLength = 50
            Me.columnStamp_UserID.AllowDBNull = false
            Me.columnStamp_DateTime.AllowDBNull = false
            Me.columnParent_Item_ID.AllowDBNull = false
            Me.columnParty_ID.AllowDBNull = false
            Me.columnTotalMinStockQty.Caption = "Qty"
            Me.columnTotalMinStockAmount.Caption = "Amount"
            Me.columnAddress_ID.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewInvs_ItemRow() As Invs_ItemRow
            Return CType(Me.NewRow,Invs_ItemRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Invs_ItemRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Invs_ItemRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Invs_ItemRowChangedEvent) Is Nothing) Then
                RaiseEvent Invs_ItemRowChanged(Me, New Invs_ItemRowChangeEvent(CType(e.Row,Invs_ItemRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Invs_ItemRowChangingEvent) Is Nothing) Then
                RaiseEvent Invs_ItemRowChanging(Me, New Invs_ItemRowChangeEvent(CType(e.Row,Invs_ItemRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Invs_ItemRowDeletedEvent) Is Nothing) Then
                RaiseEvent Invs_ItemRowDeleted(Me, New Invs_ItemRowChangeEvent(CType(e.Row,Invs_ItemRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Invs_ItemRowDeletingEvent) Is Nothing) Then
                RaiseEvent Invs_ItemRowDeleting(Me, New Invs_ItemRowChangeEvent(CType(e.Row,Invs_ItemRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveInvs_ItemRow(ByVal row As Invs_ItemRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuickInventoryDataSet = New QuickInventoryDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Invs_ItemDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Invs_Inventory_SalesInvoiceDataTable
        Inherits Global.System.Data.TypedTableBase(Of Invs_Inventory_SalesInvoiceRow)
        
        Private columnCo_ID As Global.System.Data.DataColumn
        
        Private columnInventory_ID As Global.System.Data.DataColumn
        
        Private columnSalesMan_ID As Global.System.Data.DataColumn
        
        Private columnStamp_DateTime As Global.System.Data.DataColumn
        
        Private columnStamp_UserID As Global.System.Data.DataColumn
        
        Private columnDiscount As Global.System.Data.DataColumn
        
        Private columnSalesTax As Global.System.Data.DataColumn
        
        Private columnTotalCashReceived As Global.System.Data.DataColumn
        
        Private columnUpload_DateTime As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Invs_Inventory_SalesInvoice"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCo_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SalesMan_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalesMan_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_UserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SalesTaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalesTax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalCashReceivedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalCashReceived
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Upload_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpload_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Invs_Inventory_SalesInvoiceRow
            Get
                Return CType(Me.Rows(index),Invs_Inventory_SalesInvoiceRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_Inventory_SalesInvoiceRowChanging As Invs_Inventory_SalesInvoiceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_Inventory_SalesInvoiceRowChanged As Invs_Inventory_SalesInvoiceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_Inventory_SalesInvoiceRowDeleting As Invs_Inventory_SalesInvoiceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_Inventory_SalesInvoiceRowDeleted As Invs_Inventory_SalesInvoiceRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddInvs_Inventory_SalesInvoiceRow(ByVal row As Invs_Inventory_SalesInvoiceRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddInvs_Inventory_SalesInvoiceRow(ByVal Co_ID As Short, ByVal Inventory_ID As Integer, ByVal SalesMan_ID As Integer, ByVal Stamp_DateTime As Date, ByVal Stamp_UserID As Integer, ByVal Discount As Decimal, ByVal SalesTax As Decimal, ByVal TotalCashReceived As Decimal, ByVal Upload_DateTime As Date) As Invs_Inventory_SalesInvoiceRow
            Dim rowInvs_Inventory_SalesInvoiceRow As Invs_Inventory_SalesInvoiceRow = CType(Me.NewRow,Invs_Inventory_SalesInvoiceRow)
            Dim columnValuesArray() As Object = New Object() {Co_ID, Inventory_ID, SalesMan_ID, Stamp_DateTime, Stamp_UserID, Discount, SalesTax, TotalCashReceived, Upload_DateTime}
            rowInvs_Inventory_SalesInvoiceRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowInvs_Inventory_SalesInvoiceRow)
            Return rowInvs_Inventory_SalesInvoiceRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCo_IDInventory_ID(ByVal Co_ID As Short, ByVal Inventory_ID As Integer) As Invs_Inventory_SalesInvoiceRow
            Return CType(Me.Rows.Find(New Object() {Co_ID, Inventory_ID}),Invs_Inventory_SalesInvoiceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Invs_Inventory_SalesInvoiceDataTable = CType(MyBase.Clone,Invs_Inventory_SalesInvoiceDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Invs_Inventory_SalesInvoiceDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCo_ID = MyBase.Columns("Co_ID")
            Me.columnInventory_ID = MyBase.Columns("Inventory_ID")
            Me.columnSalesMan_ID = MyBase.Columns("SalesMan_ID")
            Me.columnStamp_DateTime = MyBase.Columns("Stamp_DateTime")
            Me.columnStamp_UserID = MyBase.Columns("Stamp_UserID")
            Me.columnDiscount = MyBase.Columns("Discount")
            Me.columnSalesTax = MyBase.Columns("SalesTax")
            Me.columnTotalCashReceived = MyBase.Columns("TotalCashReceived")
            Me.columnUpload_DateTime = MyBase.Columns("Upload_DateTime")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCo_ID = New Global.System.Data.DataColumn("Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCo_ID)
            Me.columnInventory_ID = New Global.System.Data.DataColumn("Inventory_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_ID)
            Me.columnSalesMan_ID = New Global.System.Data.DataColumn("SalesMan_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalesMan_ID)
            Me.columnStamp_DateTime = New Global.System.Data.DataColumn("Stamp_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_DateTime)
            Me.columnStamp_UserID = New Global.System.Data.DataColumn("Stamp_UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_UserID)
            Me.columnDiscount = New Global.System.Data.DataColumn("Discount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount)
            Me.columnSalesTax = New Global.System.Data.DataColumn("SalesTax", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalesTax)
            Me.columnTotalCashReceived = New Global.System.Data.DataColumn("TotalCashReceived", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalCashReceived)
            Me.columnUpload_DateTime = New Global.System.Data.DataColumn("Upload_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpload_DateTime)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCo_ID, Me.columnInventory_ID}, true))
            Me.columnCo_ID.AllowDBNull = false
            Me.columnInventory_ID.AllowDBNull = false
            Me.columnSalesMan_ID.AllowDBNull = false
            Me.columnStamp_DateTime.AllowDBNull = false
            Me.columnStamp_UserID.AllowDBNull = false
            Me.columnDiscount.AllowDBNull = false
            Me.columnSalesTax.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewInvs_Inventory_SalesInvoiceRow() As Invs_Inventory_SalesInvoiceRow
            Return CType(Me.NewRow,Invs_Inventory_SalesInvoiceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Invs_Inventory_SalesInvoiceRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Invs_Inventory_SalesInvoiceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Invs_Inventory_SalesInvoiceRowChangedEvent) Is Nothing) Then
                RaiseEvent Invs_Inventory_SalesInvoiceRowChanged(Me, New Invs_Inventory_SalesInvoiceRowChangeEvent(CType(e.Row,Invs_Inventory_SalesInvoiceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Invs_Inventory_SalesInvoiceRowChangingEvent) Is Nothing) Then
                RaiseEvent Invs_Inventory_SalesInvoiceRowChanging(Me, New Invs_Inventory_SalesInvoiceRowChangeEvent(CType(e.Row,Invs_Inventory_SalesInvoiceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Invs_Inventory_SalesInvoiceRowDeletedEvent) Is Nothing) Then
                RaiseEvent Invs_Inventory_SalesInvoiceRowDeleted(Me, New Invs_Inventory_SalesInvoiceRowChangeEvent(CType(e.Row,Invs_Inventory_SalesInvoiceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Invs_Inventory_SalesInvoiceRowDeletingEvent) Is Nothing) Then
                RaiseEvent Invs_Inventory_SalesInvoiceRowDeleting(Me, New Invs_Inventory_SalesInvoiceRowChangeEvent(CType(e.Row,Invs_Inventory_SalesInvoiceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveInvs_Inventory_SalesInvoiceRow(ByVal row As Invs_Inventory_SalesInvoiceRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuickInventoryDataSet = New QuickInventoryDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Invs_Inventory_SalesInvoiceDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Invs_ItemSummaryDataTable
        Inherits Global.System.Data.TypedTableBase(Of Invs_ItemSummaryRow)
        
        Private columnCo_ID As Global.System.Data.DataColumn
        
        Private columnSource_First_ID As Global.System.Data.DataColumn
        
        Private columnSource_Second_ID As Global.System.Data.DataColumn
        
        Private columnSource_DocumentType_ID As Global.System.Data.DataColumn
        
        Private columnSummary_Type As Global.System.Data.DataColumn
        
        Private columnStamp_UserID As Global.System.Data.DataColumn
        
        Private columnStamp_DateTime As Global.System.Data.DataColumn
        
        Private columnUpload_DateTime As Global.System.Data.DataColumn
        
        Private columnWarehouse_ID As Global.System.Data.DataColumn
        
        Private columnItemSize_ID As Global.System.Data.DataColumn
        
        Private columnItemQty As Global.System.Data.DataColumn
        
        Private columnItemValue As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Invs_ItemSummary"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCo_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_First_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_First_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_Second_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_Second_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_DocumentType_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_DocumentType_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Summary_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSummary_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_UserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Upload_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpload_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Warehouse_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWarehouse_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemSize_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemSize_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Invs_ItemSummaryRow
            Get
                Return CType(Me.Rows(index),Invs_ItemSummaryRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_ItemSummaryRowChanging As Invs_ItemSummaryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_ItemSummaryRowChanged As Invs_ItemSummaryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_ItemSummaryRowDeleting As Invs_ItemSummaryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Invs_ItemSummaryRowDeleted As Invs_ItemSummaryRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddInvs_ItemSummaryRow(ByVal row As Invs_ItemSummaryRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddInvs_ItemSummaryRow(ByVal Co_ID As Short, ByVal Source_First_ID As Integer, ByVal Source_Second_ID As Integer, ByVal Source_DocumentType_ID As Integer, ByVal Summary_Type As String, ByVal Stamp_UserID As Integer, ByVal Stamp_DateTime As Date, ByVal Upload_DateTime As Date, ByVal Warehouse_ID As Integer, ByVal ItemSize_ID As Short, ByVal ItemQty As Double, ByVal ItemValue As Decimal) As Invs_ItemSummaryRow
            Dim rowInvs_ItemSummaryRow As Invs_ItemSummaryRow = CType(Me.NewRow,Invs_ItemSummaryRow)
            Dim columnValuesArray() As Object = New Object() {Co_ID, Source_First_ID, Source_Second_ID, Source_DocumentType_ID, Summary_Type, Stamp_UserID, Stamp_DateTime, Upload_DateTime, Warehouse_ID, ItemSize_ID, ItemQty, ItemValue}
            rowInvs_ItemSummaryRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowInvs_ItemSummaryRow)
            Return rowInvs_ItemSummaryRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCo_IDSource_First_IDSource_Second_IDSource_DocumentType_IDWarehouse_ID(ByVal Co_ID As Short, ByVal Source_First_ID As Integer, ByVal Source_Second_ID As Integer, ByVal Source_DocumentType_ID As Integer, ByVal Warehouse_ID As Integer) As Invs_ItemSummaryRow
            Return CType(Me.Rows.Find(New Object() {Co_ID, Source_First_ID, Source_Second_ID, Source_DocumentType_ID, Warehouse_ID}),Invs_ItemSummaryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Invs_ItemSummaryDataTable = CType(MyBase.Clone,Invs_ItemSummaryDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Invs_ItemSummaryDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCo_ID = MyBase.Columns("Co_ID")
            Me.columnSource_First_ID = MyBase.Columns("Source_First_ID")
            Me.columnSource_Second_ID = MyBase.Columns("Source_Second_ID")
            Me.columnSource_DocumentType_ID = MyBase.Columns("Source_DocumentType_ID")
            Me.columnSummary_Type = MyBase.Columns("Summary_Type")
            Me.columnStamp_UserID = MyBase.Columns("Stamp_UserID")
            Me.columnStamp_DateTime = MyBase.Columns("Stamp_DateTime")
            Me.columnUpload_DateTime = MyBase.Columns("Upload_DateTime")
            Me.columnWarehouse_ID = MyBase.Columns("Warehouse_ID")
            Me.columnItemSize_ID = MyBase.Columns("ItemSize_ID")
            Me.columnItemQty = MyBase.Columns("ItemQty")
            Me.columnItemValue = MyBase.Columns("ItemValue")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCo_ID = New Global.System.Data.DataColumn("Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCo_ID)
            Me.columnSource_First_ID = New Global.System.Data.DataColumn("Source_First_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_First_ID)
            Me.columnSource_Second_ID = New Global.System.Data.DataColumn("Source_Second_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_Second_ID)
            Me.columnSource_DocumentType_ID = New Global.System.Data.DataColumn("Source_DocumentType_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_DocumentType_ID)
            Me.columnSummary_Type = New Global.System.Data.DataColumn("Summary_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSummary_Type)
            Me.columnStamp_UserID = New Global.System.Data.DataColumn("Stamp_UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_UserID)
            Me.columnStamp_DateTime = New Global.System.Data.DataColumn("Stamp_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_DateTime)
            Me.columnUpload_DateTime = New Global.System.Data.DataColumn("Upload_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpload_DateTime)
            Me.columnWarehouse_ID = New Global.System.Data.DataColumn("Warehouse_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWarehouse_ID)
            Me.columnItemSize_ID = New Global.System.Data.DataColumn("ItemSize_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemSize_ID)
            Me.columnItemQty = New Global.System.Data.DataColumn("ItemQty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemQty)
            Me.columnItemValue = New Global.System.Data.DataColumn("ItemValue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemValue)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCo_ID, Me.columnSource_First_ID, Me.columnSource_Second_ID, Me.columnSource_DocumentType_ID, Me.columnWarehouse_ID}, true))
            Me.columnCo_ID.AllowDBNull = false
            Me.columnSource_First_ID.AllowDBNull = false
            Me.columnSource_Second_ID.AllowDBNull = false
            Me.columnSource_DocumentType_ID.AllowDBNull = false
            Me.columnStamp_UserID.AllowDBNull = false
            Me.columnStamp_DateTime.AllowDBNull = false
            Me.columnWarehouse_ID.AllowDBNull = false
            Me.columnItemSize_ID.AllowDBNull = false
            Me.columnItemQty.AllowDBNull = false
            Me.columnItemValue.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewInvs_ItemSummaryRow() As Invs_ItemSummaryRow
            Return CType(Me.NewRow,Invs_ItemSummaryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Invs_ItemSummaryRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Invs_ItemSummaryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Invs_ItemSummaryRowChangedEvent) Is Nothing) Then
                RaiseEvent Invs_ItemSummaryRowChanged(Me, New Invs_ItemSummaryRowChangeEvent(CType(e.Row,Invs_ItemSummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Invs_ItemSummaryRowChangingEvent) Is Nothing) Then
                RaiseEvent Invs_ItemSummaryRowChanging(Me, New Invs_ItemSummaryRowChangeEvent(CType(e.Row,Invs_ItemSummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Invs_ItemSummaryRowDeletedEvent) Is Nothing) Then
                RaiseEvent Invs_ItemSummaryRowDeleted(Me, New Invs_ItemSummaryRowChangeEvent(CType(e.Row,Invs_ItemSummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Invs_ItemSummaryRowDeletingEvent) Is Nothing) Then
                RaiseEvent Invs_ItemSummaryRowDeleting(Me, New Invs_ItemSummaryRowChangeEvent(CType(e.Row,Invs_ItemSummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveInvs_ItemSummaryRow(ByVal row As Invs_ItemSummaryRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuickInventoryDataSet = New QuickInventoryDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Invs_ItemSummaryDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Inv_ItemSizeDataTable
        Inherits Global.System.Data.TypedTableBase(Of Inv_ItemSizeRow)
        
        Private columnCo_ID As Global.System.Data.DataColumn
        
        Private columnItemSize_ID As Global.System.Data.DataColumn
        
        Private columnStamp_UserID As Global.System.Data.DataColumn
        
        Private columnStamp_DateTime As Global.System.Data.DataColumn
        
        Private columnUpload_DateTime As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Inv_ItemSize"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCo_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemSize_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemSize_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_UserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stamp_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStamp_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Upload_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpload_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Inv_ItemSizeRow
            Get
                Return CType(Me.Rows(index),Inv_ItemSizeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Inv_ItemSizeRowChanging As Inv_ItemSizeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Inv_ItemSizeRowChanged As Inv_ItemSizeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Inv_ItemSizeRowDeleting As Inv_ItemSizeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Inv_ItemSizeRowDeleted As Inv_ItemSizeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddInv_ItemSizeRow(ByVal row As Inv_ItemSizeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddInv_ItemSizeRow(ByVal Co_ID As Short, ByVal ItemSize_ID As Short, ByVal Stamp_UserID As Integer, ByVal Stamp_DateTime As Date, ByVal Upload_DateTime As Date) As Inv_ItemSizeRow
            Dim rowInv_ItemSizeRow As Inv_ItemSizeRow = CType(Me.NewRow,Inv_ItemSizeRow)
            Dim columnValuesArray() As Object = New Object() {Co_ID, ItemSize_ID, Stamp_UserID, Stamp_DateTime, Upload_DateTime}
            rowInv_ItemSizeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowInv_ItemSizeRow)
            Return rowInv_ItemSizeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCo_IDItemSize_ID(ByVal Co_ID As Short, ByVal ItemSize_ID As Short) As Inv_ItemSizeRow
            Return CType(Me.Rows.Find(New Object() {Co_ID, ItemSize_ID}),Inv_ItemSizeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Inv_ItemSizeDataTable = CType(MyBase.Clone,Inv_ItemSizeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Inv_ItemSizeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCo_ID = MyBase.Columns("Co_ID")
            Me.columnItemSize_ID = MyBase.Columns("ItemSize_ID")
            Me.columnStamp_UserID = MyBase.Columns("Stamp_UserID")
            Me.columnStamp_DateTime = MyBase.Columns("Stamp_DateTime")
            Me.columnUpload_DateTime = MyBase.Columns("Upload_DateTime")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCo_ID = New Global.System.Data.DataColumn("Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCo_ID)
            Me.columnItemSize_ID = New Global.System.Data.DataColumn("ItemSize_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemSize_ID)
            Me.columnStamp_UserID = New Global.System.Data.DataColumn("Stamp_UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_UserID)
            Me.columnStamp_DateTime = New Global.System.Data.DataColumn("Stamp_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStamp_DateTime)
            Me.columnUpload_DateTime = New Global.System.Data.DataColumn("Upload_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpload_DateTime)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCo_ID, Me.columnItemSize_ID}, true))
            Me.columnCo_ID.AllowDBNull = false
            Me.columnItemSize_ID.AllowDBNull = false
            Me.columnStamp_UserID.AllowDBNull = false
            Me.columnStamp_DateTime.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewInv_ItemSizeRow() As Inv_ItemSizeRow
            Return CType(Me.NewRow,Inv_ItemSizeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Inv_ItemSizeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Inv_ItemSizeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Inv_ItemSizeRowChangedEvent) Is Nothing) Then
                RaiseEvent Inv_ItemSizeRowChanged(Me, New Inv_ItemSizeRowChangeEvent(CType(e.Row,Inv_ItemSizeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Inv_ItemSizeRowChangingEvent) Is Nothing) Then
                RaiseEvent Inv_ItemSizeRowChanging(Me, New Inv_ItemSizeRowChangeEvent(CType(e.Row,Inv_ItemSizeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Inv_ItemSizeRowDeletedEvent) Is Nothing) Then
                RaiseEvent Inv_ItemSizeRowDeleted(Me, New Inv_ItemSizeRowChangeEvent(CType(e.Row,Inv_ItemSizeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Inv_ItemSizeRowDeletingEvent) Is Nothing) Then
                RaiseEvent Inv_ItemSizeRowDeleting(Me, New Inv_ItemSizeRowChangeEvent(CType(e.Row,Inv_ItemSizeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveInv_ItemSizeRow(ByVal row As Inv_ItemSizeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuickInventoryDataSet = New QuickInventoryDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Inv_ItemSizeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class StockInquiryDataTable
        Inherits Global.System.Data.TypedTableBase(Of StockInquiryRow)
        
        Private columnCo_ID As Global.System.Data.DataColumn
        
        Private columnCo_Code As Global.System.Data.DataColumn
        
        Private columnWarehouse_ID As Global.System.Data.DataColumn
        
        Private columnWarehouse_Name As Global.System.Data.DataColumn
        
        Private columnItem_ID As Global.System.Data.DataColumn
        
        Private columnItem_Code As Global.System.Data.DataColumn
        
        Private columnItem_Category As Global.System.Data.DataColumn
        
        Private columnItem_Desc As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size01 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size02 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size03 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size04 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size05 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size06 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size07 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size08 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size09 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size10 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size11 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size12 As Global.System.Data.DataColumn
        
        Private columnInventory_Qty_Size13 As Global.System.Data.DataColumn
        
        Private columnQty_Total As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "StockInquiry"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Co_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCo_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Co_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCo_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Warehouse_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWarehouse_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Warehouse_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWarehouse_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_CategoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Category
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_DescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inventory_Qty_Size13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInventory_Qty_Size13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Qty_TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty_Total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As StockInquiryRow
            Get
                Return CType(Me.Rows(index),StockInquiryRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StockInquiryRowChanging As StockInquiryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StockInquiryRowChanged As StockInquiryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StockInquiryRowDeleting As StockInquiryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StockInquiryRowDeleted As StockInquiryRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddStockInquiryRow(ByVal row As StockInquiryRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddStockInquiryRow( _
                    ByVal Co_ID As Short,  _
                    ByVal Co_Code As String,  _
                    ByVal Warehouse_ID As Integer,  _
                    ByVal Warehouse_Name As String,  _
                    ByVal Item_ID As Integer,  _
                    ByVal Item_Code As String,  _
                    ByVal Item_Category As String,  _
                    ByVal Item_Desc As String,  _
                    ByVal Inventory_Qty_Size01 As Decimal,  _
                    ByVal Inventory_Qty_Size02 As Decimal,  _
                    ByVal Inventory_Qty_Size03 As Decimal,  _
                    ByVal Inventory_Qty_Size04 As Decimal,  _
                    ByVal Inventory_Qty_Size05 As Decimal,  _
                    ByVal Inventory_Qty_Size06 As Decimal,  _
                    ByVal Inventory_Qty_Size07 As Decimal,  _
                    ByVal Inventory_Qty_Size08 As Decimal,  _
                    ByVal Inventory_Qty_Size09 As Decimal,  _
                    ByVal Inventory_Qty_Size10 As Decimal,  _
                    ByVal Inventory_Qty_Size11 As Decimal,  _
                    ByVal Inventory_Qty_Size12 As Decimal,  _
                    ByVal Inventory_Qty_Size13 As Decimal,  _
                    ByVal Qty_Total As Decimal) As StockInquiryRow
            Dim rowStockInquiryRow As StockInquiryRow = CType(Me.NewRow,StockInquiryRow)
            Dim columnValuesArray() As Object = New Object() {Co_ID, Co_Code, Warehouse_ID, Warehouse_Name, Item_ID, Item_Code, Item_Category, Item_Desc, Inventory_Qty_Size01, Inventory_Qty_Size02, Inventory_Qty_Size03, Inventory_Qty_Size04, Inventory_Qty_Size05, Inventory_Qty_Size06, Inventory_Qty_Size07, Inventory_Qty_Size08, Inventory_Qty_Size09, Inventory_Qty_Size10, Inventory_Qty_Size11, Inventory_Qty_Size12, Inventory_Qty_Size13, Qty_Total}
            rowStockInquiryRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowStockInquiryRow)
            Return rowStockInquiryRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As StockInquiryDataTable = CType(MyBase.Clone,StockInquiryDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New StockInquiryDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCo_ID = MyBase.Columns("Co_ID")
            Me.columnCo_Code = MyBase.Columns("Co_Code")
            Me.columnWarehouse_ID = MyBase.Columns("Warehouse_ID")
            Me.columnWarehouse_Name = MyBase.Columns("Warehouse_Name")
            Me.columnItem_ID = MyBase.Columns("Item_ID")
            Me.columnItem_Code = MyBase.Columns("Item_Code")
            Me.columnItem_Category = MyBase.Columns("Item_Category")
            Me.columnItem_Desc = MyBase.Columns("Item_Desc")
            Me.columnInventory_Qty_Size01 = MyBase.Columns("Inventory_Qty_Size01")
            Me.columnInventory_Qty_Size02 = MyBase.Columns("Inventory_Qty_Size02")
            Me.columnInventory_Qty_Size03 = MyBase.Columns("Inventory_Qty_Size03")
            Me.columnInventory_Qty_Size04 = MyBase.Columns("Inventory_Qty_Size04")
            Me.columnInventory_Qty_Size05 = MyBase.Columns("Inventory_Qty_Size05")
            Me.columnInventory_Qty_Size06 = MyBase.Columns("Inventory_Qty_Size06")
            Me.columnInventory_Qty_Size07 = MyBase.Columns("Inventory_Qty_Size07")
            Me.columnInventory_Qty_Size08 = MyBase.Columns("Inventory_Qty_Size08")
            Me.columnInventory_Qty_Size09 = MyBase.Columns("Inventory_Qty_Size09")
            Me.columnInventory_Qty_Size10 = MyBase.Columns("Inventory_Qty_Size10")
            Me.columnInventory_Qty_Size11 = MyBase.Columns("Inventory_Qty_Size11")
            Me.columnInventory_Qty_Size12 = MyBase.Columns("Inventory_Qty_Size12")
            Me.columnInventory_Qty_Size13 = MyBase.Columns("Inventory_Qty_Size13")
            Me.columnQty_Total = MyBase.Columns("Qty_Total")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCo_ID = New Global.System.Data.DataColumn("Co_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCo_ID)
            Me.columnCo_Code = New Global.System.Data.DataColumn("Co_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCo_Code)
            Me.columnWarehouse_ID = New Global.System.Data.DataColumn("Warehouse_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWarehouse_ID)
            Me.columnWarehouse_Name = New Global.System.Data.DataColumn("Warehouse_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWarehouse_Name)
            Me.columnItem_ID = New Global.System.Data.DataColumn("Item_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_ID)
            Me.columnItem_Code = New Global.System.Data.DataColumn("Item_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Code)
            Me.columnItem_Category = New Global.System.Data.DataColumn("Item_Category", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Category)
            Me.columnItem_Desc = New Global.System.Data.DataColumn("Item_Desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Desc)
            Me.columnInventory_Qty_Size01 = New Global.System.Data.DataColumn("Inventory_Qty_Size01", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size01)
            Me.columnInventory_Qty_Size02 = New Global.System.Data.DataColumn("Inventory_Qty_Size02", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size02)
            Me.columnInventory_Qty_Size03 = New Global.System.Data.DataColumn("Inventory_Qty_Size03", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size03)
            Me.columnInventory_Qty_Size04 = New Global.System.Data.DataColumn("Inventory_Qty_Size04", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size04)
            Me.columnInventory_Qty_Size05 = New Global.System.Data.DataColumn("Inventory_Qty_Size05", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size05)
            Me.columnInventory_Qty_Size06 = New Global.System.Data.DataColumn("Inventory_Qty_Size06", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size06)
            Me.columnInventory_Qty_Size07 = New Global.System.Data.DataColumn("Inventory_Qty_Size07", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size07)
            Me.columnInventory_Qty_Size08 = New Global.System.Data.DataColumn("Inventory_Qty_Size08", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size08)
            Me.columnInventory_Qty_Size09 = New Global.System.Data.DataColumn("Inventory_Qty_Size09", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size09)
            Me.columnInventory_Qty_Size10 = New Global.System.Data.DataColumn("Inventory_Qty_Size10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size10)
            Me.columnInventory_Qty_Size11 = New Global.System.Data.DataColumn("Inventory_Qty_Size11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size11)
            Me.columnInventory_Qty_Size12 = New Global.System.Data.DataColumn("Inventory_Qty_Size12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size12)
            Me.columnInventory_Qty_Size13 = New Global.System.Data.DataColumn("Inventory_Qty_Size13", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInventory_Qty_Size13)
            Me.columnQty_Total = New Global.System.Data.DataColumn("Qty_Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty_Total)
            Me.columnCo_ID.AllowDBNull = false
            Me.columnCo_Code.MaxLength = 50
            Me.columnWarehouse_ID.AllowDBNull = false
            Me.columnWarehouse_Name.ReadOnly = true
            Me.columnWarehouse_Name.MaxLength = 100
            Me.columnItem_ID.AllowDBNull = false
            Me.columnItem_Code.MaxLength = 50
            Me.columnItem_Category.MaxLength = 50
            Me.columnItem_Desc.MaxLength = 50
            Me.columnQty_Total.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewStockInquiryRow() As StockInquiryRow
            Return CType(Me.NewRow,StockInquiryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New StockInquiryRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(StockInquiryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.StockInquiryRowChangedEvent) Is Nothing) Then
                RaiseEvent StockInquiryRowChanged(Me, New StockInquiryRowChangeEvent(CType(e.Row,StockInquiryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.StockInquiryRowChangingEvent) Is Nothing) Then
                RaiseEvent StockInquiryRowChanging(Me, New StockInquiryRowChangeEvent(CType(e.Row,StockInquiryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.StockInquiryRowDeletedEvent) Is Nothing) Then
                RaiseEvent StockInquiryRowDeleted(Me, New StockInquiryRowChangeEvent(CType(e.Row,StockInquiryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.StockInquiryRowDeletingEvent) Is Nothing) Then
                RaiseEvent StockInquiryRowDeleting(Me, New StockInquiryRowChangeEvent(CType(e.Row,StockInquiryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveStockInquiryRow(ByVal row As StockInquiryRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuickInventoryDataSet = New QuickInventoryDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "StockInquiryDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class WarehouseRow
        Inherits Global.System.Data.DataRow
        
        Private tableWarehouse As WarehouseDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableWarehouse = CType(Me.Table,WarehouseDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Co_ID() As Short
            Get
                Return CType(Me(Me.tableWarehouse.Co_IDColumn),Short)
            End Get
            Set
                Me(Me.tableWarehouse.Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Warehouse_ID() As Integer
            Get
                Return CType(Me(Me.tableWarehouse.Warehouse_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableWarehouse.Warehouse_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Warehouse_Name() As String
            Get
                Return CType(Me(Me.tableWarehouse.Warehouse_NameColumn),String)
            End Get
            Set
                Me(Me.tableWarehouse.Warehouse_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_UserID() As Integer
            Get
                Return CType(Me(Me.tableWarehouse.Stamp_UserIDColumn),Integer)
            End Get
            Set
                Me(Me.tableWarehouse.Stamp_UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_DateTime() As Date
            Get
                Return CType(Me(Me.tableWarehouse.Stamp_DateTimeColumn),Date)
            End Get
            Set
                Me(Me.tableWarehouse.Stamp_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Upload_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableWarehouse.Upload_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Upload_DateTime' in table 'Warehouse' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWarehouse.Upload_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUpload_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tableWarehouse.Upload_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUpload_DateTimeNull()
            Me(Me.tableWarehouse.Upload_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class InventorySalesInvoiceRow
        Inherits Global.System.Data.DataRow
        
        Private tableInventorySalesInvoice As InventorySalesInvoiceDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableInventorySalesInvoice = CType(Me.Table,InventorySalesInvoiceDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Co_ID() As Short
            Get
                Return CType(Me(Me.tableInventorySalesInvoice.Co_IDColumn),Short)
            End Get
            Set
                Me(Me.tableInventorySalesInvoice.Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_ID() As Integer
            Get
                Return CType(Me(Me.tableInventorySalesInvoice.Inventory_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInventorySalesInvoice.Inventory_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SalesMan_ID() As Integer
            Get
                Return CType(Me(Me.tableInventorySalesInvoice.SalesMan_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInventorySalesInvoice.SalesMan_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_DateTime() As Date
            Get
                Return CType(Me(Me.tableInventorySalesInvoice.Stamp_DateTimeColumn),Date)
            End Get
            Set
                Me(Me.tableInventorySalesInvoice.Stamp_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_UserID() As Integer
            Get
                Return CType(Me(Me.tableInventorySalesInvoice.Stamp_UserIDColumn),Integer)
            End Get
            Set
                Me(Me.tableInventorySalesInvoice.Stamp_UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Discount() As Decimal
            Get
                Return CType(Me(Me.tableInventorySalesInvoice.DiscountColumn),Decimal)
            End Get
            Set
                Me(Me.tableInventorySalesInvoice.DiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SalesTax() As Decimal
            Get
                Return CType(Me(Me.tableInventorySalesInvoice.SalesTaxColumn),Decimal)
            End Get
            Set
                Me(Me.tableInventorySalesInvoice.SalesTaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalCashReceived() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInventorySalesInvoice.TotalCashReceivedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalCashReceived' in table 'InventorySalesInvoice' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventorySalesInvoice.TotalCashReceivedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Upload_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableInventorySalesInvoice.Upload_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Upload_DateTime' in table 'InventorySalesInvoice' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableInventorySalesInvoice.Upload_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalCashReceivedNull() As Boolean
            Return Me.IsNull(Me.tableInventorySalesInvoice.TotalCashReceivedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalCashReceivedNull()
            Me(Me.tableInventorySalesInvoice.TotalCashReceivedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUpload_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tableInventorySalesInvoice.Upload_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUpload_DateTimeNull()
            Me(Me.tableInventorySalesInvoice.Upload_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ItemSummaryRow
        Inherits Global.System.Data.DataRow
        
        Private tableItemSummary As ItemSummaryDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableItemSummary = CType(Me.Table,ItemSummaryDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Co_ID() As Short
            Get
                Return CType(Me(Me.tableItemSummary.Co_IDColumn),Short)
            End Get
            Set
                Me(Me.tableItemSummary.Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_First_ID() As Integer
            Get
                Return CType(Me(Me.tableItemSummary.Source_First_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableItemSummary.Source_First_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_Second_ID() As Integer
            Get
                Return CType(Me(Me.tableItemSummary.Source_Second_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableItemSummary.Source_Second_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_DocumentType_ID() As Integer
            Get
                Return CType(Me(Me.tableItemSummary.Source_DocumentType_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableItemSummary.Source_DocumentType_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Summary_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableItemSummary.Summary_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Summary_Type' in table 'ItemSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItemSummary.Summary_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemSummary_Size01() As Decimal
            Get
                Return CType(Me(Me.tableItemSummary.ItemSummary_Size01Column),Decimal)
            End Get
            Set
                Me(Me.tableItemSummary.ItemSummary_Size01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemSummary_Size02() As Decimal
            Get
                Return CType(Me(Me.tableItemSummary.ItemSummary_Size02Column),Decimal)
            End Get
            Set
                Me(Me.tableItemSummary.ItemSummary_Size02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemSummary_Size03() As Decimal
            Get
                Return CType(Me(Me.tableItemSummary.ItemSummary_Size03Column),Decimal)
            End Get
            Set
                Me(Me.tableItemSummary.ItemSummary_Size03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemSummary_Size04() As Decimal
            Get
                Return CType(Me(Me.tableItemSummary.ItemSummary_Size04Column),Decimal)
            End Get
            Set
                Me(Me.tableItemSummary.ItemSummary_Size04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemSummary_Size05() As Decimal
            Get
                Return CType(Me(Me.tableItemSummary.ItemSummary_Size05Column),Decimal)
            End Get
            Set
                Me(Me.tableItemSummary.ItemSummary_Size05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemSummary_Size06() As Decimal
            Get
                Return CType(Me(Me.tableItemSummary.ItemSummary_Size06Column),Decimal)
            End Get
            Set
                Me(Me.tableItemSummary.ItemSummary_Size06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemSummary_Size07() As Decimal
            Get
                Return CType(Me(Me.tableItemSummary.ItemSummary_Size07Column),Decimal)
            End Get
            Set
                Me(Me.tableItemSummary.ItemSummary_Size07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemSummary_Size08() As Decimal
            Get
                Return CType(Me(Me.tableItemSummary.ItemSummary_Size08Column),Decimal)
            End Get
            Set
                Me(Me.tableItemSummary.ItemSummary_Size08Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemSummary_Size09() As Decimal
            Get
                Return CType(Me(Me.tableItemSummary.ItemSummary_Size09Column),Decimal)
            End Get
            Set
                Me(Me.tableItemSummary.ItemSummary_Size09Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemSummary_Size10() As Decimal
            Get
                Return CType(Me(Me.tableItemSummary.ItemSummary_Size10Column),Decimal)
            End Get
            Set
                Me(Me.tableItemSummary.ItemSummary_Size10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemSummary_Size11() As Decimal
            Get
                Return CType(Me(Me.tableItemSummary.ItemSummary_Size11Column),Decimal)
            End Get
            Set
                Me(Me.tableItemSummary.ItemSummary_Size11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemSummary_Size12() As Decimal
            Get
                Return CType(Me(Me.tableItemSummary.ItemSummary_Size12Column),Decimal)
            End Get
            Set
                Me(Me.tableItemSummary.ItemSummary_Size12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemSummary_Size13() As Decimal
            Get
                Return CType(Me(Me.tableItemSummary.ItemSummary_Size13Column),Decimal)
            End Get
            Set
                Me(Me.tableItemSummary.ItemSummary_Size13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableItemSummary.TotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'ItemSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItemSummary.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_UserID() As Integer
            Get
                Return CType(Me(Me.tableItemSummary.Stamp_UserIDColumn),Integer)
            End Get
            Set
                Me(Me.tableItemSummary.Stamp_UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_DateTime() As Date
            Get
                Return CType(Me(Me.tableItemSummary.Stamp_DateTimeColumn),Date)
            End Get
            Set
                Me(Me.tableItemSummary.Stamp_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Upload_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableItemSummary.Upload_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Upload_DateTime' in table 'ItemSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItemSummary.Upload_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Warehouse_ID() As Integer
            Get
                Return CType(Me(Me.tableItemSummary.Warehouse_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableItemSummary.Warehouse_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSummary_TypeNull() As Boolean
            Return Me.IsNull(Me.tableItemSummary.Summary_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSummary_TypeNull()
            Me(Me.tableItemSummary.Summary_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableItemSummary.TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalNull()
            Me(Me.tableItemSummary.TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUpload_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tableItemSummary.Upload_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUpload_DateTimeNull()
            Me(Me.tableItemSummary.Upload_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Temp_SalesInvoiceReportRow
        Inherits Global.System.Data.DataRow
        
        Private tableTemp_SalesInvoiceReport As Temp_SalesInvoiceReportDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTemp_SalesInvoiceReport = CType(Me.Table,Temp_SalesInvoiceReportDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Co_ID() As Short
            Get
                Return CType(Me(Me.tableTemp_SalesInvoiceReport.Co_IDColumn),Short)
            End Get
            Set
                Me(Me.tableTemp_SalesInvoiceReport.Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Co_Desc() As String
            Get
                Return CType(Me(Me.tableTemp_SalesInvoiceReport.Co_DescColumn),String)
            End Get
            Set
                Me(Me.tableTemp_SalesInvoiceReport.Co_DescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Address_Desc() As String
            Get
                Return CType(Me(Me.tableTemp_SalesInvoiceReport.Address_DescColumn),String)
            End Get
            Set
                Me(Me.tableTemp_SalesInvoiceReport.Address_DescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Date() As Date
            Get
                Return CType(Me(Me.tableTemp_SalesInvoiceReport.Inventory_DateColumn),Date)
            End Get
            Set
                Me(Me.tableTemp_SalesInvoiceReport.Inventory_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Party_ID() As Integer
            Get
                Return CType(Me(Me.tableTemp_SalesInvoiceReport.Party_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableTemp_SalesInvoiceReport.Party_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Party_Desc() As String
            Get
                Return CType(Me(Me.tableTemp_SalesInvoiceReport.Party_DescColumn),String)
            End Get
            Set
                Me(Me.tableTemp_SalesInvoiceReport.Party_DescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Return CType(Me(Me.tableTemp_SalesInvoiceReport.RemarksColumn),String)
            End Get
            Set
                Me(Me.tableTemp_SalesInvoiceReport.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DocumentType_ID() As Short
            Get
                Return CType(Me(Me.tableTemp_SalesInvoiceReport.DocumentType_IDColumn),Short)
            End Get
            Set
                Me(Me.tableTemp_SalesInvoiceReport.DocumentType_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_ID() As Integer
            Get
                Return CType(Me(Me.tableTemp_SalesInvoiceReport.Item_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableTemp_SalesInvoiceReport.Item_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Code() As String
            Get
                Return CType(Me(Me.tableTemp_SalesInvoiceReport.Item_CodeColumn),String)
            End Get
            Set
                Me(Me.tableTemp_SalesInvoiceReport.Item_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Desc() As String
            Get
                Return CType(Me(Me.tableTemp_SalesInvoiceReport.Item_DescColumn),String)
            End Get
            Set
                Me(Me.tableTemp_SalesInvoiceReport.Item_DescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Size_Desc() As String
            Get
                Return CType(Me(Me.tableTemp_SalesInvoiceReport.Size_DescColumn),String)
            End Get
            Set
                Me(Me.tableTemp_SalesInvoiceReport.Size_DescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Rate() As Decimal
            Get
                Return CType(Me(Me.tableTemp_SalesInvoiceReport.RateColumn),Decimal)
            End Get
            Set
                Me(Me.tableTemp_SalesInvoiceReport.RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Qty() As Decimal
            Get
                Return CType(Me(Me.tableTemp_SalesInvoiceReport.QtyColumn),Decimal)
            End Get
            Set
                Me(Me.tableTemp_SalesInvoiceReport.QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Discount() As Decimal
            Get
                Return CType(Me(Me.tableTemp_SalesInvoiceReport.DiscountColumn),Decimal)
            End Get
            Set
                Me(Me.tableTemp_SalesInvoiceReport.DiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SalesTax() As Decimal
            Get
                Return CType(Me(Me.tableTemp_SalesInvoiceReport.SalesTaxColumn),Decimal)
            End Get
            Set
                Me(Me.tableTemp_SalesInvoiceReport.SalesTaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_No() As String
            Get
                Return CType(Me(Me.tableTemp_SalesInvoiceReport.Inventory_NoColumn),String)
            End Get
            Set
                Me(Me.tableTemp_SalesInvoiceReport.Inventory_NoColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class InventoryDetailRow
        Inherits Global.System.Data.DataRow
        
        Private tableInventoryDetail As InventoryDetailDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableInventoryDetail = CType(Me.Table,InventoryDetailDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Co_ID() As Short
            Get
                Return CType(Me(Me.tableInventoryDetail.Co_IDColumn),Short)
            End Get
            Set
                Me(Me.tableInventoryDetail.Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_ID() As Integer
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InventoryDetail_ID() As Integer
            Get
                Return CType(Me(Me.tableInventoryDetail.InventoryDetail_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInventoryDetail.InventoryDetail_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DocumentType_ID() As Short
            Get
                Return CType(Me(Me.tableInventoryDetail.DocumentType_IDColumn),Short)
            End Get
            Set
                Me(Me.tableInventoryDetail.DocumentType_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_ID() As Integer
            Get
                Return CType(Me(Me.tableInventoryDetail.Item_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInventoryDetail.Item_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableInventoryDetail.Item_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_Code' in table 'InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventoryDetail.Item_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Desc() As String
            Get
                Try 
                    Return CType(Me(Me.tableInventoryDetail.Item_DescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_Desc' in table 'InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventoryDetail.Item_DescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size01() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Qty_Size01Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Qty_Size01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size02() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Qty_Size02Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Qty_Size02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size03() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Qty_Size03Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Qty_Size03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size04() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Qty_Size04Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Qty_Size04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size05() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Qty_Size05Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Qty_Size05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size06() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Qty_Size06Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Qty_Size06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size07() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Qty_Size07Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Qty_Size07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size08() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Qty_Size08Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Qty_Size08Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size09() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Qty_Size09Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Qty_Size09Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size10() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Qty_Size10Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Qty_Size10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size11() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Qty_Size11Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Qty_Size11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size12() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Qty_Size12Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Qty_Size12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size13() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Qty_Size13Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Qty_Size13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Rate_Size01() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Rate_Size01Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Rate_Size01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Rate_Size02() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Rate_Size02Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Rate_Size02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Rate_Size03() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Rate_Size03Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Rate_Size03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Rate_Size04() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Rate_Size04Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Rate_Size04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Rate_Size05() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Rate_Size05Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Rate_Size05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Rate_Size06() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Rate_Size06Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Rate_Size06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Rate_Size07() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Rate_Size07Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Rate_Size07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Rate_Size08() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Rate_Size08Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Rate_Size08Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Rate_Size09() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Rate_Size09Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Rate_Size09Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Rate_Size10() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Rate_Size10Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Rate_Size10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Rate_Size11() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Rate_Size11Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Rate_Size11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Rate_Size12() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Rate_Size12Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Rate_Size12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Rate_Size13() As Decimal
            Get
                Return CType(Me(Me.tableInventoryDetail.Inventory_Rate_Size13Column),Decimal)
            End Get
            Set
                Me(Me.tableInventoryDetail.Inventory_Rate_Size13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableInventoryDetail.Stamp_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Stamp_DateTime' in table 'InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventoryDetail.Stamp_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_UserID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInventoryDetail.Stamp_UserIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Stamp_UserID' in table 'InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventoryDetail.Stamp_UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_DocumentType_ID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableInventoryDetail.Source_DocumentType_IDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source_DocumentType_ID' in table 'InventoryDetail' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventoryDetail.Source_DocumentType_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_Document_Co_ID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableInventoryDetail.Source_Document_Co_IDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source_Document_Co_ID' in table 'InventoryDetail' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableInventoryDetail.Source_Document_Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_Document_No() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInventoryDetail.Source_Document_NoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source_Document_No' in table 'InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventoryDetail.Source_Document_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalQty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInventoryDetail.TotalQtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalQty' in table 'InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventoryDetail.TotalQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInventoryDetail.TotalAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalAmount' in table 'InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventoryDetail.TotalAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Upload_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableInventoryDetail.Upload_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Upload_DateTime' in table 'InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventoryDetail.Upload_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Discount() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInventoryDetail.DiscountColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Discount' in table 'InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventoryDetail.DiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SalesTax() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInventoryDetail.SalesTaxColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalesTax' in table 'InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventoryDetail.SalesTaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Warehouse_ID() As Integer
            Get
                Return CType(Me(Me.tableInventoryDetail.Warehouse_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInventoryDetail.Warehouse_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RecordStatus_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInventoryDetail.RecordStatus_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RecordStatus_ID' in table 'InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventoryDetail.RecordStatus_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemRowParent() As ItemRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_Inv_SalesInvoice_Detail_Inv_Item")),ItemRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_Inv_SalesInvoice_Detail_Inv_Item"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Invs_ItemRowParent() As Invs_ItemRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_Inv_SalesInvoice_Detail_Inv_Item2")),Invs_ItemRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_Inv_SalesInvoice_Detail_Inv_Item2"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_CodeNull() As Boolean
            Return Me.IsNull(Me.tableInventoryDetail.Item_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_CodeNull()
            Me(Me.tableInventoryDetail.Item_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_DescNull() As Boolean
            Return Me.IsNull(Me.tableInventoryDetail.Item_DescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_DescNull()
            Me(Me.tableInventoryDetail.Item_DescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStamp_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tableInventoryDetail.Stamp_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStamp_DateTimeNull()
            Me(Me.tableInventoryDetail.Stamp_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStamp_UserIDNull() As Boolean
            Return Me.IsNull(Me.tableInventoryDetail.Stamp_UserIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStamp_UserIDNull()
            Me(Me.tableInventoryDetail.Stamp_UserIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSource_DocumentType_IDNull() As Boolean
            Return Me.IsNull(Me.tableInventoryDetail.Source_DocumentType_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSource_DocumentType_IDNull()
            Me(Me.tableInventoryDetail.Source_DocumentType_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSource_Document_Co_IDNull() As Boolean
            Return Me.IsNull(Me.tableInventoryDetail.Source_Document_Co_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSource_Document_Co_IDNull()
            Me(Me.tableInventoryDetail.Source_Document_Co_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSource_Document_NoNull() As Boolean
            Return Me.IsNull(Me.tableInventoryDetail.Source_Document_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSource_Document_NoNull()
            Me(Me.tableInventoryDetail.Source_Document_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalQtyNull() As Boolean
            Return Me.IsNull(Me.tableInventoryDetail.TotalQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalQtyNull()
            Me(Me.tableInventoryDetail.TotalQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalAmountNull() As Boolean
            Return Me.IsNull(Me.tableInventoryDetail.TotalAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalAmountNull()
            Me(Me.tableInventoryDetail.TotalAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUpload_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tableInventoryDetail.Upload_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUpload_DateTimeNull()
            Me(Me.tableInventoryDetail.Upload_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDiscountNull() As Boolean
            Return Me.IsNull(Me.tableInventoryDetail.DiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDiscountNull()
            Me(Me.tableInventoryDetail.DiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSalesTaxNull() As Boolean
            Return Me.IsNull(Me.tableInventoryDetail.SalesTaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSalesTaxNull()
            Me(Me.tableInventoryDetail.SalesTaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRecordStatus_IDNull() As Boolean
            Return Me.IsNull(Me.tableInventoryDetail.RecordStatus_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRecordStatus_IDNull()
            Me(Me.tableInventoryDetail.RecordStatus_IDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ItemRow
        Inherits Global.System.Data.DataRow
        
        Private tableItem As ItemDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableItem = CType(Me.Table,ItemDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Co_ID() As Short
            Get
                Return CType(Me(Me.tableItem.Co_IDColumn),Short)
            End Get
            Set
                Me(Me.tableItem.Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_ID() As Integer
            Get
                Return CType(Me(Me.tableItem.Item_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableItem.Item_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableItem.Item_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_Code' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Item_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Desc() As String
            Get
                Return CType(Me(Me.tableItem.Item_DescColumn),String)
            End Get
            Set
                Me(Me.tableItem.Item_DescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_SaleRate_Size01() As Decimal
            Get
                Return CType(Me(Me.tableItem.Item_SaleRate_Size01Column),Decimal)
            End Get
            Set
                Me(Me.tableItem.Item_SaleRate_Size01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_SaleRate_Size02() As Decimal
            Get
                Return CType(Me(Me.tableItem.Item_SaleRate_Size02Column),Decimal)
            End Get
            Set
                Me(Me.tableItem.Item_SaleRate_Size02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_SaleRate_Size03() As Decimal
            Get
                Return CType(Me(Me.tableItem.Item_SaleRate_Size03Column),Decimal)
            End Get
            Set
                Me(Me.tableItem.Item_SaleRate_Size03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_SaleRate_Size04() As Decimal
            Get
                Return CType(Me(Me.tableItem.Item_SaleRate_Size04Column),Decimal)
            End Get
            Set
                Me(Me.tableItem.Item_SaleRate_Size04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_SaleRate_Size05() As Decimal
            Get
                Return CType(Me(Me.tableItem.Item_SaleRate_Size05Column),Decimal)
            End Get
            Set
                Me(Me.tableItem.Item_SaleRate_Size05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_SaleRate_Size06() As Decimal
            Get
                Return CType(Me(Me.tableItem.Item_SaleRate_Size06Column),Decimal)
            End Get
            Set
                Me(Me.tableItem.Item_SaleRate_Size06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_SaleRate_Size07() As Decimal
            Get
                Return CType(Me(Me.tableItem.Item_SaleRate_Size07Column),Decimal)
            End Get
            Set
                Me(Me.tableItem.Item_SaleRate_Size07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_SaleRate_Size08() As Decimal
            Get
                Return CType(Me(Me.tableItem.Item_SaleRate_Size08Column),Decimal)
            End Get
            Set
                Me(Me.tableItem.Item_SaleRate_Size08Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_SaleRate_Size09() As Decimal
            Get
                Return CType(Me(Me.tableItem.Item_SaleRate_Size09Column),Decimal)
            End Get
            Set
                Me(Me.tableItem.Item_SaleRate_Size09Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_SaleRate_Size10() As Decimal
            Get
                Return CType(Me(Me.tableItem.Item_SaleRate_Size10Column),Decimal)
            End Get
            Set
                Me(Me.tableItem.Item_SaleRate_Size10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_SaleRate_Size11() As Decimal
            Get
                Return CType(Me(Me.tableItem.Item_SaleRate_Size11Column),Decimal)
            End Get
            Set
                Me(Me.tableItem.Item_SaleRate_Size11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_SaleRate_Size12() As Decimal
            Get
                Return CType(Me(Me.tableItem.Item_SaleRate_Size12Column),Decimal)
            End Get
            Set
                Me(Me.tableItem.Item_SaleRate_Size12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_SaleRate_Size13() As Decimal
            Get
                Return CType(Me(Me.tableItem.Item_SaleRate_Size13Column),Decimal)
            End Get
            Set
                Me(Me.tableItem.Item_SaleRate_Size13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_UserID() As Integer
            Get
                Return CType(Me(Me.tableItem.Stamp_UserIDColumn),Integer)
            End Get
            Set
                Me(Me.tableItem.Stamp_UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_DateTime() As Date
            Get
                Return CType(Me(Me.tableItem.Stamp_DateTimeColumn),Date)
            End Get
            Set
                Me(Me.tableItem.Stamp_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Parent_Item_ID() As Integer
            Get
                Return CType(Me(Me.tableItem.Parent_Item_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableItem.Parent_Item_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Party_ID() As Integer
            Get
                Return CType(Me(Me.tableItem.Party_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableItem.Party_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Address_ID() As Long
            Get
                Return CType(Me(Me.tableItem.Address_IDColumn),Long)
            End Get
            Set
                Me(Me.tableItem.Address_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Upload_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableItem.Upload_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Upload_DateTime' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Upload_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_MinStock_Size0() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Item_MinStock_Size0Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_MinStock_Size0' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Item_MinStock_Size0Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_MinStock_Size1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Item_MinStock_Size1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_MinStock_Size1' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Item_MinStock_Size1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_MinStock_Size2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Item_MinStock_Size2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_MinStock_Size2' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Item_MinStock_Size2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_MinStock_Size3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Item_MinStock_Size3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_MinStock_Size3' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Item_MinStock_Size3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_MinStock_Size4() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Item_MinStock_Size4Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_MinStock_Size4' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Item_MinStock_Size4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_MinStock_Size5() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Item_MinStock_Size5Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_MinStock_Size5' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Item_MinStock_Size5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_MinStock_Size6() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Item_MinStock_Size6Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_MinStock_Size6' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Item_MinStock_Size6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_MinStock_Size7() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Item_MinStock_Size7Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_MinStock_Size7' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Item_MinStock_Size7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_MinStock_Size8() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Item_MinStock_Size8Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_MinStock_Size8' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Item_MinStock_Size8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_MinStock_Size9() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Item_MinStock_Size9Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_MinStock_Size9' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Item_MinStock_Size9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_MinStock_Size10() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Item_MinStock_Size10Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_MinStock_Size10' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Item_MinStock_Size10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_MinStock_Size11() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Item_MinStock_Size11Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_MinStock_Size11' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Item_MinStock_Size11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_MinStock_Size12() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Item_MinStock_Size12Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_MinStock_Size12' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Item_MinStock_Size12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_MinStock_Size13() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Item_MinStock_Size13Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_MinStock_Size13' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Item_MinStock_Size13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalMinStockQty() As String
            Get
                Try 
                    Return CType(Me(Me.tableItem.TotalMinStockQtyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalMinStockQty' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.TotalMinStockQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalMinStockAmount() As String
            Get
                Try 
                    Return CType(Me(Me.tableItem.TotalMinStockAmountColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalMinStockAmount' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.TotalMinStockAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_CodeNull() As Boolean
            Return Me.IsNull(Me.tableItem.Item_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_CodeNull()
            Me(Me.tableItem.Item_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUpload_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tableItem.Upload_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUpload_DateTimeNull()
            Me(Me.tableItem.Upload_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_MinStock_Size0Null() As Boolean
            Return Me.IsNull(Me.tableItem.Item_MinStock_Size0Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_MinStock_Size0Null()
            Me(Me.tableItem.Item_MinStock_Size0Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_MinStock_Size1Null() As Boolean
            Return Me.IsNull(Me.tableItem.Item_MinStock_Size1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_MinStock_Size1Null()
            Me(Me.tableItem.Item_MinStock_Size1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_MinStock_Size2Null() As Boolean
            Return Me.IsNull(Me.tableItem.Item_MinStock_Size2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_MinStock_Size2Null()
            Me(Me.tableItem.Item_MinStock_Size2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_MinStock_Size3Null() As Boolean
            Return Me.IsNull(Me.tableItem.Item_MinStock_Size3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_MinStock_Size3Null()
            Me(Me.tableItem.Item_MinStock_Size3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_MinStock_Size4Null() As Boolean
            Return Me.IsNull(Me.tableItem.Item_MinStock_Size4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_MinStock_Size4Null()
            Me(Me.tableItem.Item_MinStock_Size4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_MinStock_Size5Null() As Boolean
            Return Me.IsNull(Me.tableItem.Item_MinStock_Size5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_MinStock_Size5Null()
            Me(Me.tableItem.Item_MinStock_Size5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_MinStock_Size6Null() As Boolean
            Return Me.IsNull(Me.tableItem.Item_MinStock_Size6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_MinStock_Size6Null()
            Me(Me.tableItem.Item_MinStock_Size6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_MinStock_Size7Null() As Boolean
            Return Me.IsNull(Me.tableItem.Item_MinStock_Size7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_MinStock_Size7Null()
            Me(Me.tableItem.Item_MinStock_Size7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_MinStock_Size8Null() As Boolean
            Return Me.IsNull(Me.tableItem.Item_MinStock_Size8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_MinStock_Size8Null()
            Me(Me.tableItem.Item_MinStock_Size8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_MinStock_Size9Null() As Boolean
            Return Me.IsNull(Me.tableItem.Item_MinStock_Size9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_MinStock_Size9Null()
            Me(Me.tableItem.Item_MinStock_Size9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_MinStock_Size10Null() As Boolean
            Return Me.IsNull(Me.tableItem.Item_MinStock_Size10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_MinStock_Size10Null()
            Me(Me.tableItem.Item_MinStock_Size10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_MinStock_Size11Null() As Boolean
            Return Me.IsNull(Me.tableItem.Item_MinStock_Size11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_MinStock_Size11Null()
            Me(Me.tableItem.Item_MinStock_Size11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_MinStock_Size12Null() As Boolean
            Return Me.IsNull(Me.tableItem.Item_MinStock_Size12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_MinStock_Size12Null()
            Me(Me.tableItem.Item_MinStock_Size12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_MinStock_Size13Null() As Boolean
            Return Me.IsNull(Me.tableItem.Item_MinStock_Size13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_MinStock_Size13Null()
            Me(Me.tableItem.Item_MinStock_Size13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalMinStockQtyNull() As Boolean
            Return Me.IsNull(Me.tableItem.TotalMinStockQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalMinStockQtyNull()
            Me(Me.tableItem.TotalMinStockQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalMinStockAmountNull() As Boolean
            Return Me.IsNull(Me.tableItem.TotalMinStockAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalMinStockAmountNull()
            Me(Me.tableItem.TotalMinStockAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetInventoryDetailRows() As InventoryDetailRow()
            If (Me.Table.ChildRelations("FK_Inv_SalesInvoice_Detail_Inv_Item") Is Nothing) Then
                Return New InventoryDetailRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_Inv_SalesInvoice_Detail_Inv_Item")),InventoryDetailRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetInvs_InventoryDetailRows() As Invs_InventoryDetailRow()
            If (Me.Table.ChildRelations("FK_Inv_SalesInvoice_Detail_Inv_Item1") Is Nothing) Then
                Return New Invs_InventoryDetailRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_Inv_SalesInvoice_Detail_Inv_Item1")),Invs_InventoryDetailRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class InventoryRow
        Inherits Global.System.Data.DataRow
        
        Private tableInventory As InventoryDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableInventory = CType(Me.Table,InventoryDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Co_ID() As Short
            Get
                Return CType(Me(Me.tableInventory.Co_IDColumn),Short)
            End Get
            Set
                Me(Me.tableInventory.Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Party_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInventory.Party_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Party_ID' in table 'Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventory.Party_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Payment_Mode() As Short
            Get
                Try 
                    Return CType(Me(Me.tableInventory.Payment_ModeColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Payment_Mode' in table 'Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventory.Payment_ModeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableInventory.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventory.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableInventory.Stamp_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Stamp_DateTime' in table 'Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventory.Stamp_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_UserID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInventory.Stamp_UserIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Stamp_UserID' in table 'Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventory.Stamp_UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_ID() As Integer
            Get
                Return CType(Me(Me.tableInventory.Inventory_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInventory.Inventory_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableInventory.Inventory_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inventory_Date' in table 'Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventory.Inventory_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DocumentType_ID() As Short
            Get
                Return CType(Me(Me.tableInventory.DocumentType_IDColumn),Short)
            End Get
            Set
                Me(Me.tableInventory.DocumentType_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RecordStatus_ID() As Integer
            Get
                Return CType(Me(Me.tableInventory.RecordStatus_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInventory.RecordStatus_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Upload_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableInventory.Upload_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Upload_DateTime' in table 'Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventory.Upload_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Category_Party_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInventory.Category_Party_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Category_Party_ID' in table 'Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventory.Category_Party_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LogisticService() As String
            Get
                Try 
                    Return CType(Me(Me.tableInventory.LogisticServiceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogisticService' in table 'Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventory.LogisticServiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Discount() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInventory.DiscountColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Discount' in table 'Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventory.DiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SalesTax() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInventory.SalesTaxColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalesTax' in table 'Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventory.SalesTaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_DocumentType_ID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableInventory.Source_DocumentType_IDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source_DocumentType_ID' in table 'Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventory.Source_DocumentType_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_Document_No() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInventory.Source_Document_NoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source_Document_No' in table 'Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventory.Source_Document_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_Document_Co_ID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableInventory.Source_Document_Co_IDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source_Document_Co_ID' in table 'Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInventory.Source_Document_Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_No() As String
            Get
                Return CType(Me(Me.tableInventory.Inventory_NoColumn),String)
            End Get
            Set
                Me(Me.tableInventory.Inventory_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsParty_IDNull() As Boolean
            Return Me.IsNull(Me.tableInventory.Party_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetParty_IDNull()
            Me(Me.tableInventory.Party_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPayment_ModeNull() As Boolean
            Return Me.IsNull(Me.tableInventory.Payment_ModeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPayment_ModeNull()
            Me(Me.tableInventory.Payment_ModeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableInventory.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableInventory.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStamp_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tableInventory.Stamp_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStamp_DateTimeNull()
            Me(Me.tableInventory.Stamp_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStamp_UserIDNull() As Boolean
            Return Me.IsNull(Me.tableInventory.Stamp_UserIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStamp_UserIDNull()
            Me(Me.tableInventory.Stamp_UserIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInventory_DateNull() As Boolean
            Return Me.IsNull(Me.tableInventory.Inventory_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInventory_DateNull()
            Me(Me.tableInventory.Inventory_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUpload_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tableInventory.Upload_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUpload_DateTimeNull()
            Me(Me.tableInventory.Upload_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCategory_Party_IDNull() As Boolean
            Return Me.IsNull(Me.tableInventory.Category_Party_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCategory_Party_IDNull()
            Me(Me.tableInventory.Category_Party_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLogisticServiceNull() As Boolean
            Return Me.IsNull(Me.tableInventory.LogisticServiceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLogisticServiceNull()
            Me(Me.tableInventory.LogisticServiceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDiscountNull() As Boolean
            Return Me.IsNull(Me.tableInventory.DiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDiscountNull()
            Me(Me.tableInventory.DiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSalesTaxNull() As Boolean
            Return Me.IsNull(Me.tableInventory.SalesTaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSalesTaxNull()
            Me(Me.tableInventory.SalesTaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSource_DocumentType_IDNull() As Boolean
            Return Me.IsNull(Me.tableInventory.Source_DocumentType_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSource_DocumentType_IDNull()
            Me(Me.tableInventory.Source_DocumentType_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSource_Document_NoNull() As Boolean
            Return Me.IsNull(Me.tableInventory.Source_Document_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSource_Document_NoNull()
            Me(Me.tableInventory.Source_Document_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSource_Document_Co_IDNull() As Boolean
            Return Me.IsNull(Me.tableInventory.Source_Document_Co_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSource_Document_Co_IDNull()
            Me(Me.tableInventory.Source_Document_Co_IDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Invs_InventoryRow
        Inherits Global.System.Data.DataRow
        
        Private tableInvs_Inventory As Invs_InventoryDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableInvs_Inventory = CType(Me.Table,Invs_InventoryDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Co_ID() As Short
            Get
                Return CType(Me(Me.tableInvs_Inventory.Co_IDColumn),Short)
            End Get
            Set
                Me(Me.tableInvs_Inventory.Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Party_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInvs_Inventory.Party_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Party_ID' in table 'Invs_Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_Inventory.Party_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Payment_Mode() As Short
            Get
                Try 
                    Return CType(Me(Me.tableInvs_Inventory.Payment_ModeColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Payment_Mode' in table 'Invs_Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_Inventory.Payment_ModeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableInvs_Inventory.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'Invs_Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_Inventory.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableInvs_Inventory.Stamp_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Stamp_DateTime' in table 'Invs_Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_Inventory.Stamp_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_UserID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInvs_Inventory.Stamp_UserIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Stamp_UserID' in table 'Invs_Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_Inventory.Stamp_UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_ID() As Integer
            Get
                Return CType(Me(Me.tableInvs_Inventory.Inventory_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_Inventory.Inventory_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Date() As Date
            Get
                Return CType(Me(Me.tableInvs_Inventory.Inventory_DateColumn),Date)
            End Get
            Set
                Me(Me.tableInvs_Inventory.Inventory_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_No() As Integer
            Get
                Return CType(Me(Me.tableInvs_Inventory.Inventory_NoColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_Inventory.Inventory_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DocumentType_ID() As Short
            Get
                Return CType(Me(Me.tableInvs_Inventory.DocumentType_IDColumn),Short)
            End Get
            Set
                Me(Me.tableInvs_Inventory.DocumentType_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Status_ID() As Integer
            Get
                Return CType(Me(Me.tableInvs_Inventory.Status_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_Inventory.Status_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Upload_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableInvs_Inventory.Upload_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Upload_DateTime' in table 'Invs_Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_Inventory.Upload_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Category_Party_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInvs_Inventory.Category_Party_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Category_Party_ID' in table 'Invs_Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_Inventory.Category_Party_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LogisticService() As String
            Get
                Try 
                    Return CType(Me(Me.tableInvs_Inventory.LogisticServiceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogisticService' in table 'Invs_Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_Inventory.LogisticServiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Discount() As Integer
            Get
                Return CType(Me(Me.tableInvs_Inventory.DiscountColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_Inventory.DiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SalesTax() As Integer
            Get
                Return CType(Me(Me.tableInvs_Inventory.SalesTaxColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_Inventory.SalesTaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_DocumentType_ID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableInvs_Inventory.Source_DocumentType_IDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source_DocumentType_ID' in table 'Invs_Inventory' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_Inventory.Source_DocumentType_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_Document_No() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInvs_Inventory.Source_Document_NoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source_Document_No' in table 'Invs_Inventory' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_Inventory.Source_Document_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_Document_Co_ID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableInvs_Inventory.Source_Document_Co_IDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source_Document_Co_ID' in table 'Invs_Inventory' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_Inventory.Source_Document_Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsParty_IDNull() As Boolean
            Return Me.IsNull(Me.tableInvs_Inventory.Party_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetParty_IDNull()
            Me(Me.tableInvs_Inventory.Party_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPayment_ModeNull() As Boolean
            Return Me.IsNull(Me.tableInvs_Inventory.Payment_ModeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPayment_ModeNull()
            Me(Me.tableInvs_Inventory.Payment_ModeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableInvs_Inventory.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableInvs_Inventory.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStamp_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tableInvs_Inventory.Stamp_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStamp_DateTimeNull()
            Me(Me.tableInvs_Inventory.Stamp_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStamp_UserIDNull() As Boolean
            Return Me.IsNull(Me.tableInvs_Inventory.Stamp_UserIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStamp_UserIDNull()
            Me(Me.tableInvs_Inventory.Stamp_UserIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUpload_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tableInvs_Inventory.Upload_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUpload_DateTimeNull()
            Me(Me.tableInvs_Inventory.Upload_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCategory_Party_IDNull() As Boolean
            Return Me.IsNull(Me.tableInvs_Inventory.Category_Party_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCategory_Party_IDNull()
            Me(Me.tableInvs_Inventory.Category_Party_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLogisticServiceNull() As Boolean
            Return Me.IsNull(Me.tableInvs_Inventory.LogisticServiceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLogisticServiceNull()
            Me(Me.tableInvs_Inventory.LogisticServiceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSource_DocumentType_IDNull() As Boolean
            Return Me.IsNull(Me.tableInvs_Inventory.Source_DocumentType_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSource_DocumentType_IDNull()
            Me(Me.tableInvs_Inventory.Source_DocumentType_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSource_Document_NoNull() As Boolean
            Return Me.IsNull(Me.tableInvs_Inventory.Source_Document_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSource_Document_NoNull()
            Me(Me.tableInvs_Inventory.Source_Document_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSource_Document_Co_IDNull() As Boolean
            Return Me.IsNull(Me.tableInvs_Inventory.Source_Document_Co_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSource_Document_Co_IDNull()
            Me(Me.tableInvs_Inventory.Source_Document_Co_IDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Invs_InventoryDetailRow
        Inherits Global.System.Data.DataRow
        
        Private tableInvs_InventoryDetail As Invs_InventoryDetailDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableInvs_InventoryDetail = CType(Me.Table,Invs_InventoryDetailDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Co_ID() As Short
            Get
                Return CType(Me(Me.tableInvs_InventoryDetail.Co_IDColumn),Short)
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_ID() As Integer
            Get
                Return CType(Me(Me.tableInvs_InventoryDetail.Inventory_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.Inventory_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InventoryDetail_ID() As Integer
            Get
                Return CType(Me(Me.tableInvs_InventoryDetail.InventoryDetail_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.InventoryDetail_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DocumentType_ID() As Short
            Get
                Return CType(Me(Me.tableInvs_InventoryDetail.DocumentType_IDColumn),Short)
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.DocumentType_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_ID() As Integer
            Get
                Return CType(Me(Me.tableInvs_InventoryDetail.Item_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.Item_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableInvs_InventoryDetail.Item_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_Code' in table 'Invs_InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.Item_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Desc() As String
            Get
                Try 
                    Return CType(Me(Me.tableInvs_InventoryDetail.Item_DescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_Desc' in table 'Invs_InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.Item_DescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableInvs_InventoryDetail.Stamp_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Stamp_DateTime' in table 'Invs_InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.Stamp_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_UserID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInvs_InventoryDetail.Stamp_UserIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Stamp_UserID' in table 'Invs_InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.Stamp_UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_DocumentType_ID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableInvs_InventoryDetail.Source_DocumentType_IDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source_DocumentType_ID' in table 'Invs_InventoryDetail' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.Source_DocumentType_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_Document_Co_ID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableInvs_InventoryDetail.Source_Document_Co_IDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source_Document_Co_ID' in table 'Invs_InventoryDetail' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.Source_Document_Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_Document_No() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInvs_InventoryDetail.Source_Document_NoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source_Document_No' in table 'Invs_InventoryDetail' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.Source_Document_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalQty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInvs_InventoryDetail.TotalQtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalQty' in table 'Invs_InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.TotalQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInvs_InventoryDetail.TotalAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalAmount' in table 'Invs_InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.TotalAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Upload_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableInvs_InventoryDetail.Upload_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Upload_DateTime' in table 'Invs_InventoryDetail' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.Upload_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Warehouse_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInvs_InventoryDetail.Warehouse_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Warehouse_ID' in table 'Invs_InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.Warehouse_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemSize_ID() As Short
            Get
                Return CType(Me(Me.tableInvs_InventoryDetail.ItemSize_IDColumn),Short)
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.ItemSize_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemQty() As Double
            Get
                Return CType(Me(Me.tableInvs_InventoryDetail.ItemQtyColumn),Double)
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.ItemQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemRate() As Decimal
            Get
                Return CType(Me(Me.tableInvs_InventoryDetail.ItemRateColumn),Decimal)
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.ItemRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Discount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableInvs_InventoryDetail.DiscountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Discount' in table 'Invs_InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.DiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SalesTax() As Double
            Get
                Try 
                    Return CType(Me(Me.tableInvs_InventoryDetail.SalesTaxColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalesTax' in table 'Invs_InventoryDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_InventoryDetail.SalesTaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemRowParent() As ItemRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_Inv_SalesInvoice_Detail_Inv_Item1")),ItemRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_Inv_SalesInvoice_Detail_Inv_Item1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_CodeNull() As Boolean
            Return Me.IsNull(Me.tableInvs_InventoryDetail.Item_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_CodeNull()
            Me(Me.tableInvs_InventoryDetail.Item_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_DescNull() As Boolean
            Return Me.IsNull(Me.tableInvs_InventoryDetail.Item_DescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_DescNull()
            Me(Me.tableInvs_InventoryDetail.Item_DescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStamp_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tableInvs_InventoryDetail.Stamp_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStamp_DateTimeNull()
            Me(Me.tableInvs_InventoryDetail.Stamp_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStamp_UserIDNull() As Boolean
            Return Me.IsNull(Me.tableInvs_InventoryDetail.Stamp_UserIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStamp_UserIDNull()
            Me(Me.tableInvs_InventoryDetail.Stamp_UserIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSource_DocumentType_IDNull() As Boolean
            Return Me.IsNull(Me.tableInvs_InventoryDetail.Source_DocumentType_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSource_DocumentType_IDNull()
            Me(Me.tableInvs_InventoryDetail.Source_DocumentType_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSource_Document_Co_IDNull() As Boolean
            Return Me.IsNull(Me.tableInvs_InventoryDetail.Source_Document_Co_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSource_Document_Co_IDNull()
            Me(Me.tableInvs_InventoryDetail.Source_Document_Co_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSource_Document_NoNull() As Boolean
            Return Me.IsNull(Me.tableInvs_InventoryDetail.Source_Document_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSource_Document_NoNull()
            Me(Me.tableInvs_InventoryDetail.Source_Document_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalQtyNull() As Boolean
            Return Me.IsNull(Me.tableInvs_InventoryDetail.TotalQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalQtyNull()
            Me(Me.tableInvs_InventoryDetail.TotalQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalAmountNull() As Boolean
            Return Me.IsNull(Me.tableInvs_InventoryDetail.TotalAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalAmountNull()
            Me(Me.tableInvs_InventoryDetail.TotalAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUpload_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tableInvs_InventoryDetail.Upload_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUpload_DateTimeNull()
            Me(Me.tableInvs_InventoryDetail.Upload_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWarehouse_IDNull() As Boolean
            Return Me.IsNull(Me.tableInvs_InventoryDetail.Warehouse_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWarehouse_IDNull()
            Me(Me.tableInvs_InventoryDetail.Warehouse_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDiscountNull() As Boolean
            Return Me.IsNull(Me.tableInvs_InventoryDetail.DiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDiscountNull()
            Me(Me.tableInvs_InventoryDetail.DiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSalesTaxNull() As Boolean
            Return Me.IsNull(Me.tableInvs_InventoryDetail.SalesTaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSalesTaxNull()
            Me(Me.tableInvs_InventoryDetail.SalesTaxColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Invs_ItemRow
        Inherits Global.System.Data.DataRow
        
        Private tableInvs_Item As Invs_ItemDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableInvs_Item = CType(Me.Table,Invs_ItemDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Co_ID() As Short
            Get
                Return CType(Me(Me.tableInvs_Item.Co_IDColumn),Short)
            End Get
            Set
                Me(Me.tableInvs_Item.Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_ID() As Integer
            Get
                Return CType(Me(Me.tableInvs_Item.Item_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_Item.Item_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Code() As String
            Get
                Return CType(Me(Me.tableInvs_Item.Item_CodeColumn),String)
            End Get
            Set
                Me(Me.tableInvs_Item.Item_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Desc() As String
            Get
                Return CType(Me(Me.tableInvs_Item.Item_DescColumn),String)
            End Get
            Set
                Me(Me.tableInvs_Item.Item_DescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_UserID() As Integer
            Get
                Return CType(Me(Me.tableInvs_Item.Stamp_UserIDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_Item.Stamp_UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_DateTime() As Date
            Get
                Return CType(Me(Me.tableInvs_Item.Stamp_DateTimeColumn),Date)
            End Get
            Set
                Me(Me.tableInvs_Item.Stamp_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Parent_Item_ID() As Integer
            Get
                Return CType(Me(Me.tableInvs_Item.Parent_Item_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_Item.Parent_Item_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Party_ID() As Integer
            Get
                Return CType(Me(Me.tableInvs_Item.Party_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_Item.Party_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Upload_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableInvs_Item.Upload_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Upload_DateTime' in table 'Invs_Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_Item.Upload_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalMinStockQty() As String
            Get
                Try 
                    Return CType(Me(Me.tableInvs_Item.TotalMinStockQtyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalMinStockQty' in table 'Invs_Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_Item.TotalMinStockQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalMinStockAmount() As String
            Get
                Try 
                    Return CType(Me(Me.tableInvs_Item.TotalMinStockAmountColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalMinStockAmount' in table 'Invs_Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_Item.TotalMinStockAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Address_ID() As Integer
            Get
                Return CType(Me(Me.tableInvs_Item.Address_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_Item.Address_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUpload_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tableInvs_Item.Upload_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUpload_DateTimeNull()
            Me(Me.tableInvs_Item.Upload_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalMinStockQtyNull() As Boolean
            Return Me.IsNull(Me.tableInvs_Item.TotalMinStockQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalMinStockQtyNull()
            Me(Me.tableInvs_Item.TotalMinStockQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalMinStockAmountNull() As Boolean
            Return Me.IsNull(Me.tableInvs_Item.TotalMinStockAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalMinStockAmountNull()
            Me(Me.tableInvs_Item.TotalMinStockAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetInventoryDetailRows() As InventoryDetailRow()
            If (Me.Table.ChildRelations("FK_Inv_SalesInvoice_Detail_Inv_Item2") Is Nothing) Then
                Return New InventoryDetailRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_Inv_SalesInvoice_Detail_Inv_Item2")),InventoryDetailRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Invs_Inventory_SalesInvoiceRow
        Inherits Global.System.Data.DataRow
        
        Private tableInvs_Inventory_SalesInvoice As Invs_Inventory_SalesInvoiceDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableInvs_Inventory_SalesInvoice = CType(Me.Table,Invs_Inventory_SalesInvoiceDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Co_ID() As Short
            Get
                Return CType(Me(Me.tableInvs_Inventory_SalesInvoice.Co_IDColumn),Short)
            End Get
            Set
                Me(Me.tableInvs_Inventory_SalesInvoice.Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_ID() As Integer
            Get
                Return CType(Me(Me.tableInvs_Inventory_SalesInvoice.Inventory_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_Inventory_SalesInvoice.Inventory_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SalesMan_ID() As Integer
            Get
                Return CType(Me(Me.tableInvs_Inventory_SalesInvoice.SalesMan_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_Inventory_SalesInvoice.SalesMan_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_DateTime() As Date
            Get
                Return CType(Me(Me.tableInvs_Inventory_SalesInvoice.Stamp_DateTimeColumn),Date)
            End Get
            Set
                Me(Me.tableInvs_Inventory_SalesInvoice.Stamp_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_UserID() As Integer
            Get
                Return CType(Me(Me.tableInvs_Inventory_SalesInvoice.Stamp_UserIDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_Inventory_SalesInvoice.Stamp_UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Discount() As Decimal
            Get
                Return CType(Me(Me.tableInvs_Inventory_SalesInvoice.DiscountColumn),Decimal)
            End Get
            Set
                Me(Me.tableInvs_Inventory_SalesInvoice.DiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SalesTax() As Decimal
            Get
                Return CType(Me(Me.tableInvs_Inventory_SalesInvoice.SalesTaxColumn),Decimal)
            End Get
            Set
                Me(Me.tableInvs_Inventory_SalesInvoice.SalesTaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalCashReceived() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInvs_Inventory_SalesInvoice.TotalCashReceivedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalCashReceived' in table 'Invs_Inventory_SalesInvoice' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_Inventory_SalesInvoice.TotalCashReceivedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Upload_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableInvs_Inventory_SalesInvoice.Upload_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Upload_DateTime' in table 'Invs_Inventory_SalesInvoice' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_Inventory_SalesInvoice.Upload_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalCashReceivedNull() As Boolean
            Return Me.IsNull(Me.tableInvs_Inventory_SalesInvoice.TotalCashReceivedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalCashReceivedNull()
            Me(Me.tableInvs_Inventory_SalesInvoice.TotalCashReceivedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUpload_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tableInvs_Inventory_SalesInvoice.Upload_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUpload_DateTimeNull()
            Me(Me.tableInvs_Inventory_SalesInvoice.Upload_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Invs_ItemSummaryRow
        Inherits Global.System.Data.DataRow
        
        Private tableInvs_ItemSummary As Invs_ItemSummaryDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableInvs_ItemSummary = CType(Me.Table,Invs_ItemSummaryDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Co_ID() As Short
            Get
                Return CType(Me(Me.tableInvs_ItemSummary.Co_IDColumn),Short)
            End Get
            Set
                Me(Me.tableInvs_ItemSummary.Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_First_ID() As Integer
            Get
                Return CType(Me(Me.tableInvs_ItemSummary.Source_First_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_ItemSummary.Source_First_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_Second_ID() As Integer
            Get
                Return CType(Me(Me.tableInvs_ItemSummary.Source_Second_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_ItemSummary.Source_Second_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_DocumentType_ID() As Integer
            Get
                Return CType(Me(Me.tableInvs_ItemSummary.Source_DocumentType_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_ItemSummary.Source_DocumentType_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Summary_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableInvs_ItemSummary.Summary_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Summary_Type' in table 'Invs_ItemSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_ItemSummary.Summary_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_UserID() As Integer
            Get
                Return CType(Me(Me.tableInvs_ItemSummary.Stamp_UserIDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_ItemSummary.Stamp_UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_DateTime() As Date
            Get
                Return CType(Me(Me.tableInvs_ItemSummary.Stamp_DateTimeColumn),Date)
            End Get
            Set
                Me(Me.tableInvs_ItemSummary.Stamp_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Upload_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableInvs_ItemSummary.Upload_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Upload_DateTime' in table 'Invs_ItemSummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInvs_ItemSummary.Upload_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Warehouse_ID() As Integer
            Get
                Return CType(Me(Me.tableInvs_ItemSummary.Warehouse_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableInvs_ItemSummary.Warehouse_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemSize_ID() As Short
            Get
                Return CType(Me(Me.tableInvs_ItemSummary.ItemSize_IDColumn),Short)
            End Get
            Set
                Me(Me.tableInvs_ItemSummary.ItemSize_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemQty() As Double
            Get
                Return CType(Me(Me.tableInvs_ItemSummary.ItemQtyColumn),Double)
            End Get
            Set
                Me(Me.tableInvs_ItemSummary.ItemQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemValue() As Decimal
            Get
                Return CType(Me(Me.tableInvs_ItemSummary.ItemValueColumn),Decimal)
            End Get
            Set
                Me(Me.tableInvs_ItemSummary.ItemValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSummary_TypeNull() As Boolean
            Return Me.IsNull(Me.tableInvs_ItemSummary.Summary_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSummary_TypeNull()
            Me(Me.tableInvs_ItemSummary.Summary_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUpload_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tableInvs_ItemSummary.Upload_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUpload_DateTimeNull()
            Me(Me.tableInvs_ItemSummary.Upload_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Inv_ItemSizeRow
        Inherits Global.System.Data.DataRow
        
        Private tableInv_ItemSize As Inv_ItemSizeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableInv_ItemSize = CType(Me.Table,Inv_ItemSizeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Co_ID() As Short
            Get
                Return CType(Me(Me.tableInv_ItemSize.Co_IDColumn),Short)
            End Get
            Set
                Me(Me.tableInv_ItemSize.Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemSize_ID() As Short
            Get
                Return CType(Me(Me.tableInv_ItemSize.ItemSize_IDColumn),Short)
            End Get
            Set
                Me(Me.tableInv_ItemSize.ItemSize_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_UserID() As Integer
            Get
                Return CType(Me(Me.tableInv_ItemSize.Stamp_UserIDColumn),Integer)
            End Get
            Set
                Me(Me.tableInv_ItemSize.Stamp_UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stamp_DateTime() As Date
            Get
                Return CType(Me(Me.tableInv_ItemSize.Stamp_DateTimeColumn),Date)
            End Get
            Set
                Me(Me.tableInv_ItemSize.Stamp_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Upload_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableInv_ItemSize.Upload_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Upload_DateTime' in table 'Inv_ItemSize' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_ItemSize.Upload_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUpload_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tableInv_ItemSize.Upload_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUpload_DateTimeNull()
            Me(Me.tableInv_ItemSize.Upload_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class StockInquiryRow
        Inherits Global.System.Data.DataRow
        
        Private tableStockInquiry As StockInquiryDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableStockInquiry = CType(Me.Table,StockInquiryDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Co_ID() As Short
            Get
                Return CType(Me(Me.tableStockInquiry.Co_IDColumn),Short)
            End Get
            Set
                Me(Me.tableStockInquiry.Co_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Co_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Co_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Co_Code' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Co_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Warehouse_ID() As Integer
            Get
                Return CType(Me(Me.tableStockInquiry.Warehouse_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableStockInquiry.Warehouse_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Warehouse_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Warehouse_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Warehouse_Name' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Warehouse_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_ID() As Integer
            Get
                Return CType(Me(Me.tableStockInquiry.Item_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableStockInquiry.Item_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Item_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_Code' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Item_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Category() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Item_CategoryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_Category' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Item_CategoryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Desc() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Item_DescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Item_Desc' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Item_DescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size01() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Inventory_Qty_Size01Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inventory_Qty_Size01' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Inventory_Qty_Size01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size02() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Inventory_Qty_Size02Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inventory_Qty_Size02' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Inventory_Qty_Size02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size03() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Inventory_Qty_Size03Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inventory_Qty_Size03' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Inventory_Qty_Size03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size04() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Inventory_Qty_Size04Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inventory_Qty_Size04' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Inventory_Qty_Size04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size05() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Inventory_Qty_Size05Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inventory_Qty_Size05' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Inventory_Qty_Size05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size06() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Inventory_Qty_Size06Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inventory_Qty_Size06' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Inventory_Qty_Size06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size07() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Inventory_Qty_Size07Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inventory_Qty_Size07' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Inventory_Qty_Size07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size08() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Inventory_Qty_Size08Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inventory_Qty_Size08' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Inventory_Qty_Size08Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size09() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Inventory_Qty_Size09Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inventory_Qty_Size09' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Inventory_Qty_Size09Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Inventory_Qty_Size10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inventory_Qty_Size10' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Inventory_Qty_Size10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size11() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Inventory_Qty_Size11Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inventory_Qty_Size11' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Inventory_Qty_Size11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size12() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Inventory_Qty_Size12Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inventory_Qty_Size12' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Inventory_Qty_Size12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inventory_Qty_Size13() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Inventory_Qty_Size13Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inventory_Qty_Size13' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Inventory_Qty_Size13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Qty_Total() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockInquiry.Qty_TotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty_Total' in table 'StockInquiry' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockInquiry.Qty_TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCo_CodeNull() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Co_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCo_CodeNull()
            Me(Me.tableStockInquiry.Co_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWarehouse_NameNull() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Warehouse_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWarehouse_NameNull()
            Me(Me.tableStockInquiry.Warehouse_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_CodeNull() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Item_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_CodeNull()
            Me(Me.tableStockInquiry.Item_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_CategoryNull() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Item_CategoryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_CategoryNull()
            Me(Me.tableStockInquiry.Item_CategoryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_DescNull() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Item_DescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_DescNull()
            Me(Me.tableStockInquiry.Item_DescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInventory_Qty_Size01Null() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Inventory_Qty_Size01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInventory_Qty_Size01Null()
            Me(Me.tableStockInquiry.Inventory_Qty_Size01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInventory_Qty_Size02Null() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Inventory_Qty_Size02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInventory_Qty_Size02Null()
            Me(Me.tableStockInquiry.Inventory_Qty_Size02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInventory_Qty_Size03Null() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Inventory_Qty_Size03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInventory_Qty_Size03Null()
            Me(Me.tableStockInquiry.Inventory_Qty_Size03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInventory_Qty_Size04Null() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Inventory_Qty_Size04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInventory_Qty_Size04Null()
            Me(Me.tableStockInquiry.Inventory_Qty_Size04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInventory_Qty_Size05Null() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Inventory_Qty_Size05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInventory_Qty_Size05Null()
            Me(Me.tableStockInquiry.Inventory_Qty_Size05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInventory_Qty_Size06Null() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Inventory_Qty_Size06Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInventory_Qty_Size06Null()
            Me(Me.tableStockInquiry.Inventory_Qty_Size06Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInventory_Qty_Size07Null() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Inventory_Qty_Size07Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInventory_Qty_Size07Null()
            Me(Me.tableStockInquiry.Inventory_Qty_Size07Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInventory_Qty_Size08Null() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Inventory_Qty_Size08Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInventory_Qty_Size08Null()
            Me(Me.tableStockInquiry.Inventory_Qty_Size08Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInventory_Qty_Size09Null() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Inventory_Qty_Size09Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInventory_Qty_Size09Null()
            Me(Me.tableStockInquiry.Inventory_Qty_Size09Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInventory_Qty_Size10Null() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Inventory_Qty_Size10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInventory_Qty_Size10Null()
            Me(Me.tableStockInquiry.Inventory_Qty_Size10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInventory_Qty_Size11Null() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Inventory_Qty_Size11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInventory_Qty_Size11Null()
            Me(Me.tableStockInquiry.Inventory_Qty_Size11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInventory_Qty_Size12Null() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Inventory_Qty_Size12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInventory_Qty_Size12Null()
            Me(Me.tableStockInquiry.Inventory_Qty_Size12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInventory_Qty_Size13Null() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Inventory_Qty_Size13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInventory_Qty_Size13Null()
            Me(Me.tableStockInquiry.Inventory_Qty_Size13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQty_TotalNull() As Boolean
            Return Me.IsNull(Me.tableStockInquiry.Qty_TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQty_TotalNull()
            Me(Me.tableStockInquiry.Qty_TotalColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class WarehouseRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As WarehouseRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As WarehouseRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As WarehouseRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class InventorySalesInvoiceRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As InventorySalesInvoiceRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As InventorySalesInvoiceRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As InventorySalesInvoiceRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ItemSummaryRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ItemSummaryRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ItemSummaryRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ItemSummaryRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Temp_SalesInvoiceReportRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Temp_SalesInvoiceReportRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Temp_SalesInvoiceReportRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Temp_SalesInvoiceReportRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class InventoryDetailRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As InventoryDetailRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As InventoryDetailRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As InventoryDetailRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ItemRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ItemRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ItemRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ItemRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class InventoryRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As InventoryRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As InventoryRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As InventoryRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Invs_InventoryRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Invs_InventoryRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Invs_InventoryRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Invs_InventoryRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Invs_InventoryDetailRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Invs_InventoryDetailRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Invs_InventoryDetailRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Invs_InventoryDetailRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Invs_ItemRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Invs_ItemRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Invs_ItemRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Invs_ItemRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Invs_Inventory_SalesInvoiceRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Invs_Inventory_SalesInvoiceRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Invs_Inventory_SalesInvoiceRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Invs_Inventory_SalesInvoiceRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Invs_ItemSummaryRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Invs_ItemSummaryRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Invs_ItemSummaryRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Invs_ItemSummaryRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Inv_ItemSizeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Inv_ItemSizeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Inv_ItemSizeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Inv_ItemSizeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class StockInquiryRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As StockInquiryRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As StockInquiryRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As StockInquiryRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace QuickInventoryDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class WarehouseTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Warehouse"
            tableMapping.ColumnMappings.Add("Co_ID", "Co_ID")
            tableMapping.ColumnMappings.Add("Warehouse_ID", "Warehouse_ID")
            tableMapping.ColumnMappings.Add("Warehouse_Name", "Warehouse_Name")
            tableMapping.ColumnMappings.Add("Stamp_UserID", "Stamp_UserID")
            tableMapping.ColumnMappings.Add("Stamp_DateTime", "Stamp_DateTime")
            tableMapping.ColumnMappings.Add("Upload_DateTime", "Upload_DateTime")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Inv_Warehouse] WHERE (([Co_ID] = @Original_Co_ID) AND ([Warehouse_ID"& _ 
                "] = @Original_Warehouse_ID) AND ([Warehouse_Name] = @Original_Warehouse_Name) AN"& _ 
                "D ([Stamp_UserID] = @Original_Stamp_UserID) AND ([Stamp_DateTime] = @Original_St"& _ 
                "amp_DateTime) AND ((@IsNull_Upload_DateTime = 1 AND [Upload_DateTime] IS NULL) O"& _ 
                "R ([Upload_DateTime] = @Original_Upload_DateTime)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Warehouse_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Warehouse_Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Upload_DateTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Inv_Warehouse] ([Co_ID], [Warehouse_ID], [Warehouse_Name], [Stamp_Us"& _ 
                "erID], [Stamp_DateTime], [Upload_DateTime]) VALUES (@Co_ID, @Warehouse_ID, @Ware"& _ 
                "house_Name, @Stamp_UserID, @Stamp_DateTime, @Upload_DateTime);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, Wa"& _ 
                "rehouse_ID, Warehouse_Name, Stamp_UserID, Stamp_DateTime, Upload_DateTime FROM I"& _ 
                "nv_Warehouse WHERE (Co_ID = @Co_ID) AND (Warehouse_ID = @Warehouse_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Warehouse_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Warehouse_Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Inv_Warehouse] SET [Co_ID] = @Co_ID, [Warehouse_ID] = @Warehouse_ID, [War"& _ 
                "ehouse_Name] = @Warehouse_Name, [Stamp_UserID] = @Stamp_UserID, [Stamp_DateTime]"& _ 
                " = @Stamp_DateTime, [Upload_DateTime] = @Upload_DateTime WHERE (([Co_ID] = @Orig"& _ 
                "inal_Co_ID) AND ([Warehouse_ID] = @Original_Warehouse_ID) AND ([Warehouse_Name] "& _ 
                "= @Original_Warehouse_Name) AND ([Stamp_UserID] = @Original_Stamp_UserID) AND (["& _ 
                "Stamp_DateTime] = @Original_Stamp_DateTime) AND ((@IsNull_Upload_DateTime = 1 AN"& _ 
                "D [Upload_DateTime] IS NULL) OR ([Upload_DateTime] = @Original_Upload_DateTime))"& _ 
                ");"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, Warehouse_ID, Warehouse_Name, Stamp_UserID, Stamp_DateTime, Up"& _ 
                "load_DateTime FROM Inv_Warehouse WHERE (Co_ID = @Co_ID) AND (Warehouse_ID = @War"& _ 
                "ehouse_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Warehouse_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Warehouse_Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Warehouse_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Warehouse_Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Upload_DateTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.QuickDAL.My.MySettings.Default.Quick_ERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Co_ID, Warehouse_ID, Warehouse_Name, Stamp_UserID, Stamp_DateTime, Upl"& _ 
                "oad_DateTime"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Inv_Warehouse"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     Co_ID, Warehouse_ID, Warehouse_Name, Stamp_UserID, Stamp_DateTime, Upl"& _ 
                "oad_DateTime"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Inv_Warehouse"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE Co_ID = @Co_ID"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetAll() As QuickInventoryDataSet.WarehouseDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As QuickInventoryDataSet.WarehouseDataTable = New QuickInventoryDataSet.WarehouseDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByCoID(ByVal Co_ID As Integer) As QuickInventoryDataSet.WarehouseDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.WarehouseDataTable = New QuickInventoryDataSet.WarehouseDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As QuickInventoryDataSet.WarehouseDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As QuickInventoryDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Warehouse")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Co_ID As Short, ByVal Original_Warehouse_ID As Integer, ByVal Original_Warehouse_Name As String, ByVal Original_Stamp_UserID As Integer, ByVal Original_Stamp_DateTime As Date, ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Co_ID,Short)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Warehouse_ID,Integer)
            If (Original_Warehouse_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Warehouse_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Warehouse_Name,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Stamp_UserID,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Stamp_DateTime,Date)
            If (Original_Upload_DateTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Upload_DateTime.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Co_ID As Short, ByVal Warehouse_ID As Integer, ByVal Warehouse_Name As String, ByVal Stamp_UserID As Integer, ByVal Stamp_DateTime As Date, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Warehouse_ID,Integer)
            If (Warehouse_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Warehouse_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Warehouse_Name,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(Stamp_UserID,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(Stamp_DateTime,Date)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Co_ID As Short, ByVal Warehouse_ID As Integer, ByVal Warehouse_Name As String, ByVal Stamp_UserID As Integer, ByVal Stamp_DateTime As Date, ByVal Upload_DateTime As Global.System.Nullable(Of Date), ByVal Original_Co_ID As Short, ByVal Original_Warehouse_ID As Integer, ByVal Original_Warehouse_Name As String, ByVal Original_Stamp_UserID As Integer, ByVal Original_Stamp_DateTime As Date, ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Warehouse_ID,Integer)
            If (Warehouse_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Warehouse_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Warehouse_Name,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Stamp_UserID,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Stamp_DateTime,Date)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Warehouse_ID,Integer)
            If (Original_Warehouse_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Warehouse_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_Warehouse_Name,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_Stamp_UserID,Integer)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_Stamp_DateTime,Date)
            If (Original_Upload_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_Upload_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Warehouse_Name As String, ByVal Stamp_UserID As Integer, ByVal Stamp_DateTime As Date, ByVal Upload_DateTime As Global.System.Nullable(Of Date), ByVal Original_Co_ID As Short, ByVal Original_Warehouse_ID As Integer, ByVal Original_Warehouse_Name As String, ByVal Original_Stamp_UserID As Integer, ByVal Original_Stamp_DateTime As Date, ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_Co_ID, Original_Warehouse_ID, Warehouse_Name, Stamp_UserID, Stamp_DateTime, Upload_DateTime, Original_Co_ID, Original_Warehouse_ID, Original_Warehouse_Name, Original_Stamp_UserID, Original_Stamp_DateTime, Original_Upload_DateTime)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class InventorySalesInvoiceTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "InventorySalesInvoice"
            tableMapping.ColumnMappings.Add("Co_ID", "Co_ID")
            tableMapping.ColumnMappings.Add("Inventory_ID", "Inventory_ID")
            tableMapping.ColumnMappings.Add("SalesMan_ID", "SalesMan_ID")
            tableMapping.ColumnMappings.Add("Stamp_DateTime", "Stamp_DateTime")
            tableMapping.ColumnMappings.Add("Stamp_UserID", "Stamp_UserID")
            tableMapping.ColumnMappings.Add("Discount", "Discount")
            tableMapping.ColumnMappings.Add("SalesTax", "SalesTax")
            tableMapping.ColumnMappings.Add("TotalCashReceived", "TotalCashReceived")
            tableMapping.ColumnMappings.Add("Upload_DateTime", "Upload_DateTime")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Inventory_SalesInvoice] WHERE (([Co_ID] = @Original_Co_ID) AND ([Inv"& _ 
                "entory_ID] = @Original_Inventory_ID) AND ([SalesMan_ID] = @Original_SalesMan_ID)"& _ 
                " AND ([Discount] = @Original_Discount) AND ([SalesTax] = @Original_SalesTax) AND"& _ 
                " ((@IsNull_TotalCashReceived = 1 AND [TotalCashReceived] IS NULL) OR ([TotalCash"& _ 
                "Received] = @Original_TotalCashReceived)) AND ([Stamp_DateTime] = @Original_Stam"& _ 
                "p_DateTime) AND ([Stamp_UserID] = @Original_Stamp_UserID) AND ((@IsNull_Upload_D"& _ 
                "ateTime = 1 AND [Upload_DateTime] IS NULL) OR ([Upload_DateTime] = @Original_Upl"& _ 
                "oad_DateTime)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SalesMan_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesMan_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Discount", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SalesTax", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesTax", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalCashReceived", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalCashReceived", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalCashReceived", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "TotalCashReceived", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Upload_DateTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Inventory_SalesInvoice] ([Co_ID], [Inventory_ID], [SalesMan_ID], [Di"& _ 
                "scount], [SalesTax], [TotalCashReceived], [Stamp_DateTime], [Stamp_UserID], [Upl"& _ 
                "oad_DateTime]) VALUES (@Co_ID, @Inventory_ID, @SalesMan_ID, @Discount, @SalesTax"& _ 
                ", @TotalCashReceived, @Stamp_DateTime, @Stamp_UserID, @Upload_DateTime);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT"& _ 
                " Co_ID, Inventory_ID, SalesMan_ID, Discount, SalesTax, TotalCashReceived, Stamp_"& _ 
                "DateTime, Stamp_UserID, Upload_DateTime FROM Inventory_SalesInvoice WHERE (Co_ID"& _ 
                " = @Co_ID) AND (Inventory_ID = @Inventory_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalesMan_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesMan_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discount", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalesTax", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesTax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalCashReceived", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "TotalCashReceived", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Inventory_SalesInvoice] SET [Co_ID] = @Co_ID, [Inventory_ID] = @Inventory"& _ 
                "_ID, [SalesMan_ID] = @SalesMan_ID, [Discount] = @Discount, [SalesTax] = @SalesTa"& _ 
                "x, [TotalCashReceived] = @TotalCashReceived, [Stamp_DateTime] = @Stamp_DateTime,"& _ 
                " [Stamp_UserID] = @Stamp_UserID, [Upload_DateTime] = @Upload_DateTime WHERE (([C"& _ 
                "o_ID] = @Original_Co_ID) AND ([Inventory_ID] = @Original_Inventory_ID) AND ([Sal"& _ 
                "esMan_ID] = @Original_SalesMan_ID) AND ([Discount] = @Original_Discount) AND ([S"& _ 
                "alesTax] = @Original_SalesTax) AND ((@IsNull_TotalCashReceived = 1 AND [TotalCas"& _ 
                "hReceived] IS NULL) OR ([TotalCashReceived] = @Original_TotalCashReceived)) AND "& _ 
                "([Stamp_DateTime] = @Original_Stamp_DateTime) AND ([Stamp_UserID] = @Original_St"& _ 
                "amp_UserID) AND ((@IsNull_Upload_DateTime = 1 AND [Upload_DateTime] IS NULL) OR "& _ 
                "([Upload_DateTime] = @Original_Upload_DateTime)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, Inventory_ID, "& _ 
                "SalesMan_ID, Discount, SalesTax, TotalCashReceived, Stamp_DateTime, Stamp_UserID"& _ 
                ", Upload_DateTime FROM Inventory_SalesInvoice WHERE (Co_ID = @Co_ID) AND (Invent"& _ 
                "ory_ID = @Inventory_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalesMan_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesMan_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discount", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalesTax", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesTax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalCashReceived", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "TotalCashReceived", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SalesMan_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesMan_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Discount", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SalesTax", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesTax", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalCashReceived", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalCashReceived", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalCashReceived", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "TotalCashReceived", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Upload_DateTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.QuickDAL.My.MySettings.Default.Quick_ERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Co_ID, Inventory_ID, SalesMan_ID, Discount, SalesTax, TotalCashReceived, S"& _ 
                "tamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inventory_SalesInvoice"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM [Inventory_SalesInvoice] WHERE (Co_Id = @Co_Id)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT Co_ID, Discount, Inventory_ID, SalesMan_ID, SalesTax, Stamp_DateTime, Stam"& _ 
                "p_UserID, TotalCashReceived, Upload_DateTime FROM Inventory_SalesInvoice WHERE ("& _ 
                "Co_ID = @Co_Id) AND (Upload_DateTime > @Upload_DateTime)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT Co_ID, Discount, Inventory_ID, SalesMan_ID, SalesTax, Stamp_DateTime, Stam"& _ 
                "p_UserID, TotalCashReceived, Upload_DateTime FROM Inventory_SalesInvoice WHERE ("& _ 
                "Co_ID = @Co_ID) AND (Inventory_ID = @Inventory_ID)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillAll(ByVal dataTable As QuickInventoryDataSet.InventorySalesInvoiceDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetAll() As QuickInventoryDataSet.InventorySalesInvoiceDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As QuickInventoryDataSet.InventorySalesInvoiceDataTable = New QuickInventoryDataSet.InventorySalesInvoiceDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillAllUploadedByCoIDDateTime(ByVal dataTable As QuickInventoryDataSet.InventorySalesInvoiceDataTable, ByVal Co_Id As Integer, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Integer)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllUploadedByCoIDDateTime(ByVal Co_Id As Integer, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As QuickInventoryDataSet.InventorySalesInvoiceDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Integer)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As QuickInventoryDataSet.InventorySalesInvoiceDataTable = New QuickInventoryDataSet.InventorySalesInvoiceDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCoIDInventoryID(ByVal dataTable As QuickInventoryDataSet.InventorySalesInvoiceDataTable, ByVal Co_ID As Integer, ByVal Inventory_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByCoIDInventoryID(ByVal Co_ID As Integer, ByVal Inventory_ID As Integer) As QuickInventoryDataSet.InventorySalesInvoiceDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.InventorySalesInvoiceDataTable = New QuickInventoryDataSet.InventorySalesInvoiceDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As QuickInventoryDataSet.InventorySalesInvoiceDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As QuickInventoryDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "InventorySalesInvoice")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Co_ID As Short, ByVal Original_Inventory_ID As Integer, ByVal Original_SalesMan_ID As Integer, ByVal Original_Discount As Decimal, ByVal Original_SalesTax As Decimal, ByVal Original_TotalCashReceived As Global.System.Nullable(Of Decimal), ByVal Original_Stamp_DateTime As Date, ByVal Original_Stamp_UserID As Integer, ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Co_ID,Short)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Inventory_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_SalesMan_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Discount,Decimal)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_SalesTax,Decimal)
            If (Original_TotalCashReceived.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_TotalCashReceived.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_Stamp_DateTime,Date)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Stamp_UserID,Integer)
            If (Original_Upload_DateTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Upload_DateTime.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Co_ID As Short, ByVal Inventory_ID As Integer, ByVal SalesMan_ID As Integer, ByVal Discount As Decimal, ByVal SalesTax As Decimal, ByVal TotalCashReceived As Global.System.Nullable(Of Decimal), ByVal Stamp_DateTime As Date, ByVal Stamp_UserID As Integer, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(SalesMan_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(Discount,Decimal)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(SalesTax,Decimal)
            If (TotalCashReceived.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(TotalCashReceived.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(Stamp_DateTime,Date)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(Stamp_UserID,Integer)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Co_ID As Short,  _
                    ByVal Inventory_ID As Integer,  _
                    ByVal SalesMan_ID As Integer,  _
                    ByVal Discount As Decimal,  _
                    ByVal SalesTax As Decimal,  _
                    ByVal TotalCashReceived As Global.System.Nullable(Of Decimal),  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Inventory_ID As Integer,  _
                    ByVal Original_SalesMan_ID As Integer,  _
                    ByVal Original_Discount As Decimal,  _
                    ByVal Original_SalesTax As Decimal,  _
                    ByVal Original_TotalCashReceived As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Stamp_DateTime As Date,  _
                    ByVal Original_Stamp_UserID As Integer,  _
                    ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SalesMan_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Discount,Decimal)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(SalesTax,Decimal)
            If (TotalCashReceived.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(TotalCashReceived.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Stamp_DateTime,Date)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Stamp_UserID,Integer)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_Inventory_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_SalesMan_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_Discount,Decimal)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_SalesTax,Decimal)
            If (Original_TotalCashReceived.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_TotalCashReceived.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_Stamp_DateTime,Date)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_Stamp_UserID,Integer)
            If (Original_Upload_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_Upload_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SalesMan_ID As Integer,  _
                    ByVal Discount As Decimal,  _
                    ByVal SalesTax As Decimal,  _
                    ByVal TotalCashReceived As Global.System.Nullable(Of Decimal),  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Inventory_ID As Integer,  _
                    ByVal Original_SalesMan_ID As Integer,  _
                    ByVal Original_Discount As Decimal,  _
                    ByVal Original_SalesTax As Decimal,  _
                    ByVal Original_TotalCashReceived As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Stamp_DateTime As Date,  _
                    ByVal Original_Stamp_UserID As Integer,  _
                    ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_Co_ID, Original_Inventory_ID, SalesMan_ID, Discount, SalesTax, TotalCashReceived, Stamp_DateTime, Stamp_UserID, Upload_DateTime, Original_Co_ID, Original_Inventory_ID, Original_SalesMan_ID, Original_Discount, Original_SalesTax, Original_TotalCashReceived, Original_Stamp_DateTime, Original_Stamp_UserID, Original_Upload_DateTime)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteAll(ByVal Co_Id As Short) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(Co_Id,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ItemSummaryTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ItemSummary"
            tableMapping.ColumnMappings.Add("Co_ID", "Co_ID")
            tableMapping.ColumnMappings.Add("Source_First_ID", "Source_First_ID")
            tableMapping.ColumnMappings.Add("Source_Second_ID", "Source_Second_ID")
            tableMapping.ColumnMappings.Add("Source_DocumentType_ID", "Source_DocumentType_ID")
            tableMapping.ColumnMappings.Add("ItemSummary_Size01", "ItemSummary_Size01")
            tableMapping.ColumnMappings.Add("ItemSummary_Size02", "ItemSummary_Size02")
            tableMapping.ColumnMappings.Add("ItemSummary_Size03", "ItemSummary_Size03")
            tableMapping.ColumnMappings.Add("ItemSummary_Size04", "ItemSummary_Size04")
            tableMapping.ColumnMappings.Add("ItemSummary_Size05", "ItemSummary_Size05")
            tableMapping.ColumnMappings.Add("ItemSummary_Size06", "ItemSummary_Size06")
            tableMapping.ColumnMappings.Add("ItemSummary_Size07", "ItemSummary_Size07")
            tableMapping.ColumnMappings.Add("ItemSummary_Size08", "ItemSummary_Size08")
            tableMapping.ColumnMappings.Add("ItemSummary_Size09", "ItemSummary_Size09")
            tableMapping.ColumnMappings.Add("ItemSummary_Size10", "ItemSummary_Size10")
            tableMapping.ColumnMappings.Add("ItemSummary_Size11", "ItemSummary_Size11")
            tableMapping.ColumnMappings.Add("ItemSummary_Size12", "ItemSummary_Size12")
            tableMapping.ColumnMappings.Add("ItemSummary_Size13", "ItemSummary_Size13")
            tableMapping.ColumnMappings.Add("Stamp_UserID", "Stamp_UserID")
            tableMapping.ColumnMappings.Add("Stamp_DateTime", "Stamp_DateTime")
            tableMapping.ColumnMappings.Add("Upload_DateTime", "Upload_DateTime")
            tableMapping.ColumnMappings.Add("Total", "Total")
            tableMapping.ColumnMappings.Add("Warehouse_ID", "Warehouse_ID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Inv_ItemSummary] WHERE (([Co_ID] = @Original_Co_ID) AND ([Source_Fir"& _ 
                "st_ID] = @Original_Source_First_ID) AND ([Source_Second_ID] = @Original_Source_S"& _ 
                "econd_ID) AND ([Source_DocumentType_ID] = @Original_Source_DocumentType_ID) AND "& _ 
                "([Warehouse_ID] = @Original_Warehouse_ID))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Source_First_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_First_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Source_Second_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Second_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Source_DocumentType_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Warehouse_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Inv_ItemSummary] ([Co_ID], [Source_First_ID], [Source_Second_ID], [S"& _ 
                "ource_DocumentType_ID], [Warehouse_ID], [ItemSummary_Size01], [ItemSummary_Size0"& _ 
                "2], [ItemSummary_Size03], [ItemSummary_Size04], [ItemSummary_Size05], [ItemSumma"& _ 
                "ry_Size06], [ItemSummary_Size07], [ItemSummary_Size08], [ItemSummary_Size09], [I"& _ 
                "temSummary_Size10], [ItemSummary_Size11], [ItemSummary_Size12], [ItemSummary_Siz"& _ 
                "e13], [Stamp_UserID], [Stamp_DateTime], [Upload_DateTime]) VALUES (@Co_ID, @Sour"& _ 
                "ce_First_ID, @Source_Second_ID, @Source_DocumentType_ID, @Warehouse_ID, @ItemSum"& _ 
                "mary_Size01, @ItemSummary_Size02, @ItemSummary_Size03, @ItemSummary_Size04, @Ite"& _ 
                "mSummary_Size05, @ItemSummary_Size06, @ItemSummary_Size07, @ItemSummary_Size08, "& _ 
                "@ItemSummary_Size09, @ItemSummary_Size10, @ItemSummary_Size11, @ItemSummary_Size"& _ 
                "12, @ItemSummary_Size13, @Stamp_UserID, @Stamp_DateTime, @Upload_DateTime);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SEL"& _ 
                "ECT Co_ID, Source_First_ID, Source_Second_ID, Source_DocumentType_ID, Warehouse_"& _ 
                "ID, ItemSummary_Size01, ItemSummary_Size02, ItemSummary_Size03, ItemSummary_Size"& _ 
                "04, ItemSummary_Size05, ItemSummary_Size06, ItemSummary_Size07, ItemSummary_Size"& _ 
                "08, ItemSummary_Size09, ItemSummary_Size10, ItemSummary_Size11, ItemSummary_Size"& _ 
                "12, ItemSummary_Size13, Stamp_UserID, Stamp_DateTime, Upload_DateTime, ItemSumma"& _ 
                "ry_Size01 + ItemSummary_Size02 + ItemSummary_Size03 + ItemSummary_Size04 + ItemS"& _ 
                "ummary_Size05 + ItemSummary_Size06 + ItemSummary_Size07 + ItemSummary_Size08 + I"& _ 
                "temSummary_Size09 + ItemSummary_Size10 + ItemSummary_Size11 + ItemSummary_Size12"& _ 
                " + ItemSummary_Size13 AS Total FROM Inv_ItemSummary WHERE (Co_ID = @Co_ID) AND ("& _ 
                "Source_DocumentType_ID = @Source_DocumentType_ID) AND (Source_First_ID = @Source"& _ 
                "_First_ID) AND (Source_Second_ID = @Source_Second_ID) AND (Warehouse_ID = @Wareh"& _ 
                "ouse_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_First_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_First_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Second_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Second_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_DocumentType_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Warehouse_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size01", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size02", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size03", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size04", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size05", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size06", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size06", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size07", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size07", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size08", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size08", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size09", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size09", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size11", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size12", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size13", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Inv_ItemSummary] SET [Co_ID] = @Co_ID, [Source_First_ID] = @Source_First_"& _ 
                "ID, [Source_Second_ID] = @Source_Second_ID, [Source_DocumentType_ID] = @Source_D"& _ 
                "ocumentType_ID, [Warehouse_ID] = @Warehouse_ID, [ItemSummary_Size01] = @ItemSumm"& _ 
                "ary_Size01, [ItemSummary_Size02] = @ItemSummary_Size02, [ItemSummary_Size03] = @"& _ 
                "ItemSummary_Size03, [ItemSummary_Size04] = @ItemSummary_Size04, [ItemSummary_Siz"& _ 
                "e05] = @ItemSummary_Size05, [ItemSummary_Size06] = @ItemSummary_Size06, [ItemSum"& _ 
                "mary_Size07] = @ItemSummary_Size07, [ItemSummary_Size08] = @ItemSummary_Size08, "& _ 
                "[ItemSummary_Size09] = @ItemSummary_Size09, [ItemSummary_Size10] = @ItemSummary_"& _ 
                "Size10, [ItemSummary_Size11] = @ItemSummary_Size11, [ItemSummary_Size12] = @Item"& _ 
                "Summary_Size12, [ItemSummary_Size13] = @ItemSummary_Size13, [Stamp_UserID] = @St"& _ 
                "amp_UserID, [Stamp_DateTime] = @Stamp_DateTime, [Upload_DateTime] = @Upload_Date"& _ 
                "Time WHERE (([Co_ID] = @Original_Co_ID) AND ([Source_First_ID] = @Original_Sourc"& _ 
                "e_First_ID) AND ([Source_Second_ID] = @Original_Source_Second_ID) AND ([Source_D"& _ 
                "ocumentType_ID] = @Original_Source_DocumentType_ID) AND ([Warehouse_ID] = @Origi"& _ 
                "nal_Warehouse_ID));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, Source_First_ID, Source_Second_ID, Source_Doc"& _ 
                "umentType_ID, Warehouse_ID, ItemSummary_Size01, ItemSummary_Size02, ItemSummary_"& _ 
                "Size03, ItemSummary_Size04, ItemSummary_Size05, ItemSummary_Size06, ItemSummary_"& _ 
                "Size07, ItemSummary_Size08, ItemSummary_Size09, ItemSummary_Size10, ItemSummary_"& _ 
                "Size11, ItemSummary_Size12, ItemSummary_Size13, Stamp_UserID, Stamp_DateTime, Up"& _ 
                "load_DateTime, ItemSummary_Size01 + ItemSummary_Size02 + ItemSummary_Size03 + It"& _ 
                "emSummary_Size04 + ItemSummary_Size05 + ItemSummary_Size06 + ItemSummary_Size07 "& _ 
                "+ ItemSummary_Size08 + ItemSummary_Size09 + ItemSummary_Size10 + ItemSummary_Siz"& _ 
                "e11 + ItemSummary_Size12 + ItemSummary_Size13 AS Total FROM Inv_ItemSummary WHER"& _ 
                "E (Co_ID = @Co_ID) AND (Source_DocumentType_ID = @Source_DocumentType_ID) AND (S"& _ 
                "ource_First_ID = @Source_First_ID) AND (Source_Second_ID = @Source_Second_ID) AN"& _ 
                "D (Warehouse_ID = @Warehouse_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_First_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_First_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Second_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Second_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_DocumentType_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Warehouse_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size01", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size02", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size03", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size04", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size05", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size06", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size06", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size07", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size07", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size08", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size08", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size09", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size09", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size11", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size12", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSummary_Size13", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemSummary_Size13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Source_First_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_First_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Source_Second_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Second_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Source_DocumentType_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Warehouse_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.QuickDAL.My.MySettings.Default.Quick_ERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Co_ID, Source_First_ID, Source_Second_ID, Source_DocumentType_ID, Warehous"& _ 
                "e_ID,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"ItemSummary_Size01, ItemSummary_Size02, ItemSummary_Size03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"ItemSumma"& _ 
                "ry_Size04, ItemSummary_Size05, ItemSummary_Size06, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"ItemSummary_Size07, ItemSu"& _ 
                "mmary_Size08, ItemSummary_Size09, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"ItemSummary_Size10, ItemSummary_Size11, Ite"& _ 
                "mSummary_Size12, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"ItemSummary_Size13, Stamp_UserID, Stamp_DateTime, Upload_Dat"& _ 
                "eTime, "&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"ItemSummary_Size01 + ItemSummary_Size02 + ItemSummary_Size03 + "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Item"& _ 
                "Summary_Size04 + ItemSummary_Size05 + ItemSummary_Size06 + "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"ItemSummary_Size07"& _ 
                " + ItemSummary_Size08 + ItemSummary_Size09 + "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"ItemSummary_Size10 + ItemSummary"& _ 
                "_Size11 + ItemSummary_Size12 + "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"ItemSummary_Size13 AS Total "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM Inv_ItemS"& _ 
                "ummary"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM [Inv_ItemSummary] WHERE (Co_Id = @Co_Id)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT S.Co_ID, Source_First_ID, Source_Second_ID, Source_DocumentType_ID, Docume"& _ 
                "ntType_Desc AS Summary_Type, ItemSummary_Size01, ItemSummary_Size02, ItemSummary"& _ 
                "_Size03, ItemSummary_Size04, ItemSummary_Size05, ItemSummary_Size06, ItemSummary"& _ 
                "_Size07, ItemSummary_Size08, ItemSummary_Size09, ItemSummary_Size10, ItemSummary"& _ 
                "_Size11, ItemSummary_Size12, ItemSummary_Size13, S.Stamp_UserID, S.Stamp_DateTim"& _ 
                "e, S.Upload_DateTime, ItemSummary_Size01 + ItemSummary_Size02 + ItemSummary_Size"& _ 
                "03 + ItemSummary_Size04 + ItemSummary_Size05 + ItemSummary_Size06 + ItemSummary_"& _ 
                "Size07 + ItemSummary_Size08 + ItemSummary_Size09 + ItemSummary_Size10 + ItemSumm"& _ 
                "ary_Size11 + ItemSummary_Size12 + ItemSummary_Size13 AS Total "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM Inv_ItemSum"& _ 
                "mary S"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    LEFT OUTER JOIN Common_DocumentType ON Source_DocumentType_ID = Docu"& _ 
                "mentType_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (S.Co_ID = @Co_Id) AND (S.Upload_DateTime > @Upload_DateTime)"& _ 
                ""
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT S.Co_ID, Source_First_ID, Source_Second_ID, Source_DocumentType_ID, Wareho"& _ 
                "use_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", DocumentType_Desc AS Summary_Type, ItemSummary_Size01, ItemSummary_Si"& _ 
                "ze02"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", ItemSummary_Size03, ItemSummary_Size04, ItemSummary_Size05, ItemSummary"& _ 
                "_Size06"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", ItemSummary_Size07, ItemSummary_Size08, ItemSummary_Size09, ItemSumm"& _ 
                "ary_Size10"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", ItemSummary_Size11, ItemSummary_Size12, ItemSummary_Size13, S.Sta"& _ 
                "mp_UserID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", S.Stamp_DateTime, S.Upload_DateTime, ItemSummary_Size01 + ItemSumm"& _ 
                "ary_Size02 "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"+ ItemSummary_Size03 + ItemSummary_Size04 + ItemSummary_Size05 + I"& _ 
                "temSummary_Size06 "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"+ ItemSummary_Size07 + ItemSummary_Size08 + ItemSummary_Siz"& _ 
                "e09 + ItemSummary_Size10 "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"+ ItemSummary_Size11 + ItemSummary_Size12 + ItemSumm"& _ 
                "ary_Size13 AS Total "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM Inv_ItemSummary S"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    LEFT OUTER JOIN Common_Documen"& _ 
                "tType ON Source_DocumentType_ID = DocumentType_ID "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (S.Co_ID = @Co_ID) AND"& _ 
                " (Source_First_ID = @Source_First_ID) AND (Source_Second_ID = @Source_Second_ID)"& _ 
                " AND (Source_DocumentType_ID = @Source_DocumentType_ID) AND Warehouse_ID = @Ware"& _ 
                "house_ID"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_First_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_First_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Second_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Second_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_DocumentType_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Warehouse_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetAll() As QuickInventoryDataSet.ItemSummaryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As QuickInventoryDataSet.ItemSummaryDataTable = New QuickInventoryDataSet.ItemSummaryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillAllUploadedByCoIDDateTime(ByVal dataTable As QuickInventoryDataSet.ItemSummaryDataTable, ByVal Co_Id As Short, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Short)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllUploadedByCoIDDateTime(ByVal Co_Id As Short, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As QuickInventoryDataSet.ItemSummaryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Short)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As QuickInventoryDataSet.ItemSummaryDataTable = New QuickInventoryDataSet.ItemSummaryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByPrimaryKey(ByVal Co_ID As Integer, ByVal Source_First_ID As Integer, ByVal Source_Second_ID As Integer, ByVal Source_DocumentType_ID As Integer, ByVal Warehouse_ID As Integer) As QuickInventoryDataSet.ItemSummaryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Source_First_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(Source_Second_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(Source_DocumentType_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(4).Value = CType(Warehouse_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.ItemSummaryDataTable = New QuickInventoryDataSet.ItemSummaryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As QuickInventoryDataSet.ItemSummaryDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As QuickInventoryDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "ItemSummary")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Co_ID As Short, ByVal Original_Source_First_ID As Integer, ByVal Original_Source_Second_ID As Integer, ByVal Original_Source_DocumentType_ID As Integer, ByVal Original_Warehouse_ID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Co_ID,Short)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Source_First_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Source_Second_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Source_DocumentType_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Warehouse_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Co_ID As Short,  _
                    ByVal Source_First_ID As Integer,  _
                    ByVal Source_Second_ID As Integer,  _
                    ByVal Source_DocumentType_ID As Integer,  _
                    ByVal Warehouse_ID As Integer,  _
                    ByVal ItemSummary_Size01 As Decimal,  _
                    ByVal ItemSummary_Size02 As Decimal,  _
                    ByVal ItemSummary_Size03 As Decimal,  _
                    ByVal ItemSummary_Size04 As Decimal,  _
                    ByVal ItemSummary_Size05 As Decimal,  _
                    ByVal ItemSummary_Size06 As Decimal,  _
                    ByVal ItemSummary_Size07 As Decimal,  _
                    ByVal ItemSummary_Size08 As Decimal,  _
                    ByVal ItemSummary_Size09 As Decimal,  _
                    ByVal ItemSummary_Size10 As Decimal,  _
                    ByVal ItemSummary_Size11 As Decimal,  _
                    ByVal ItemSummary_Size12 As Decimal,  _
                    ByVal ItemSummary_Size13 As Decimal,  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Source_First_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Source_Second_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(Source_DocumentType_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(Warehouse_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(ItemSummary_Size01,Decimal)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(ItemSummary_Size02,Decimal)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(ItemSummary_Size03,Decimal)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(ItemSummary_Size04,Decimal)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(ItemSummary_Size05,Decimal)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(ItemSummary_Size06,Decimal)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(ItemSummary_Size07,Decimal)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(ItemSummary_Size08,Decimal)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(ItemSummary_Size09,Decimal)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(ItemSummary_Size10,Decimal)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(ItemSummary_Size11,Decimal)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(ItemSummary_Size12,Decimal)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(ItemSummary_Size13,Decimal)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(Stamp_UserID,Integer)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(Stamp_DateTime,Date)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Co_ID As Short,  _
                    ByVal Source_First_ID As Integer,  _
                    ByVal Source_Second_ID As Integer,  _
                    ByVal Source_DocumentType_ID As Integer,  _
                    ByVal Warehouse_ID As Integer,  _
                    ByVal ItemSummary_Size01 As Decimal,  _
                    ByVal ItemSummary_Size02 As Decimal,  _
                    ByVal ItemSummary_Size03 As Decimal,  _
                    ByVal ItemSummary_Size04 As Decimal,  _
                    ByVal ItemSummary_Size05 As Decimal,  _
                    ByVal ItemSummary_Size06 As Decimal,  _
                    ByVal ItemSummary_Size07 As Decimal,  _
                    ByVal ItemSummary_Size08 As Decimal,  _
                    ByVal ItemSummary_Size09 As Decimal,  _
                    ByVal ItemSummary_Size10 As Decimal,  _
                    ByVal ItemSummary_Size11 As Decimal,  _
                    ByVal ItemSummary_Size12 As Decimal,  _
                    ByVal ItemSummary_Size13 As Decimal,  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Source_First_ID As Integer,  _
                    ByVal Original_Source_Second_ID As Integer,  _
                    ByVal Original_Source_DocumentType_ID As Integer,  _
                    ByVal Original_Warehouse_ID As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Source_First_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Source_Second_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Source_DocumentType_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Warehouse_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ItemSummary_Size01,Decimal)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ItemSummary_Size02,Decimal)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ItemSummary_Size03,Decimal)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ItemSummary_Size04,Decimal)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ItemSummary_Size05,Decimal)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ItemSummary_Size06,Decimal)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ItemSummary_Size07,Decimal)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(ItemSummary_Size08,Decimal)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(ItemSummary_Size09,Decimal)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(ItemSummary_Size10,Decimal)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(ItemSummary_Size11,Decimal)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(ItemSummary_Size12,Decimal)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(ItemSummary_Size13,Decimal)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Stamp_UserID,Integer)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Stamp_DateTime,Date)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_Source_First_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_Source_Second_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_Source_DocumentType_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_Warehouse_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Warehouse_ID As Integer,  _
                    ByVal ItemSummary_Size01 As Decimal,  _
                    ByVal ItemSummary_Size02 As Decimal,  _
                    ByVal ItemSummary_Size03 As Decimal,  _
                    ByVal ItemSummary_Size04 As Decimal,  _
                    ByVal ItemSummary_Size05 As Decimal,  _
                    ByVal ItemSummary_Size06 As Decimal,  _
                    ByVal ItemSummary_Size07 As Decimal,  _
                    ByVal ItemSummary_Size08 As Decimal,  _
                    ByVal ItemSummary_Size09 As Decimal,  _
                    ByVal ItemSummary_Size10 As Decimal,  _
                    ByVal ItemSummary_Size11 As Decimal,  _
                    ByVal ItemSummary_Size12 As Decimal,  _
                    ByVal ItemSummary_Size13 As Decimal,  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Source_First_ID As Integer,  _
                    ByVal Original_Source_Second_ID As Integer,  _
                    ByVal Original_Source_DocumentType_ID As Integer,  _
                    ByVal Original_Warehouse_ID As Integer) As Integer
            Return Me.Update(Original_Co_ID, Original_Source_First_ID, Original_Source_Second_ID, Original_Source_DocumentType_ID, Warehouse_ID, ItemSummary_Size01, ItemSummary_Size02, ItemSummary_Size03, ItemSummary_Size04, ItemSummary_Size05, ItemSummary_Size06, ItemSummary_Size07, ItemSummary_Size08, ItemSummary_Size09, ItemSummary_Size10, ItemSummary_Size11, ItemSummary_Size12, ItemSummary_Size13, Stamp_UserID, Stamp_DateTime, Upload_DateTime, Original_Co_ID, Original_Source_First_ID, Original_Source_Second_ID, Original_Source_DocumentType_ID, Original_Warehouse_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteAll(ByVal Co_Id As Short) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(Co_Id,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Temp_SalesInvoiceReportTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Temp_SalesInvoiceReport"
            tableMapping.ColumnMappings.Add("Co_ID", "Co_ID")
            tableMapping.ColumnMappings.Add("Co_Desc", "Co_Desc")
            tableMapping.ColumnMappings.Add("Address_Desc", "Address_Desc")
            tableMapping.ColumnMappings.Add("Inventory_Date", "Inventory_Date")
            tableMapping.ColumnMappings.Add("Party_ID", "Party_ID")
            tableMapping.ColumnMappings.Add("Party_Desc", "Party_Desc")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("DocumentType_ID", "DocumentType_ID")
            tableMapping.ColumnMappings.Add("Item_ID", "Item_ID")
            tableMapping.ColumnMappings.Add("Item_Code", "Item_Code")
            tableMapping.ColumnMappings.Add("Item_Desc", "Item_Desc")
            tableMapping.ColumnMappings.Add("Size_Desc", "Size_Desc")
            tableMapping.ColumnMappings.Add("Rate", "Rate")
            tableMapping.ColumnMappings.Add("Qty", "Qty")
            tableMapping.ColumnMappings.Add("Discount", "Discount")
            tableMapping.ColumnMappings.Add("SalesTax", "SalesTax")
            tableMapping.ColumnMappings.Add("Inventory_No", "Inventory_No")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Temp_SalesInvoiceReport] ([Co_ID], [Co_Desc], [Address_Desc], [Inven"& _ 
                "tory_Date], [Party_ID], [Party_Desc], [Remarks], [DocumentType_ID], [Item_ID], ["& _ 
                "Item_Code], [Item_Desc], [Size_Desc], [Rate], [Qty], [Discount], [SalesTax]) VAL"& _ 
                "UES (@Co_ID, @Co_Desc, @Address_Desc, @Inventory_Date, @Party_ID, @Party_Desc, @"& _ 
                "Remarks, @DocumentType_ID, @Item_ID, @Item_Code, @Item_Desc, @Size_Desc, @Rate, "& _ 
                "@Qty, @Discount, @SalesTax)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Desc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_Desc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Address_Desc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address_Desc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Party_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Party_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Party_Desc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Party_Desc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Desc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Desc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Size_Desc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Size_Desc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rate", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Qty", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Qty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discount", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Discount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalesTax", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SalesTax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.QuickDAL.My.MySettings.Default.Quick_ERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Co_ID, Co_Desc, Address_Desc, Inventory_Date, Party_ID, Party_Desc, Remark"& _ 
                "s, DocumentType_ID, Item_ID, Item_Code, Item_Desc, Size_Desc, Rate, Qty, Discoun"& _ 
                "t, SalesTax FROM Temp_SalesInvoiceReport"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "TRUNCATE TABLE Temp_SalesInvoiceReport"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillAll(ByVal dataTable As QuickInventoryDataSet.Temp_SalesInvoiceReportDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetAll() As QuickInventoryDataSet.Temp_SalesInvoiceReportDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As QuickInventoryDataSet.Temp_SalesInvoiceReportDataTable = New QuickInventoryDataSet.Temp_SalesInvoiceReportDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As QuickInventoryDataSet.Temp_SalesInvoiceReportDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As QuickInventoryDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Temp_SalesInvoiceReport")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Co_ID As Short,  _
                    ByVal Co_Desc As String,  _
                    ByVal Address_Desc As String,  _
                    ByVal Inventory_Date As Date,  _
                    ByVal Party_ID As Integer,  _
                    ByVal Party_Desc As String,  _
                    ByVal Remarks As String,  _
                    ByVal DocumentType_ID As Short,  _
                    ByVal Item_ID As Integer,  _
                    ByVal Item_Code As String,  _
                    ByVal Item_Desc As String,  _
                    ByVal Size_Desc As String,  _
                    ByVal Rate As Decimal,  _
                    ByVal Qty As Decimal,  _
                    ByVal Discount As Decimal,  _
                    ByVal SalesTax As Decimal) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Co_ID,Short)
            If (Co_Desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Co_Desc")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Co_Desc,String)
            End If
            If (Address_Desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Address_Desc")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Address_Desc,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(Inventory_Date,Date)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(Party_ID,Integer)
            If (Party_Desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Party_Desc")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Party_Desc,String)
            End If
            If (Remarks Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Remarks")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Remarks,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(DocumentType_ID,Short)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(Item_ID,Integer)
            If (Item_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Item_Code")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Item_Code,String)
            End If
            If (Item_Desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Item_Desc")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Item_Desc,String)
            End If
            If (Size_Desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Size_Desc")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Size_Desc,String)
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(Rate,Decimal)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(Qty,Decimal)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(Discount,Decimal)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(SalesTax,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function TruncateData() As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class InventoryDetailTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "InventoryDetail"
            tableMapping.ColumnMappings.Add("Co_ID", "Co_ID")
            tableMapping.ColumnMappings.Add("Inventory_ID", "Inventory_ID")
            tableMapping.ColumnMappings.Add("InventoryDetail_ID", "InventoryDetail_ID")
            tableMapping.ColumnMappings.Add("DocumentType_ID", "DocumentType_ID")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size01", "Inventory_Qty_Size01")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size02", "Inventory_Qty_Size02")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size03", "Inventory_Qty_Size03")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size04", "Inventory_Qty_Size04")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size05", "Inventory_Qty_Size05")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size06", "Inventory_Qty_Size06")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size07", "Inventory_Qty_Size07")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size08", "Inventory_Qty_Size08")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size09", "Inventory_Qty_Size09")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size10", "Inventory_Qty_Size10")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size11", "Inventory_Qty_Size11")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size12", "Inventory_Qty_Size12")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size13", "Inventory_Qty_Size13")
            tableMapping.ColumnMappings.Add("Inventory_Rate_Size01", "Inventory_Rate_Size01")
            tableMapping.ColumnMappings.Add("Inventory_Rate_Size02", "Inventory_Rate_Size02")
            tableMapping.ColumnMappings.Add("Inventory_Rate_Size03", "Inventory_Rate_Size03")
            tableMapping.ColumnMappings.Add("Inventory_Rate_Size04", "Inventory_Rate_Size04")
            tableMapping.ColumnMappings.Add("Inventory_Rate_Size05", "Inventory_Rate_Size05")
            tableMapping.ColumnMappings.Add("Inventory_Rate_Size06", "Inventory_Rate_Size06")
            tableMapping.ColumnMappings.Add("Inventory_Rate_Size07", "Inventory_Rate_Size07")
            tableMapping.ColumnMappings.Add("Inventory_Rate_Size08", "Inventory_Rate_Size08")
            tableMapping.ColumnMappings.Add("Inventory_Rate_Size09", "Inventory_Rate_Size09")
            tableMapping.ColumnMappings.Add("Inventory_Rate_Size10", "Inventory_Rate_Size10")
            tableMapping.ColumnMappings.Add("Inventory_Rate_Size11", "Inventory_Rate_Size11")
            tableMapping.ColumnMappings.Add("Inventory_Rate_Size12", "Inventory_Rate_Size12")
            tableMapping.ColumnMappings.Add("Item_ID", "Item_ID")
            tableMapping.ColumnMappings.Add("Inventory_Rate_Size13", "Inventory_Rate_Size13")
            tableMapping.ColumnMappings.Add("Stamp_UserID", "Stamp_UserID")
            tableMapping.ColumnMappings.Add("Stamp_DateTime", "Stamp_DateTime")
            tableMapping.ColumnMappings.Add("Source_DocumentType_ID", "Source_DocumentType_ID")
            tableMapping.ColumnMappings.Add("Source_Document_Co_ID", "Source_Document_Co_ID")
            tableMapping.ColumnMappings.Add("Source_Document_No", "Source_Document_No")
            tableMapping.ColumnMappings.Add("Upload_DateTime", "Upload_DateTime")
            tableMapping.ColumnMappings.Add("Discount", "Discount")
            tableMapping.ColumnMappings.Add("SalesTax", "SalesTax")
            tableMapping.ColumnMappings.Add("Warehouse_ID", "Warehouse_ID")
            tableMapping.ColumnMappings.Add("RecordStatus_ID", "RecordStatus_ID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Inventory_Detail] WHERE (([Co_ID] = @Original_Co_ID) AND ([Inventory"& _ 
                "_ID] = @Original_Inventory_ID) AND ([InventoryDetail_ID] = @Original_InventoryDe"& _ 
                "tail_ID))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InventoryDetail_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InventoryDetail_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Inventory_Detail] ([Co_ID], [Inventory_ID], [InventoryDetail_ID], [D"& _ 
                "ocumentType_ID], [Item_ID], [Warehouse_ID], [Inventory_Qty_Size01], [Inventory_Q"& _ 
                "ty_Size02], [Inventory_Qty_Size03], [Inventory_Qty_Size04], [Inventory_Qty_Size0"& _ 
                "5], [Inventory_Qty_Size06], [Inventory_Qty_Size07], [Inventory_Qty_Size08], [Inv"& _ 
                "entory_Qty_Size09], [Inventory_Qty_Size10], [Inventory_Qty_Size11], [Inventory_Q"& _ 
                "ty_Size12], [Inventory_Qty_Size13], [Inventory_Rate_Size01], [Inventory_Rate_Siz"& _ 
                "e02], [Inventory_Rate_Size03], [Inventory_Rate_Size04], [Inventory_Rate_Size05],"& _ 
                " [Inventory_Rate_Size06], [Inventory_Rate_Size07], [Inventory_Rate_Size08], [Inv"& _ 
                "entory_Rate_Size09], [Inventory_Rate_Size10], [Inventory_Rate_Size11], [Inventor"& _ 
                "y_Rate_Size12], [Inventory_Rate_Size13], [Stamp_UserID], [Stamp_DateTime], [Sour"& _ 
                "ce_DocumentType_ID], [Source_Document_No], [Source_Document_Co_ID], [Upload_Date"& _ 
                "Time], [Discount], [SalesTax], [RecordStatus_ID]) VALUES (@Co_ID, @Inventory_ID,"& _ 
                " @InventoryDetail_ID, @DocumentType_ID, @Item_ID, @Warehouse_ID, @Inventory_Qty_"& _ 
                "Size01, @Inventory_Qty_Size02, @Inventory_Qty_Size03, @Inventory_Qty_Size04, @In"& _ 
                "ventory_Qty_Size05, @Inventory_Qty_Size06, @Inventory_Qty_Size07, @Inventory_Qty"& _ 
                "_Size08, @Inventory_Qty_Size09, @Inventory_Qty_Size10, @Inventory_Qty_Size11, @I"& _ 
                "nventory_Qty_Size12, @Inventory_Qty_Size13, @Inventory_Rate_Size01, @Inventory_R"& _ 
                "ate_Size02, @Inventory_Rate_Size03, @Inventory_Rate_Size04, @Inventory_Rate_Size"& _ 
                "05, @Inventory_Rate_Size06, @Inventory_Rate_Size07, @Inventory_Rate_Size08, @Inv"& _ 
                "entory_Rate_Size09, @Inventory_Rate_Size10, @Inventory_Rate_Size11, @Inventory_R"& _ 
                "ate_Size12, @Inventory_Rate_Size13, @Stamp_UserID, @Stamp_DateTime, @Source_Docu"& _ 
                "mentType_ID, @Source_Document_No, @Source_Document_Co_ID, @Upload_DateTime, @Dis"& _ 
                "count, @SalesTax, @RecordStatus_ID);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, Inventory_ID, InventoryDetai"& _ 
                "l_ID, DocumentType_ID, Item_ID, Warehouse_ID, Inventory_Qty_Size01, Inventory_Qt"& _ 
                "y_Size02, Inventory_Qty_Size03, Inventory_Qty_Size04, Inventory_Qty_Size05, Inve"& _ 
                "ntory_Qty_Size06, Inventory_Qty_Size07, Inventory_Qty_Size08, Inventory_Qty_Size"& _ 
                "09, Inventory_Qty_Size10, Inventory_Qty_Size11, Inventory_Qty_Size12, Inventory_"& _ 
                "Qty_Size13, Inventory_Rate_Size01, Inventory_Rate_Size02, Inventory_Rate_Size03,"& _ 
                " Inventory_Rate_Size04, Inventory_Rate_Size05, Inventory_Rate_Size06, Inventory_"& _ 
                "Rate_Size07, Inventory_Rate_Size08, Inventory_Rate_Size09, Inventory_Rate_Size10"& _ 
                ", Inventory_Rate_Size11, Inventory_Rate_Size12, Inventory_Rate_Size13, Stamp_Use"& _ 
                "rID, Stamp_DateTime, Source_DocumentType_ID, Source_Document_No, Source_Document"& _ 
                "_Co_ID, Upload_DateTime, Discount, SalesTax, RecordStatus_ID FROM Inventory_Deta"& _ 
                "il WHERE (Co_ID = @Co_ID) AND (InventoryDetail_ID = @InventoryDetail_ID) AND (In"& _ 
                "ventory_ID = @Inventory_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InventoryDetail_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InventoryDetail_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Warehouse_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size01", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size02", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size03", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size04", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size05", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size06", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size06", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size07", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size07", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size08", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size08", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size09", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size09", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size11", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size12", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size13", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size01", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size02", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size03", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size04", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size05", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size06", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size06", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size07", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size07", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size08", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size08", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size09", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size09", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size11", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size12", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size13", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Document_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Document_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Document_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Document_Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalesTax", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesTax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordStatus_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordStatus_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Inventory_Detail] SET [Co_ID] = @Co_ID, [Inventory_ID] = @Inventory_ID, ["& _ 
                "InventoryDetail_ID] = @InventoryDetail_ID, [DocumentType_ID] = @DocumentType_ID,"& _ 
                " [Item_ID] = @Item_ID, [Warehouse_ID] = @Warehouse_ID, [Inventory_Qty_Size01] = "& _ 
                "@Inventory_Qty_Size01, [Inventory_Qty_Size02] = @Inventory_Qty_Size02, [Inventor"& _ 
                "y_Qty_Size03] = @Inventory_Qty_Size03, [Inventory_Qty_Size04] = @Inventory_Qty_S"& _ 
                "ize04, [Inventory_Qty_Size05] = @Inventory_Qty_Size05, [Inventory_Qty_Size06] = "& _ 
                "@Inventory_Qty_Size06, [Inventory_Qty_Size07] = @Inventory_Qty_Size07, [Inventor"& _ 
                "y_Qty_Size08] = @Inventory_Qty_Size08, [Inventory_Qty_Size09] = @Inventory_Qty_S"& _ 
                "ize09, [Inventory_Qty_Size10] = @Inventory_Qty_Size10, [Inventory_Qty_Size11] = "& _ 
                "@Inventory_Qty_Size11, [Inventory_Qty_Size12] = @Inventory_Qty_Size12, [Inventor"& _ 
                "y_Qty_Size13] = @Inventory_Qty_Size13, [Inventory_Rate_Size01] = @Inventory_Rate"& _ 
                "_Size01, [Inventory_Rate_Size02] = @Inventory_Rate_Size02, [Inventory_Rate_Size0"& _ 
                "3] = @Inventory_Rate_Size03, [Inventory_Rate_Size04] = @Inventory_Rate_Size04, ["& _ 
                "Inventory_Rate_Size05] = @Inventory_Rate_Size05, [Inventory_Rate_Size06] = @Inve"& _ 
                "ntory_Rate_Size06, [Inventory_Rate_Size07] = @Inventory_Rate_Size07, [Inventory_"& _ 
                "Rate_Size08] = @Inventory_Rate_Size08, [Inventory_Rate_Size09] = @Inventory_Rate"& _ 
                "_Size09, [Inventory_Rate_Size10] = @Inventory_Rate_Size10, [Inventory_Rate_Size1"& _ 
                "1] = @Inventory_Rate_Size11, [Inventory_Rate_Size12] = @Inventory_Rate_Size12, ["& _ 
                "Inventory_Rate_Size13] = @Inventory_Rate_Size13, [Stamp_UserID] = @Stamp_UserID,"& _ 
                " [Stamp_DateTime] = @Stamp_DateTime, [Source_DocumentType_ID] = @Source_Document"& _ 
                "Type_ID, [Source_Document_No] = @Source_Document_No, [Source_Document_Co_ID] = @"& _ 
                "Source_Document_Co_ID, [Upload_DateTime] = @Upload_DateTime, [Discount] = @Disco"& _ 
                "unt, [SalesTax] = @SalesTax, [RecordStatus_ID] = @RecordStatus_ID WHERE (([Co_ID"& _ 
                "] = @Original_Co_ID) AND ([Inventory_ID] = @Original_Inventory_ID) AND ([Invento"& _ 
                "ryDetail_ID] = @Original_InventoryDetail_ID));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, Inventory_ID, Inve"& _ 
                "ntoryDetail_ID, DocumentType_ID, Item_ID, Warehouse_ID, Inventory_Qty_Size01, In"& _ 
                "ventory_Qty_Size02, Inventory_Qty_Size03, Inventory_Qty_Size04, Inventory_Qty_Si"& _ 
                "ze05, Inventory_Qty_Size06, Inventory_Qty_Size07, Inventory_Qty_Size08, Inventor"& _ 
                "y_Qty_Size09, Inventory_Qty_Size10, Inventory_Qty_Size11, Inventory_Qty_Size12, "& _ 
                "Inventory_Qty_Size13, Inventory_Rate_Size01, Inventory_Rate_Size02, Inventory_Ra"& _ 
                "te_Size03, Inventory_Rate_Size04, Inventory_Rate_Size05, Inventory_Rate_Size06, "& _ 
                "Inventory_Rate_Size07, Inventory_Rate_Size08, Inventory_Rate_Size09, Inventory_R"& _ 
                "ate_Size10, Inventory_Rate_Size11, Inventory_Rate_Size12, Inventory_Rate_Size13,"& _ 
                " Stamp_UserID, Stamp_DateTime, Source_DocumentType_ID, Source_Document_No, Sourc"& _ 
                "e_Document_Co_ID, Upload_DateTime, Discount, SalesTax, RecordStatus_ID FROM Inve"& _ 
                "ntory_Detail WHERE (Co_ID = @Co_ID) AND (InventoryDetail_ID = @InventoryDetail_I"& _ 
                "D) AND (Inventory_ID = @Inventory_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InventoryDetail_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InventoryDetail_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Warehouse_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size01", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size02", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size03", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size04", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size05", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size06", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size06", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size07", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size07", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size08", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size08", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size09", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size09", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size11", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size12", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Qty_Size13", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Qty_Size13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size01", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size02", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size03", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size04", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size05", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size06", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size06", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size07", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size07", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size08", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size08", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size09", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size09", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size11", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size12", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Rate_Size13", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Inventory_Rate_Size13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Document_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Document_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Document_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Document_Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalesTax", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesTax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordStatus_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordStatus_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InventoryDetail_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InventoryDetail_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.QuickDAL.My.MySettings.Default.Quick_ERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(8) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Co_ID, Inventory_ID, InventoryDetail_ID, DocumentType_ID, Item_ID, War"& _ 
                "ehouse_ID, Inventory_Qty_Size01, Inventory_Qty_Size02, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      I"& _ 
                "nventory_Qty_Size03, Inventory_Qty_Size04, Inventory_Qty_Size05, Inventory_Qty_S"& _ 
                "ize06, Inventory_Qty_Size07, Inventory_Qty_Size08, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inven"& _ 
                "tory_Qty_Size09, Inventory_Qty_Size10, Inventory_Qty_Size11, Inventory_Qty_Size1"& _ 
                "2, Inventory_Qty_Size13, Inventory_Rate_Size01, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inventor"& _ 
                "y_Rate_Size02, Inventory_Rate_Size03, Inventory_Rate_Size04, Inventory_Rate_Size"& _ 
                "05, Inventory_Rate_Size06, Inventory_Rate_Size07, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Invent"& _ 
                "ory_Rate_Size08, Inventory_Rate_Size09, Inventory_Rate_Size10, Inventory_Rate_Si"& _ 
                "ze11, Inventory_Rate_Size12, Inventory_Rate_Size13, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Stam"& _ 
                "p_UserID, Stamp_DateTime, Source_DocumentType_ID, Source_Document_No, Source_Doc"& _ 
                "ument_Co_ID, Upload_DateTime, Discount, SalesTax, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Record"& _ 
                "Status_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Inventory_Detail"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM [Inventory_Detail] WHERE (Co_Id = @Co_Id)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "ALTER TABLE [Inventory_Detail] DISABLE TRIGGER ALL"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "ALTER TABLE [Inventory_Detail] ENABLE TRIGGER ALL"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT Co_ID, Discount, DocumentType_ID, InventoryDetail_ID, Inventory_ID, Invent"& _ 
                "ory_Qty_Size01, Inventory_Qty_Size02, Inventory_Qty_Size03, Inventory_Qty_Size04"& _ 
                ", Inventory_Qty_Size05, Inventory_Qty_Size06, Inventory_Qty_Size07, Inventory_Qt"& _ 
                "y_Size08, Inventory_Qty_Size09, Inventory_Qty_Size10, Inventory_Qty_Size11, Inve"& _ 
                "ntory_Qty_Size12, Inventory_Qty_Size13, Inventory_Rate_Size01, Inventory_Rate_Si"& _ 
                "ze02, Inventory_Rate_Size03, Inventory_Rate_Size04, Inventory_Rate_Size05, Inven"& _ 
                "tory_Rate_Size06, Inventory_Rate_Size07, Inventory_Rate_Size08, Inventory_Rate_S"& _ 
                "ize09, Inventory_Rate_Size10, Inventory_Rate_Size11, Inventory_Rate_Size12, Inve"& _ 
                "ntory_Rate_Size13, Item_ID, RecordStatus_ID, SalesTax, Source_DocumentType_ID, S"& _ 
                "ource_Document_Co_ID, Source_Document_No, Stamp_DateTime, Stamp_UserID, Upload_D"& _ 
                "ateTime, Warehouse_ID FROM Inventory_Detail WHERE (Co_ID = @Co_ID OR @Co_ID = 0)"& _ 
                " AND (Stamp_DateTime > @Stamp_DateTime)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT Co_ID, Discount, DocumentType_ID, InventoryDetail_ID, Inventory_ID, Invent"& _ 
                "ory_Qty_Size01, Inventory_Qty_Size02, Inventory_Qty_Size03, Inventory_Qty_Size04"& _ 
                ", Inventory_Qty_Size05, Inventory_Qty_Size06, Inventory_Qty_Size07, Inventory_Qt"& _ 
                "y_Size08, Inventory_Qty_Size09, Inventory_Qty_Size10, Inventory_Qty_Size11, Inve"& _ 
                "ntory_Qty_Size12, Inventory_Qty_Size13, Inventory_Rate_Size01, Inventory_Rate_Si"& _ 
                "ze02, Inventory_Rate_Size03, Inventory_Rate_Size04, Inventory_Rate_Size05, Inven"& _ 
                "tory_Rate_Size06, Inventory_Rate_Size07, Inventory_Rate_Size08, Inventory_Rate_S"& _ 
                "ize09, Inventory_Rate_Size10, Inventory_Rate_Size11, Inventory_Rate_Size12, Inve"& _ 
                "ntory_Rate_Size13, Item_ID, RecordStatus_ID, SalesTax, Source_DocumentType_ID, S"& _ 
                "ource_Document_Co_ID, Source_Document_No, Stamp_DateTime, Stamp_UserID, Upload_D"& _ 
                "ateTime, Warehouse_ID FROM Inventory_Detail WHERE (Co_ID = @Co_Id) AND (Upload_D"& _ 
                "ateTime > @Upload_DateTime)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT     Inventory_Detail.Co_ID, Inventory_Detail.DocumentType_ID, Inventory_De"& _ 
                "tail.InventoryDetail_ID, Inventory_Detail.Inventory_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "Inventory_Detail.Inventory_Qty_Size01, Inventory_Detail.Inventory_Qty_Size02, In"& _ 
                "ventory_Detail.Inventory_Qty_Size03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inventory_Detail.In"& _ 
                "ventory_Qty_Size04, Inventory_Detail.Inventory_Qty_Size05, Inventory_Detail.Inve"& _ 
                "ntory_Qty_Size06, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inventory_Detail.Inventory_Qty_Size07,"& _ 
                " Inventory_Detail.Inventory_Qty_Size08, Inventory_Detail.Inventory_Qty_Size09, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inventory_Detail.Inventory_Qty_Size10, Inventory_Detail.I"& _ 
                "nventory_Qty_Size11, Inventory_Detail.Inventory_Qty_Size12, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "    Inventory_Detail.Inventory_Qty_Size13, Inventory_Detail.Inventory_Rate_Size0"& _ 
                "1, Inventory_Detail.Inventory_Rate_Size02, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inventory_Det"& _ 
                "ail.Inventory_Rate_Size03, Inventory_Detail.Inventory_Rate_Size04, Inventory_Det"& _ 
                "ail.Inventory_Rate_Size05, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inventory_Detail.Inventory_Ra"& _ 
                "te_Size06, Inventory_Detail.Inventory_Rate_Size07, Inventory_Detail.Inventory_Ra"& _ 
                "te_Size08, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inventory_Detail.Inventory_Rate_Size09, Inven"& _ 
                "tory_Detail.Inventory_Rate_Size10, Inventory_Detail.Inventory_Rate_Size11, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                   Inventory_Detail.Inventory_Rate_Size12, Inventory_Detail.Inve"& _ 
                "ntory_Rate_Size13, Inventory_Detail.Item_ID, Inventory_Detail.Stamp_DateTime, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                      Inventory_Detail.Stamp_UserID, Inv_Item.Item_Code, Inv_Ite"& _ 
                "m.Item_Desc, Inventory_Detail.Source_DocumentType_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      In"& _ 
                "ventory_Detail.Source_Document_No, Inventory_Detail.Source_Document_Co_ID, Inven"& _ 
                "tory_Detail.Upload_DateTime, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inventory_Detail.Warehouse_"& _ 
                "ID, Inventory_Detail.Discount, Inventory_Detail.SalesTax, Inventory_Detail.Recor"& _ 
                "dStatus_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Inventory_Detail INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inv_"& _ 
                "Item ON Inventory_Detail.Co_ID = Inv_Item.Co_ID AND Inventory_Detail.Item_ID = I"& _ 
                "nv_Item.Item_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Inventory_Detail.Co_ID = @Co_ID) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"AND (Inventory_D"& _ 
                "etail.Inventory_ID = @Inventory_ID)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"AND (Inventory_Detail.RecordStatus_ID IS N"& _ 
                "ULL OR Inventory_Detail.RecordStatus_ID <> 4)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"-- RecordStatus_ID 4 = Deleted"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT     Inventory_Detail.Co_ID, Inventory_Detail.DocumentType_ID, Inventory_De"& _ 
                "tail.InventoryDetail_ID, Inventory_Detail.Inventory_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "Inventory_Detail.Inventory_Qty_Size01, Inventory_Detail.Inventory_Qty_Size02, In"& _ 
                "ventory_Detail.Inventory_Qty_Size03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inventory_Detail.In"& _ 
                "ventory_Qty_Size04, Inventory_Detail.Inventory_Qty_Size05, Inventory_Detail.Inve"& _ 
                "ntory_Qty_Size06, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inventory_Detail.Inventory_Qty_Size07,"& _ 
                " Inventory_Detail.Inventory_Qty_Size08, Inventory_Detail.Inventory_Qty_Size09, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inventory_Detail.Inventory_Qty_Size10, Inventory_Detail.I"& _ 
                "nventory_Qty_Size11, Inventory_Detail.Inventory_Qty_Size12, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "    Inventory_Detail.Inventory_Qty_Size13, Inventory_Detail.Inventory_Rate_Size0"& _ 
                "1, Inventory_Detail.Inventory_Rate_Size02, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inventory_Det"& _ 
                "ail.Inventory_Rate_Size03, Inventory_Detail.Inventory_Rate_Size04, Inventory_Det"& _ 
                "ail.Inventory_Rate_Size05, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inventory_Detail.Inventory_Ra"& _ 
                "te_Size06, Inventory_Detail.Inventory_Rate_Size07, Inventory_Detail.Inventory_Ra"& _ 
                "te_Size08, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inventory_Detail.Inventory_Rate_Size09, Inven"& _ 
                "tory_Detail.Inventory_Rate_Size10, Inventory_Detail.Inventory_Rate_Size11, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                   Inventory_Detail.Inventory_Rate_Size12, Inventory_Detail.Inve"& _ 
                "ntory_Rate_Size13, Inventory_Detail.Item_ID, Inventory_Detail.Stamp_DateTime, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                      Inventory_Detail.Stamp_UserID, Inv_Item.Item_Code, Inv_Ite"& _ 
                "m.Item_Desc, Inventory_Detail.Source_DocumentType_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      In"& _ 
                "ventory_Detail.Source_Document_No, Inventory_Detail.Source_Document_Co_ID, Inven"& _ 
                "tory_Detail.Upload_DateTime, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inventory_Detail.Warehouse_"& _ 
                "ID, Inventory_Detail.Discount, Inventory_Detail.SalesTax, Inventory_Detail.Recor"& _ 
                "dStatus_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Inventory_Detail INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Inv_"& _ 
                "Item ON Inventory_Detail.Co_ID = Inv_Item.Co_ID AND Inventory_Detail.Item_ID = I"& _ 
                "nv_Item.Item_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Inventory_Detail.Co_ID = @Co_ID) AND (Inventory_Deta"& _ 
                "il.Inventory_ID = @Inventory_ID) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (Inventory_Detail.I"& _ 
                "nventoryDetail_ID = @InventoryDetail_ID)"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InventoryDetail_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "InventoryDetail_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT     ISNULL(MAX(InventoryDetail_ID), 0) + 1 AS NewID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Inventor"& _ 
                "y_Detail"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Co_ID = @Co_ID) AND (Inventory_ID = @Inventory_ID)"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetAll() As QuickInventoryDataSet.InventoryDetailDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As QuickInventoryDataSet.InventoryDetailDataTable = New QuickInventoryDataSet.InventoryDetailDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllUpdatedByCoIDDateTime(ByVal Co_ID As Integer, ByVal Stamp_DateTime As Global.System.Nullable(Of Date)) As QuickInventoryDataSet.InventoryDetailDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            If (Stamp_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Stamp_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As QuickInventoryDataSet.InventoryDetailDataTable = New QuickInventoryDataSet.InventoryDetailDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllUploadedByCoIDDateTime(ByVal Co_Id As Integer, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As QuickInventoryDataSet.InventoryDetailDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Integer)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As QuickInventoryDataSet.InventoryDetailDataTable = New QuickInventoryDataSet.InventoryDetailDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByCoIDInventoryID(ByVal Co_ID As Integer, ByVal Inventory_ID As Integer) As QuickInventoryDataSet.InventoryDetailDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.InventoryDetailDataTable = New QuickInventoryDataSet.InventoryDetailDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function GetByCoIDInventoryIDInventoryDetailID1(ByVal dataTable As QuickInventoryDataSet.InventoryDetailDataTable, ByVal Co_ID As Integer, ByVal Inventory_ID As Integer, ByVal InventoryDetail_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(InventoryDetail_ID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByCoIDInventoryIDInventoryDetailID(ByVal Co_ID As Integer, ByVal Inventory_ID As Integer, ByVal InventoryDetail_ID As Integer) As QuickInventoryDataSet.InventoryDetailDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(InventoryDetail_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.InventoryDetailDataTable = New QuickInventoryDataSet.InventoryDetailDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As QuickInventoryDataSet.InventoryDetailDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As QuickInventoryDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "InventoryDetail")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Co_ID As Short, ByVal Original_Inventory_ID As Integer, ByVal Original_InventoryDetail_ID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Co_ID,Short)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Inventory_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_InventoryDetail_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Co_ID As Short,  _
                    ByVal Inventory_ID As Integer,  _
                    ByVal InventoryDetail_ID As Integer,  _
                    ByVal DocumentType_ID As Short,  _
                    ByVal Item_ID As Integer,  _
                    ByVal Warehouse_ID As Integer,  _
                    ByVal Inventory_Qty_Size01 As Decimal,  _
                    ByVal Inventory_Qty_Size02 As Decimal,  _
                    ByVal Inventory_Qty_Size03 As Decimal,  _
                    ByVal Inventory_Qty_Size04 As Decimal,  _
                    ByVal Inventory_Qty_Size05 As Decimal,  _
                    ByVal Inventory_Qty_Size06 As Decimal,  _
                    ByVal Inventory_Qty_Size07 As Decimal,  _
                    ByVal Inventory_Qty_Size08 As Decimal,  _
                    ByVal Inventory_Qty_Size09 As Decimal,  _
                    ByVal Inventory_Qty_Size10 As Decimal,  _
                    ByVal Inventory_Qty_Size11 As Decimal,  _
                    ByVal Inventory_Qty_Size12 As Decimal,  _
                    ByVal Inventory_Qty_Size13 As Decimal,  _
                    ByVal Inventory_Rate_Size01 As Decimal,  _
                    ByVal Inventory_Rate_Size02 As Decimal,  _
                    ByVal Inventory_Rate_Size03 As Decimal,  _
                    ByVal Inventory_Rate_Size04 As Decimal,  _
                    ByVal Inventory_Rate_Size05 As Decimal,  _
                    ByVal Inventory_Rate_Size06 As Decimal,  _
                    ByVal Inventory_Rate_Size07 As Decimal,  _
                    ByVal Inventory_Rate_Size08 As Decimal,  _
                    ByVal Inventory_Rate_Size09 As Decimal,  _
                    ByVal Inventory_Rate_Size10 As Decimal,  _
                    ByVal Inventory_Rate_Size11 As Decimal,  _
                    ByVal Inventory_Rate_Size12 As Decimal,  _
                    ByVal Inventory_Rate_Size13 As Decimal,  _
                    ByVal Stamp_UserID As Global.System.Nullable(Of Integer),  _
                    ByVal Stamp_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Source_DocumentType_ID As Global.System.Nullable(Of Short),  _
                    ByVal Source_Document_No As Global.System.Nullable(Of Integer),  _
                    ByVal Source_Document_Co_ID As Global.System.Nullable(Of Short),  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Discount As Global.System.Nullable(Of Integer),  _
                    ByVal SalesTax As Global.System.Nullable(Of Integer),  _
                    ByVal RecordStatus_ID As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(InventoryDetail_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(DocumentType_ID,Short)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(Item_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(Warehouse_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(Inventory_Qty_Size01,Decimal)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(Inventory_Qty_Size02,Decimal)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(Inventory_Qty_Size03,Decimal)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(Inventory_Qty_Size04,Decimal)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(Inventory_Qty_Size05,Decimal)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(Inventory_Qty_Size06,Decimal)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(Inventory_Qty_Size07,Decimal)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(Inventory_Qty_Size08,Decimal)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(Inventory_Qty_Size09,Decimal)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(Inventory_Qty_Size10,Decimal)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(Inventory_Qty_Size11,Decimal)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(Inventory_Qty_Size12,Decimal)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(Inventory_Qty_Size13,Decimal)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(Inventory_Rate_Size01,Decimal)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(Inventory_Rate_Size02,Decimal)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(Inventory_Rate_Size03,Decimal)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(Inventory_Rate_Size04,Decimal)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(Inventory_Rate_Size05,Decimal)
            Me.Adapter.InsertCommand.Parameters(24).Value = CType(Inventory_Rate_Size06,Decimal)
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(Inventory_Rate_Size07,Decimal)
            Me.Adapter.InsertCommand.Parameters(26).Value = CType(Inventory_Rate_Size08,Decimal)
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(Inventory_Rate_Size09,Decimal)
            Me.Adapter.InsertCommand.Parameters(28).Value = CType(Inventory_Rate_Size10,Decimal)
            Me.Adapter.InsertCommand.Parameters(29).Value = CType(Inventory_Rate_Size11,Decimal)
            Me.Adapter.InsertCommand.Parameters(30).Value = CType(Inventory_Rate_Size12,Decimal)
            Me.Adapter.InsertCommand.Parameters(31).Value = CType(Inventory_Rate_Size13,Decimal)
            If (Stamp_UserID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Stamp_UserID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Stamp_DateTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(Stamp_DateTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Source_DocumentType_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(Source_DocumentType_ID.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Source_Document_No.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(Source_Document_No.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Source_Document_Co_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Source_Document_Co_ID.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Discount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(Discount.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (SalesTax.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(SalesTax.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (RecordStatus_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(RecordStatus_ID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Co_ID As Short,  _
                    ByVal Inventory_ID As Integer,  _
                    ByVal InventoryDetail_ID As Integer,  _
                    ByVal DocumentType_ID As Short,  _
                    ByVal Item_ID As Integer,  _
                    ByVal Warehouse_ID As Integer,  _
                    ByVal Inventory_Qty_Size01 As Decimal,  _
                    ByVal Inventory_Qty_Size02 As Decimal,  _
                    ByVal Inventory_Qty_Size03 As Decimal,  _
                    ByVal Inventory_Qty_Size04 As Decimal,  _
                    ByVal Inventory_Qty_Size05 As Decimal,  _
                    ByVal Inventory_Qty_Size06 As Decimal,  _
                    ByVal Inventory_Qty_Size07 As Decimal,  _
                    ByVal Inventory_Qty_Size08 As Decimal,  _
                    ByVal Inventory_Qty_Size09 As Decimal,  _
                    ByVal Inventory_Qty_Size10 As Decimal,  _
                    ByVal Inventory_Qty_Size11 As Decimal,  _
                    ByVal Inventory_Qty_Size12 As Decimal,  _
                    ByVal Inventory_Qty_Size13 As Decimal,  _
                    ByVal Inventory_Rate_Size01 As Decimal,  _
                    ByVal Inventory_Rate_Size02 As Decimal,  _
                    ByVal Inventory_Rate_Size03 As Decimal,  _
                    ByVal Inventory_Rate_Size04 As Decimal,  _
                    ByVal Inventory_Rate_Size05 As Decimal,  _
                    ByVal Inventory_Rate_Size06 As Decimal,  _
                    ByVal Inventory_Rate_Size07 As Decimal,  _
                    ByVal Inventory_Rate_Size08 As Decimal,  _
                    ByVal Inventory_Rate_Size09 As Decimal,  _
                    ByVal Inventory_Rate_Size10 As Decimal,  _
                    ByVal Inventory_Rate_Size11 As Decimal,  _
                    ByVal Inventory_Rate_Size12 As Decimal,  _
                    ByVal Inventory_Rate_Size13 As Decimal,  _
                    ByVal Stamp_UserID As Global.System.Nullable(Of Integer),  _
                    ByVal Stamp_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Source_DocumentType_ID As Global.System.Nullable(Of Short),  _
                    ByVal Source_Document_No As Global.System.Nullable(Of Integer),  _
                    ByVal Source_Document_Co_ID As Global.System.Nullable(Of Short),  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Discount As Global.System.Nullable(Of Integer),  _
                    ByVal SalesTax As Global.System.Nullable(Of Integer),  _
                    ByVal RecordStatus_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Inventory_ID As Integer,  _
                    ByVal Original_InventoryDetail_ID As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(InventoryDetail_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DocumentType_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Item_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Warehouse_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Inventory_Qty_Size01,Decimal)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Inventory_Qty_Size02,Decimal)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Inventory_Qty_Size03,Decimal)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Inventory_Qty_Size04,Decimal)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Inventory_Qty_Size05,Decimal)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Inventory_Qty_Size06,Decimal)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Inventory_Qty_Size07,Decimal)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Inventory_Qty_Size08,Decimal)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Inventory_Qty_Size09,Decimal)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Inventory_Qty_Size10,Decimal)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Inventory_Qty_Size11,Decimal)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Inventory_Qty_Size12,Decimal)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Inventory_Qty_Size13,Decimal)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Inventory_Rate_Size01,Decimal)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Inventory_Rate_Size02,Decimal)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Inventory_Rate_Size03,Decimal)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Inventory_Rate_Size04,Decimal)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Inventory_Rate_Size05,Decimal)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Inventory_Rate_Size06,Decimal)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Inventory_Rate_Size07,Decimal)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Inventory_Rate_Size08,Decimal)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Inventory_Rate_Size09,Decimal)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Inventory_Rate_Size10,Decimal)
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Inventory_Rate_Size11,Decimal)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Inventory_Rate_Size12,Decimal)
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Inventory_Rate_Size13,Decimal)
            If (Stamp_UserID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Stamp_UserID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Stamp_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Stamp_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Source_DocumentType_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Source_DocumentType_ID.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Source_Document_No.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Source_Document_No.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Source_Document_Co_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Source_Document_Co_ID.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Discount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Discount.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (SalesTax.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(SalesTax.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (RecordStatus_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(RecordStatus_ID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_Inventory_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_InventoryDetail_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal DocumentType_ID As Short,  _
                    ByVal Item_ID As Integer,  _
                    ByVal Warehouse_ID As Integer,  _
                    ByVal Inventory_Qty_Size01 As Decimal,  _
                    ByVal Inventory_Qty_Size02 As Decimal,  _
                    ByVal Inventory_Qty_Size03 As Decimal,  _
                    ByVal Inventory_Qty_Size04 As Decimal,  _
                    ByVal Inventory_Qty_Size05 As Decimal,  _
                    ByVal Inventory_Qty_Size06 As Decimal,  _
                    ByVal Inventory_Qty_Size07 As Decimal,  _
                    ByVal Inventory_Qty_Size08 As Decimal,  _
                    ByVal Inventory_Qty_Size09 As Decimal,  _
                    ByVal Inventory_Qty_Size10 As Decimal,  _
                    ByVal Inventory_Qty_Size11 As Decimal,  _
                    ByVal Inventory_Qty_Size12 As Decimal,  _
                    ByVal Inventory_Qty_Size13 As Decimal,  _
                    ByVal Inventory_Rate_Size01 As Decimal,  _
                    ByVal Inventory_Rate_Size02 As Decimal,  _
                    ByVal Inventory_Rate_Size03 As Decimal,  _
                    ByVal Inventory_Rate_Size04 As Decimal,  _
                    ByVal Inventory_Rate_Size05 As Decimal,  _
                    ByVal Inventory_Rate_Size06 As Decimal,  _
                    ByVal Inventory_Rate_Size07 As Decimal,  _
                    ByVal Inventory_Rate_Size08 As Decimal,  _
                    ByVal Inventory_Rate_Size09 As Decimal,  _
                    ByVal Inventory_Rate_Size10 As Decimal,  _
                    ByVal Inventory_Rate_Size11 As Decimal,  _
                    ByVal Inventory_Rate_Size12 As Decimal,  _
                    ByVal Inventory_Rate_Size13 As Decimal,  _
                    ByVal Stamp_UserID As Global.System.Nullable(Of Integer),  _
                    ByVal Stamp_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Source_DocumentType_ID As Global.System.Nullable(Of Short),  _
                    ByVal Source_Document_No As Global.System.Nullable(Of Integer),  _
                    ByVal Source_Document_Co_ID As Global.System.Nullable(Of Short),  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Discount As Global.System.Nullable(Of Integer),  _
                    ByVal SalesTax As Global.System.Nullable(Of Integer),  _
                    ByVal RecordStatus_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Inventory_ID As Integer,  _
                    ByVal Original_InventoryDetail_ID As Integer) As Integer
            Return Me.Update(Original_Co_ID, Original_Inventory_ID, Original_InventoryDetail_ID, DocumentType_ID, Item_ID, Warehouse_ID, Inventory_Qty_Size01, Inventory_Qty_Size02, Inventory_Qty_Size03, Inventory_Qty_Size04, Inventory_Qty_Size05, Inventory_Qty_Size06, Inventory_Qty_Size07, Inventory_Qty_Size08, Inventory_Qty_Size09, Inventory_Qty_Size10, Inventory_Qty_Size11, Inventory_Qty_Size12, Inventory_Qty_Size13, Inventory_Rate_Size01, Inventory_Rate_Size02, Inventory_Rate_Size03, Inventory_Rate_Size04, Inventory_Rate_Size05, Inventory_Rate_Size06, Inventory_Rate_Size07, Inventory_Rate_Size08, Inventory_Rate_Size09, Inventory_Rate_Size10, Inventory_Rate_Size11, Inventory_Rate_Size12, Inventory_Rate_Size13, Stamp_UserID, Stamp_DateTime, Source_DocumentType_ID, Source_Document_No, Source_Document_Co_ID, Upload_DateTime, Discount, SalesTax, RecordStatus_ID, Original_Co_ID, Original_Inventory_ID, Original_InventoryDetail_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteAll(ByVal Co_Id As Short) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(Co_Id,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function DisableAllTriggers() As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function EnableAllTriggers() As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetNewInventoryDetailIDByCoIDInventoryID(ByVal Co_ID As Integer, ByVal Inventory_ID As Integer) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(8)
            command.Parameters(0).Value = CType(Co_ID,Integer)
            command.Parameters(1).Value = CType(Inventory_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ItemTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Item"
            tableMapping.ColumnMappings.Add("Item_Desc", "Item_Desc")
            tableMapping.ColumnMappings.Add("Item_SaleRate_Size01", "Item_SaleRate_Size01")
            tableMapping.ColumnMappings.Add("Item_SaleRate_Size02", "Item_SaleRate_Size02")
            tableMapping.ColumnMappings.Add("Item_SaleRate_Size03", "Item_SaleRate_Size03")
            tableMapping.ColumnMappings.Add("Item_SaleRate_Size04", "Item_SaleRate_Size04")
            tableMapping.ColumnMappings.Add("Item_SaleRate_Size05", "Item_SaleRate_Size05")
            tableMapping.ColumnMappings.Add("Item_SaleRate_Size06", "Item_SaleRate_Size06")
            tableMapping.ColumnMappings.Add("Item_SaleRate_Size07", "Item_SaleRate_Size07")
            tableMapping.ColumnMappings.Add("Item_SaleRate_Size08", "Item_SaleRate_Size08")
            tableMapping.ColumnMappings.Add("Item_SaleRate_Size09", "Item_SaleRate_Size09")
            tableMapping.ColumnMappings.Add("Item_SaleRate_Size10", "Item_SaleRate_Size10")
            tableMapping.ColumnMappings.Add("Item_SaleRate_Size11", "Item_SaleRate_Size11")
            tableMapping.ColumnMappings.Add("Item_SaleRate_Size12", "Item_SaleRate_Size12")
            tableMapping.ColumnMappings.Add("Item_SaleRate_Size13", "Item_SaleRate_Size13")
            tableMapping.ColumnMappings.Add("Co_ID", "Co_ID")
            tableMapping.ColumnMappings.Add("Item_ID", "Item_ID")
            tableMapping.ColumnMappings.Add("Item_Code", "Item_Code")
            tableMapping.ColumnMappings.Add("Stamp_UserID", "Stamp_UserID")
            tableMapping.ColumnMappings.Add("Stamp_DateTime", "Stamp_DateTime")
            tableMapping.ColumnMappings.Add("Parent_Item_ID", "Parent_Item_ID")
            tableMapping.ColumnMappings.Add("Party_ID", "Party_ID")
            tableMapping.ColumnMappings.Add("Address_ID", "Address_ID")
            tableMapping.ColumnMappings.Add("Upload_DateTime", "Upload_DateTime")
            tableMapping.ColumnMappings.Add("Item_MinStock_Size0", "Item_MinStock_Size0")
            tableMapping.ColumnMappings.Add("Item_MinStock_Size1", "Item_MinStock_Size1")
            tableMapping.ColumnMappings.Add("Item_MinStock_Size2", "Item_MinStock_Size2")
            tableMapping.ColumnMappings.Add("Item_MinStock_Size3", "Item_MinStock_Size3")
            tableMapping.ColumnMappings.Add("Item_MinStock_Size4", "Item_MinStock_Size4")
            tableMapping.ColumnMappings.Add("Item_MinStock_Size5", "Item_MinStock_Size5")
            tableMapping.ColumnMappings.Add("Item_MinStock_Size6", "Item_MinStock_Size6")
            tableMapping.ColumnMappings.Add("Item_MinStock_Size7", "Item_MinStock_Size7")
            tableMapping.ColumnMappings.Add("Item_MinStock_Size8", "Item_MinStock_Size8")
            tableMapping.ColumnMappings.Add("Item_MinStock_Size9", "Item_MinStock_Size9")
            tableMapping.ColumnMappings.Add("Item_MinStock_Size10", "Item_MinStock_Size10")
            tableMapping.ColumnMappings.Add("Item_MinStock_Size11", "Item_MinStock_Size11")
            tableMapping.ColumnMappings.Add("Item_MinStock_Size12", "Item_MinStock_Size12")
            tableMapping.ColumnMappings.Add("Item_MinStock_Size13", "Item_MinStock_Size13")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Inv_Item] WHERE (([Co_ID] = @Original_Co_ID) AND ([Item_ID] = @Origi"& _ 
                "nal_Item_ID) AND ([Parent_Item_ID] = @Original_Parent_Item_ID) AND ([Party_ID] ="& _ 
                " @Original_Party_ID) AND ([Address_ID] = @Original_Address_ID) AND ((@IsNull_Ite"& _ 
                "m_Code = 1 AND [Item_Code] IS NULL) OR ([Item_Code] = @Original_Item_Code)) AND "& _ 
                "([Item_Desc] = @Original_Item_Desc) AND ([Item_SaleRate_Size01] = @Original_Item"& _ 
                "_SaleRate_Size01) AND ([Item_SaleRate_Size02] = @Original_Item_SaleRate_Size02) "& _ 
                "AND ([Item_SaleRate_Size03] = @Original_Item_SaleRate_Size03) AND ([Item_SaleRat"& _ 
                "e_Size04] = @Original_Item_SaleRate_Size04) AND ([Item_SaleRate_Size05] = @Origi"& _ 
                "nal_Item_SaleRate_Size05) AND ([Item_SaleRate_Size06] = @Original_Item_SaleRate_"& _ 
                "Size06) AND ([Item_SaleRate_Size07] = @Original_Item_SaleRate_Size07) AND ([Item"& _ 
                "_SaleRate_Size08] = @Original_Item_SaleRate_Size08) AND ([Item_SaleRate_Size09] "& _ 
                "= @Original_Item_SaleRate_Size09) AND ([Item_SaleRate_Size10] = @Original_Item_S"& _ 
                "aleRate_Size10) AND ([Item_SaleRate_Size11] = @Original_Item_SaleRate_Size11) AN"& _ 
                "D ([Item_SaleRate_Size12] = @Original_Item_SaleRate_Size12) AND ([Item_SaleRate_"& _ 
                "Size13] = @Original_Item_SaleRate_Size13) AND ((@IsNull_Item_MinStock_Size0 = 1 "& _ 
                "AND [Item_MinStock_Size0] IS NULL) OR ([Item_MinStock_Size0] = @Original_Item_Mi"& _ 
                "nStock_Size0)) AND ((@IsNull_Item_MinStock_Size1 = 1 AND [Item_MinStock_Size1] I"& _ 
                "S NULL) OR ([Item_MinStock_Size1] = @Original_Item_MinStock_Size1)) AND ((@IsNul"& _ 
                "l_Item_MinStock_Size2 = 1 AND [Item_MinStock_Size2] IS NULL) OR ([Item_MinStock_"& _ 
                "Size2] = @Original_Item_MinStock_Size2)) AND ((@IsNull_Item_MinStock_Size3 = 1 A"& _ 
                "ND [Item_MinStock_Size3] IS NULL) OR ([Item_MinStock_Size3] = @Original_Item_Min"& _ 
                "Stock_Size3)) AND ((@IsNull_Item_MinStock_Size4 = 1 AND [Item_MinStock_Size4] IS"& _ 
                " NULL) OR ([Item_MinStock_Size4] = @Original_Item_MinStock_Size4)) AND ((@IsNull"& _ 
                "_Item_MinStock_Size5 = 1 AND [Item_MinStock_Size5] IS NULL) OR ([Item_MinStock_S"& _ 
                "ize5] = @Original_Item_MinStock_Size5)) AND ((@IsNull_Item_MinStock_Size6 = 1 AN"& _ 
                "D [Item_MinStock_Size6] IS NULL) OR ([Item_MinStock_Size6] = @Original_Item_MinS"& _ 
                "tock_Size6)) AND ((@IsNull_Item_MinStock_Size7 = 1 AND [Item_MinStock_Size7] IS "& _ 
                "NULL) OR ([Item_MinStock_Size7] = @Original_Item_MinStock_Size7)) AND ((@IsNull_"& _ 
                "Item_MinStock_Size8 = 1 AND [Item_MinStock_Size8] IS NULL) OR ([Item_MinStock_Si"& _ 
                "ze8] = @Original_Item_MinStock_Size8)) AND ((@IsNull_Item_MinStock_Size9 = 1 AND"& _ 
                " [Item_MinStock_Size9] IS NULL) OR ([Item_MinStock_Size9] = @Original_Item_MinSt"& _ 
                "ock_Size9)) AND ((@IsNull_Item_MinStock_Size10 = 1 AND [Item_MinStock_Size10] IS"& _ 
                " NULL) OR ([Item_MinStock_Size10] = @Original_Item_MinStock_Size10)) AND ((@IsNu"& _ 
                "ll_Item_MinStock_Size11 = 1 AND [Item_MinStock_Size11] IS NULL) OR ([Item_MinSto"& _ 
                "ck_Size11] = @Original_Item_MinStock_Size11)) AND ((@IsNull_Item_MinStock_Size12"& _ 
                " = 1 AND [Item_MinStock_Size12] IS NULL) OR ([Item_MinStock_Size12] = @Original_"& _ 
                "Item_MinStock_Size12)) AND ((@IsNull_Item_MinStock_Size13 = 1 AND [Item_MinStock"& _ 
                "_Size13] IS NULL) OR ([Item_MinStock_Size13] = @Original_Item_MinStock_Size13)) "& _ 
                "AND ([Stamp_UserID] = @Original_Stamp_UserID) AND ([Stamp_DateTime] = @Original_"& _ 
                "Stamp_DateTime) AND ((@IsNull_Upload_DateTime = 1 AND [Upload_DateTime] IS NULL)"& _ 
                " OR ([Upload_DateTime] = @Original_Upload_DateTime)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Parent_Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Parent_Item_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Party_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Party_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Address_ID", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_Code", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_Desc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Desc", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size01", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size02", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size03", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size04", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size05", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size06", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size06", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size07", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size07", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size08", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size08", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size09", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size09", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size11", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size12", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size12", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size13", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size13", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size0", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size0", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size0", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size0", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size11", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size12", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size12", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size13", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size13", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size13", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size13", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Upload_DateTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Inv_Item] ([Co_ID], [Item_ID], [Parent_Item_ID], [Party_ID], [Addres"& _ 
                "s_ID], [Item_Code], [Item_Desc], [Item_SaleRate_Size01], [Item_SaleRate_Size02],"& _ 
                " [Item_SaleRate_Size03], [Item_SaleRate_Size04], [Item_SaleRate_Size05], [Item_S"& _ 
                "aleRate_Size06], [Item_SaleRate_Size07], [Item_SaleRate_Size08], [Item_SaleRate_"& _ 
                "Size09], [Item_SaleRate_Size10], [Item_SaleRate_Size11], [Item_SaleRate_Size12],"& _ 
                " [Item_SaleRate_Size13], [Item_MinStock_Size0], [Item_MinStock_Size1], [Item_Min"& _ 
                "Stock_Size2], [Item_MinStock_Size3], [Item_MinStock_Size4], [Item_MinStock_Size5"& _ 
                "], [Item_MinStock_Size6], [Item_MinStock_Size7], [Item_MinStock_Size8], [Item_Mi"& _ 
                "nStock_Size9], [Item_MinStock_Size10], [Item_MinStock_Size11], [Item_MinStock_Si"& _ 
                "ze12], [Item_MinStock_Size13], [Stamp_UserID], [Stamp_DateTime], [Upload_DateTim"& _ 
                "e]) VALUES (@Co_ID, @Item_ID, @Parent_Item_ID, @Party_ID, @Address_ID, @Item_Cod"& _ 
                "e, @Item_Desc, @Item_SaleRate_Size01, @Item_SaleRate_Size02, @Item_SaleRate_Size"& _ 
                "03, @Item_SaleRate_Size04, @Item_SaleRate_Size05, @Item_SaleRate_Size06, @Item_S"& _ 
                "aleRate_Size07, @Item_SaleRate_Size08, @Item_SaleRate_Size09, @Item_SaleRate_Siz"& _ 
                "e10, @Item_SaleRate_Size11, @Item_SaleRate_Size12, @Item_SaleRate_Size13, @Item_"& _ 
                "MinStock_Size0, @Item_MinStock_Size1, @Item_MinStock_Size2, @Item_MinStock_Size3"& _ 
                ", @Item_MinStock_Size4, @Item_MinStock_Size5, @Item_MinStock_Size6, @Item_MinSto"& _ 
                "ck_Size7, @Item_MinStock_Size8, @Item_MinStock_Size9, @Item_MinStock_Size10, @It"& _ 
                "em_MinStock_Size11, @Item_MinStock_Size12, @Item_MinStock_Size13, @Stamp_UserID,"& _ 
                " @Stamp_DateTime, @Upload_DateTime);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, Item_ID, Parent_Item_ID, Par"& _ 
                "ty_ID, Address_ID, Item_Code, Item_Desc, Item_SaleRate_Size01, Item_SaleRate_Siz"& _ 
                "e02, Item_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_Sale"& _ 
                "Rate_Size06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, I"& _ 
                "tem_SaleRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_S"& _ 
                "ize13, Item_MinStock_Size0, Item_MinStock_Size1, Item_MinStock_Size2, Item_MinSt"& _ 
                "ock_Size3, Item_MinStock_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_M"& _ 
                "inStock_Size7, Item_MinStock_Size8, Item_MinStock_Size9, Item_MinStock_Size10, I"& _ 
                "tem_MinStock_Size11, Item_MinStock_Size12, Item_MinStock_Size13, Stamp_UserID, S"& _ 
                "tamp_DateTime, Upload_DateTime FROM Inv_Item WHERE (Co_ID = @Co_ID) AND (Item_ID"& _ 
                " = @Item_ID) ORDER BY Co_ID, Item_Code"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Parent_Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Parent_Item_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Party_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Party_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Address_ID", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Desc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Desc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size01", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size02", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size03", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size04", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size05", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size06", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size06", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size07", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size07", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size08", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size08", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size09", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size09", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size11", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size12", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size13", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size0", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size0", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size13", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Inv_Item] SET [Co_ID] = @Co_ID, [Item_ID] = @Item_ID, [Parent_Item_ID] = "& _ 
                "@Parent_Item_ID, [Party_ID] = @Party_ID, [Address_ID] = @Address_ID, [Item_Code]"& _ 
                " = @Item_Code, [Item_Desc] = @Item_Desc, [Item_SaleRate_Size01] = @Item_SaleRate"& _ 
                "_Size01, [Item_SaleRate_Size02] = @Item_SaleRate_Size02, [Item_SaleRate_Size03] "& _ 
                "= @Item_SaleRate_Size03, [Item_SaleRate_Size04] = @Item_SaleRate_Size04, [Item_S"& _ 
                "aleRate_Size05] = @Item_SaleRate_Size05, [Item_SaleRate_Size06] = @Item_SaleRate"& _ 
                "_Size06, [Item_SaleRate_Size07] = @Item_SaleRate_Size07, [Item_SaleRate_Size08] "& _ 
                "= @Item_SaleRate_Size08, [Item_SaleRate_Size09] = @Item_SaleRate_Size09, [Item_S"& _ 
                "aleRate_Size10] = @Item_SaleRate_Size10, [Item_SaleRate_Size11] = @Item_SaleRate"& _ 
                "_Size11, [Item_SaleRate_Size12] = @Item_SaleRate_Size12, [Item_SaleRate_Size13] "& _ 
                "= @Item_SaleRate_Size13, [Item_MinStock_Size0] = @Item_MinStock_Size0, [Item_Min"& _ 
                "Stock_Size1] = @Item_MinStock_Size1, [Item_MinStock_Size2] = @Item_MinStock_Size"& _ 
                "2, [Item_MinStock_Size3] = @Item_MinStock_Size3, [Item_MinStock_Size4] = @Item_M"& _ 
                "inStock_Size4, [Item_MinStock_Size5] = @Item_MinStock_Size5, [Item_MinStock_Size"& _ 
                "6] = @Item_MinStock_Size6, [Item_MinStock_Size7] = @Item_MinStock_Size7, [Item_M"& _ 
                "inStock_Size8] = @Item_MinStock_Size8, [Item_MinStock_Size9] = @Item_MinStock_Si"& _ 
                "ze9, [Item_MinStock_Size10] = @Item_MinStock_Size10, [Item_MinStock_Size11] = @I"& _ 
                "tem_MinStock_Size11, [Item_MinStock_Size12] = @Item_MinStock_Size12, [Item_MinSt"& _ 
                "ock_Size13] = @Item_MinStock_Size13, [Stamp_UserID] = @Stamp_UserID, [Stamp_Date"& _ 
                "Time] = @Stamp_DateTime, [Upload_DateTime] = @Upload_DateTime WHERE (([Co_ID] = "& _ 
                "@Original_Co_ID) AND ([Item_ID] = @Original_Item_ID) AND ([Parent_Item_ID] = @Or"& _ 
                "iginal_Parent_Item_ID) AND ([Party_ID] = @Original_Party_ID) AND ([Address_ID] ="& _ 
                " @Original_Address_ID) AND ((@IsNull_Item_Code = 1 AND [Item_Code] IS NULL) OR ("& _ 
                "[Item_Code] = @Original_Item_Code)) AND ([Item_Desc] = @Original_Item_Desc) AND "& _ 
                "([Item_SaleRate_Size01] = @Original_Item_SaleRate_Size01) AND ([Item_SaleRate_Si"& _ 
                "ze02] = @Original_Item_SaleRate_Size02) AND ([Item_SaleRate_Size03] = @Original_"& _ 
                "Item_SaleRate_Size03) AND ([Item_SaleRate_Size04] = @Original_Item_SaleRate_Size"& _ 
                "04) AND ([Item_SaleRate_Size05] = @Original_Item_SaleRate_Size05) AND ([Item_Sal"& _ 
                "eRate_Size06] = @Original_Item_SaleRate_Size06) AND ([Item_SaleRate_Size07] = @O"& _ 
                "riginal_Item_SaleRate_Size07) AND ([Item_SaleRate_Size08] = @Original_Item_SaleR"& _ 
                "ate_Size08) AND ([Item_SaleRate_Size09] = @Original_Item_SaleRate_Size09) AND (["& _ 
                "Item_SaleRate_Size10] = @Original_Item_SaleRate_Size10) AND ([Item_SaleRate_Size"& _ 
                "11] = @Original_Item_SaleRate_Size11) AND ([Item_SaleRate_Size12] = @Original_It"& _ 
                "em_SaleRate_Size12) AND ([Item_SaleRate_Size13] = @Original_Item_SaleRate_Size13"& _ 
                ") AND ((@IsNull_Item_MinStock_Size0 = 1 AND [Item_MinStock_Size0] IS NULL) OR (["& _ 
                "Item_MinStock_Size0] = @Original_Item_MinStock_Size0)) AND ((@IsNull_Item_MinSto"& _ 
                "ck_Size1 = 1 AND [Item_MinStock_Size1] IS NULL) OR ([Item_MinStock_Size1] = @Ori"& _ 
                "ginal_Item_MinStock_Size1)) AND ((@IsNull_Item_MinStock_Size2 = 1 AND [Item_MinS"& _ 
                "tock_Size2] IS NULL) OR ([Item_MinStock_Size2] = @Original_Item_MinStock_Size2))"& _ 
                " AND ((@IsNull_Item_MinStock_Size3 = 1 AND [Item_MinStock_Size3] IS NULL) OR ([I"& _ 
                "tem_MinStock_Size3] = @Original_Item_MinStock_Size3)) AND ((@IsNull_Item_MinStoc"& _ 
                "k_Size4 = 1 AND [Item_MinStock_Size4] IS NULL) OR ([Item_MinStock_Size4] = @Orig"& _ 
                "inal_Item_MinStock_Size4)) AND ((@IsNull_Item_MinStock_Size5 = 1 AND [Item_MinSt"& _ 
                "ock_Size5] IS NULL) OR ([Item_MinStock_Size5] = @Original_Item_MinStock_Size5)) "& _ 
                "AND ((@IsNull_Item_MinStock_Size6 = 1 AND [Item_MinStock_Size6] IS NULL) OR ([It"& _ 
                "em_MinStock_Size6] = @Original_Item_MinStock_Size6)) AND ((@IsNull_Item_MinStock"& _ 
                "_Size7 = 1 AND [Item_MinStock_Size7] IS NULL) OR ([Item_MinStock_Size7] = @Origi"& _ 
                "nal_Item_MinStock_Size7)) AND ((@IsNull_Item_MinStock_Size8 = 1 AND [Item_MinSto"& _ 
                "ck_Size8] IS NULL) OR ([Item_MinStock_Size8] = @Original_Item_MinStock_Size8)) A"& _ 
                "ND ((@IsNull_Item_MinStock_Size9 = 1 AND [Item_MinStock_Size9] IS NULL) OR ([Ite"& _ 
                "m_MinStock_Size9] = @Original_Item_MinStock_Size9)) AND ((@IsNull_Item_MinStock_"& _ 
                "Size10 = 1 AND [Item_MinStock_Size10] IS NULL) OR ([Item_MinStock_Size10] = @Ori"& _ 
                "ginal_Item_MinStock_Size10)) AND ((@IsNull_Item_MinStock_Size11 = 1 AND [Item_Mi"& _ 
                "nStock_Size11] IS NULL) OR ([Item_MinStock_Size11] = @Original_Item_MinStock_Siz"& _ 
                "e11)) AND ((@IsNull_Item_MinStock_Size12 = 1 AND [Item_MinStock_Size12] IS NULL)"& _ 
                " OR ([Item_MinStock_Size12] = @Original_Item_MinStock_Size12)) AND ((@IsNull_Ite"& _ 
                "m_MinStock_Size13 = 1 AND [Item_MinStock_Size13] IS NULL) OR ([Item_MinStock_Siz"& _ 
                "e13] = @Original_Item_MinStock_Size13)) AND ([Stamp_UserID] = @Original_Stamp_Us"& _ 
                "erID) AND ([Stamp_DateTime] = @Original_Stamp_DateTime) AND ((@IsNull_Upload_Dat"& _ 
                "eTime = 1 AND [Upload_DateTime] IS NULL) OR ([Upload_DateTime] = @Original_Uploa"& _ 
                "d_DateTime)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, Item_ID, Parent_Item_ID, Party_ID, Address_ID, Ite"& _ 
                "m_Code, Item_Desc, Item_SaleRate_Size01, Item_SaleRate_Size02, Item_SaleRate_Siz"& _ 
                "e03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Size06, Item_Sale"& _ 
                "Rate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_SaleRate_Size10, I"& _ 
                "tem_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, Item_MinStock_S"& _ 
                "ize0, Item_MinStock_Size1, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinSto"& _ 
                "ck_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Mi"& _ 
                "nStock_Size8, Item_MinStock_Size9, Item_MinStock_Size10, Item_MinStock_Size11, I"& _ 
                "tem_MinStock_Size12, Item_MinStock_Size13, Stamp_UserID, Stamp_DateTime, Upload_"& _ 
                "DateTime FROM Inv_Item WHERE (Co_ID = @Co_ID) AND (Item_ID = @Item_ID) ORDER BY "& _ 
                "Co_ID, Item_Code"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Parent_Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Parent_Item_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Party_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Party_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Address_ID", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Desc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Desc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size01", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size02", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size03", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size04", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size05", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size06", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size06", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size07", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size07", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size08", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size08", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size09", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size09", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size11", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size12", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_SaleRate_Size13", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size0", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size0", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_MinStock_Size13", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Parent_Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Parent_Item_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Party_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Party_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Address_ID", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_Code", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_Desc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Desc", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size01", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size02", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size03", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size04", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size05", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size06", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size06", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size07", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size07", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size08", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size08", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size09", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size09", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size11", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size12", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size12", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_SaleRate_Size13", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Item_SaleRate_Size13", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size0", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size0", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size0", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size0", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size11", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size12", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size12", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Item_MinStock_Size13", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size13", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_MinStock_Size13", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_MinStock_Size13", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Upload_DateTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.QuickDAL.My.MySettings.Default.Quick_ERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(16) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        Co_ID, Item_ID, Parent_Item_ID, Party_ID, Address_ID, Item_Code, It"& _ 
                "em_Desc, Item_SaleRate_Size01, Item_SaleRate_Size02, Item_SaleRate_Size03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                      Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_"& _ 
                "Size06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     Item_SaleRate_Size10, Item_SaleRate_Size11, Item_SaleRate_S"& _ 
                "ize12, Item_SaleRate_Size13, Item_MinStock_Size0, Item_MinStock_Size1, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                  Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStock_Size4,"& _ 
                " Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           Item_MinStock_Size8, Item_MinStock_Size9, Item_MinStock_Size10, Item_"& _ 
                "MinStock_Size11, Item_MinStock_Size12, Item_MinStock_Size13, Stamp_UserID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                      Stamp_DateTime, Upload_DateTime"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            Inv_Item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Co_ID, Item_Code"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM [Inv_Item] WHERE (Co_Id = @Co_Id)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Size0, Ite"& _ 
                "m_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size"& _ 
                "12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStoc"& _ 
                "k_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Min"& _ 
                "Stock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Size02, It"& _ 
                "em_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Si"& _ 
                "ze06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_Sal"& _ 
                "eRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, "& _ 
                "Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inv"& _ 
                "_Item WHERE (Co_ID = @Co_ID OR @Co_ID = 0) AND (Stamp_DateTime > @Stamp_DateTime"& _ 
                ")"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Size0, Ite"& _ 
                "m_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size"& _ 
                "12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStoc"& _ 
                "k_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Min"& _ 
                "Stock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Size02, It"& _ 
                "em_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Si"& _ 
                "ze06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_Sal"& _ 
                "eRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, "& _ 
                "Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inv"& _ 
                "_Item WHERE (Co_ID = @Co_Id) AND (Upload_DateTime > @Upload_DateTime) ORDER BY C"& _ 
                "o_ID, Item_Code"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Size0, Ite"& _ 
                "m_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size"& _ 
                "12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStoc"& _ 
                "k_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Min"& _ 
                "Stock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Size02, It"& _ 
                "em_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Si"& _ 
                "ze06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_Sal"& _ 
                "eRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, "& _ 
                "Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inv"& _ 
                "_Item WHERE (Co_ID = @Co_ID) ORDER BY Co_ID, Item_Code"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT TOP (1) Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Si"& _ 
                "ze0, Item_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinSt"& _ 
                "ock_Size12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item"& _ 
                "_MinStock_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, "& _ 
                "Item_MinStock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Si"& _ 
                "ze02, Item_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_Sal"& _ 
                "eRate_Size06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, "& _ 
                "Item_SaleRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_"& _ 
                "Size13, Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime "& _ 
                "FROM Inv_Item WHERE (Co_ID = @Co_ID) ORDER BY Co_ID, Item_Code"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT TOP (1) Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Si"& _ 
                "ze0, Item_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinSt"& _ 
                "ock_Size12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item"& _ 
                "_MinStock_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, "& _ 
                "Item_MinStock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Si"& _ 
                "ze02, Item_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_Sal"& _ 
                "eRate_Size06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, "& _ 
                "Item_SaleRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_"& _ 
                "Size13, Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime "& _ 
                "FROM Inv_Item WHERE (Co_ID = @Co_ID) ORDER BY Co_ID DESC, Item_Code DESC"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Size0, Ite"& _ 
                "m_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size"& _ 
                "12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStoc"& _ 
                "k_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Min"& _ 
                "Stock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Size02, It"& _ 
                "em_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Si"& _ 
                "ze06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_Sal"& _ 
                "eRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, "& _ 
                "Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inv"& _ 
                "_Item WHERE (Co_ID = @Co_ID) ORDER BY Item_ID"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT TOP (1) Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Si"& _ 
                "ze0, Item_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinSt"& _ 
                "ock_Size12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item"& _ 
                "_MinStock_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, "& _ 
                "Item_MinStock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Si"& _ 
                "ze02, Item_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_Sal"& _ 
                "eRate_Size06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, "& _ 
                "Item_SaleRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_"& _ 
                "Size13, Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime "& _ 
                "FROM Inv_Item WHERE (Co_ID = @Co_ID) AND (Item_Code > @Item_Code) ORDER BY Co_ID"& _ 
                ", Item_Code"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Code", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "SELECT TOP (1) Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Si"& _ 
                "ze0, Item_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinSt"& _ 
                "ock_Size12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item"& _ 
                "_MinStock_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, "& _ 
                "Item_MinStock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Si"& _ 
                "ze02, Item_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_Sal"& _ 
                "eRate_Size06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, "& _ 
                "Item_SaleRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_"& _ 
                "Size13, Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime "& _ 
                "FROM Inv_Item WHERE (Co_ID = @Co_ID) AND (Item_Code < @Item_Code) ORDER BY Co_ID"& _ 
                " DESC, Item_Code DESC"
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Code", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(10).Connection = Me.Connection
            Me._commandCollection(10).CommandText = "SELECT Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Size0, Ite"& _ 
                "m_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size"& _ 
                "12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStoc"& _ 
                "k_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Min"& _ 
                "Stock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Size02, It"& _ 
                "em_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Si"& _ 
                "ze06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_Sal"& _ 
                "eRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, "& _ 
                "Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inv"& _ 
                "_Item WHERE (Co_ID = @Co_ID) AND (Item_ID = @Item_ID)"
            Me._commandCollection(10).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(11).Connection = Me.Connection
            Me._commandCollection(11).CommandText = "SELECT Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Size0, Ite"& _ 
                "m_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size"& _ 
                "12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStoc"& _ 
                "k_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Min"& _ 
                "Stock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Size02, It"& _ 
                "em_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Si"& _ 
                "ze06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_Sal"& _ 
                "eRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, "& _ 
                "Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inv"& _ 
                "_Item WHERE (Item_Code = @Item_Code) AND (Co_ID = @Co_ID)"
            Me._commandCollection(11).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Code", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(12).Connection = Me.Connection
            Me._commandCollection(12).CommandText = "SELECT Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Size0, Ite"& _ 
                "m_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size"& _ 
                "12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStoc"& _ 
                "k_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Min"& _ 
                "Stock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Size02, It"& _ 
                "em_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Si"& _ 
                "ze06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_Sal"& _ 
                "eRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, "& _ 
                "Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inv"& _ 
                "_Item WHERE (Co_ID = @Co_ID) AND (Item_ID = @Item_ID)"
            Me._commandCollection(12).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(13).Connection = Me.Connection
            Me._commandCollection(13).CommandText = "SELECT Item_Desc FROM Inv_Item WHERE (Co_ID = @Co_ID) AND (Item_Code = @Item_Code"& _ 
                ")"
            Me._commandCollection(13).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Code", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(14) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(14).Connection = Me.Connection
            Me._commandCollection(14).CommandText = "SELECT     ISNULL(MAX(Item_ID), 0) + 1 AS NewID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Inv_Item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE    "& _ 
                " (Co_ID = @Co_ID)"
            Me._commandCollection(14).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(15).Connection = Me.Connection
            Me._commandCollection(15).CommandText = "SELECT        Inv_Item.Co_ID, Inv_Item.Item_ID, Inv_Item.Parent_Item_ID, Inv_Item"& _ 
                ".Party_ID, Inv_Item.Address_ID, Inv_Item.Item_Code, Inv_Item.Item_Desc, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                   Inv_Item.Item_SaleRate_Size01, Inv_Item.Item_SaleRate_Size02,"& _ 
                " Inv_Item.Item_SaleRate_Size03, Inv_Item.Item_SaleRate_Size04, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          Inv_Item.Item_SaleRate_Size05, Inv_Item.Item_SaleRate_Size06, Inv_Item"& _ 
                ".Item_SaleRate_Size07, Inv_Item.Item_SaleRate_Size08, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " Inv_Item.Item_SaleRate_Size09, Inv_Item.Item_SaleRate_Size10, Inv_Item.Item_Sal"& _ 
                "eRate_Size11, Inv_Item.Item_SaleRate_Size12, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inv_Item"& _ 
                ".Item_SaleRate_Size13, SUM(Inventory_Detail.Inventory_Qty_Size01) AS Item_MinSto"& _ 
                "ck_Size0, SUM(Inventory_Detail.Inventory_Qty_Size02) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "AS Item_MinStock_Size1, SUM(Inventory_Detail.Inventory_Qty_Size03) AS Item_MinSt"& _ 
                "ock_Size2, SUM(Inventory_Detail.Inventory_Qty_Size04) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " AS Item_MinStock_Size3, SUM(Inventory_Detail.Inventory_Qty_Size05) AS Item_MinS"& _ 
                "tock_Size4, SUM(Inventory_Detail.Inventory_Qty_Size06) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  AS Item_MinStock_Size5, SUM(Inventory_Detail.Inventory_Qty_Size07) AS Item_Min"& _ 
                "Stock_Size6, SUM(Inventory_Detail.Inventory_Qty_Size08) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   AS Item_MinStock_Size7, SUM(Inventory_Detail.Inventory_Qty_Size09) AS Item_Mi"& _ 
                "nStock_Size8, SUM(Inventory_Detail.Inventory_Qty_Size10) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    AS Item_MinStock_Size9, SUM(Inventory_Detail.Inventory_Qty_Size11) AS Item_M"& _ 
                "inStock_Size10, SUM(Inventory_Detail.Inventory_Qty_Size12) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      AS Item_MinStock_Size11, SUM(Inventory_Detail.Inventory_Qty_Size13) AS Ite"& _ 
                "m_MinStock_Size12, SUM(Inv_Item.Item_MinStock_Size13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " AS Item_MinStock_Size13, Inv_Item.Stamp_UserID, Inv_Item.Stamp_DateTime, Inv_It"& _ 
                "em.Upload_DateTime"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            Inv_Item LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       Inventory_Detail ON Inv_Item.Co_ID = Inventory_Detail.Co_ID AND Inv_Item."& _ 
                "Item_ID = Inventory_Detail.Item_ID LEFT JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inventory"& _ 
                " ON Inventory_Detail.Co_ID = Inventory.Co_ID AND Inventory_Detail.Inventory_ID ="& _ 
                " Inventory.Inventory_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (Inv_Item.Co_ID = @Co_ID) AND (Inv_Item.It"& _ 
                "em_Code >= @FromItem_Code OR @FromItem_Code = '') AND (Inv_Item.Item_Code <= @To"& _ 
                "Item_Code OR @ToItem_Code = '') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"AND (Inventory.Inventory_Date >= @FromDate OR"& _ 
                " @FromDate IS NULL) AND (Inventory.Inventory_Date <= @ToDate OR @ToDate IS NULL)"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"AND (LEN(Inv_Item.Item_Code) = 5)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY Inv_Item.Co_ID, Inv_Item.Item_ID"& _ 
                ", Inv_Item.Parent_Item_ID, Inv_Item.Party_ID, Inv_Item.Address_ID, Inv_Item.Item"& _ 
                "_Code, Inv_Item.Item_Desc, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inv_Item.Item_SaleRate_Siz"& _ 
                "e01, Inv_Item.Item_SaleRate_Size02, Inv_Item.Item_SaleRate_Size03, Inv_Item.Item"& _ 
                "_SaleRate_Size04, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inv_Item.Item_SaleRate_Size05, Inv_"& _ 
                "Item.Item_SaleRate_Size06, Inv_Item.Item_SaleRate_Size07, Inv_Item.Item_SaleRate"& _ 
                "_Size08, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inv_Item.Item_SaleRate_Size09, Inv_Item.Item"& _ 
                "_SaleRate_Size10, Inv_Item.Item_SaleRate_Size11, Inv_Item.Item_SaleRate_Size12, "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inv_Item.Item_SaleRate_Size13, Inv_Item.Stamp_UserID,"& _ 
                " Inv_Item.Stamp_DateTime, Inv_Item.Upload_DateTime"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Inv_Item.Co_ID, Inv"& _ 
                "_Item.Item_Code"
            Me._commandCollection(15).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FromItem_Code", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToItem_Code", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FromDate", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToDate", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(16) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(16).Connection = Me.Connection
            Me._commandCollection(16).CommandText = "SELECT Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Size0, Ite"& _ 
                "m_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size"& _ 
                "12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStoc"& _ 
                "k_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Min"& _ 
                "Stock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Size02, It"& _ 
                "em_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Si"& _ 
                "ze06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_Sal"& _ 
                "eRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, "& _ 
                "Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM"& _ 
                " Inv_Item "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE "&Global.Microsoft.VisualBasic.ChrW(9)&"Co_ID = @Co_ID "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"AND (Item_Code >= @FromItem_Code OR @From"& _ 
                "Item_Code = '') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"AND (Item_Code <= @ToItem_Code OR @ToItem_Code = '')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"AND (L"& _ 
                "EN(Item_Code) = 5)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Co_ID, Item_Code"
            Me._commandCollection(16).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FromItem_Code", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToItem_Code", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillAll(ByVal dataTable As QuickInventoryDataSet.ItemDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetAll() As QuickInventoryDataSet.ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As QuickInventoryDataSet.ItemDataTable = New QuickInventoryDataSet.ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillAllUpdatedByCoIDDateTime(ByVal dataTable As QuickInventoryDataSet.ItemDataTable, ByVal Co_ID As Integer, ByVal Stamp_DateTime As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Stamp_DateTime,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllUpdatedByCoIDDateTime(ByVal Co_ID As Integer, ByVal Stamp_DateTime As Date) As QuickInventoryDataSet.ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Stamp_DateTime,Date)
            Dim dataTable As QuickInventoryDataSet.ItemDataTable = New QuickInventoryDataSet.ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillAllUploadedByCoIDDateTime(ByVal dataTable As QuickInventoryDataSet.ItemDataTable, ByVal Co_Id As Integer, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Integer)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllUploadedByCoIDDateTime(ByVal Co_Id As Integer, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As QuickInventoryDataSet.ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Integer)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As QuickInventoryDataSet.ItemDataTable = New QuickInventoryDataSet.ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCoID(ByVal dataTable As QuickInventoryDataSet.ItemDataTable, ByVal Co_ID As Short) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByCoID(ByVal Co_ID As Short) As QuickInventoryDataSet.ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            Dim dataTable As QuickInventoryDataSet.ItemDataTable = New QuickInventoryDataSet.ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillFirstByCoID(ByVal dataTable As QuickInventoryDataSet.ItemDataTable, ByVal Co_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetFirstByCoID(ByVal Co_ID As Integer) As QuickInventoryDataSet.ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.ItemDataTable = New QuickInventoryDataSet.ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillLastByCoID(ByVal dataTable As QuickInventoryDataSet.ItemDataTable, ByVal Co_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetLastByCoID(ByVal Co_ID As Integer) As QuickInventoryDataSet.ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.ItemDataTable = New QuickInventoryDataSet.ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillMinimumStockLevel(ByVal dataTable As QuickInventoryDataSet.ItemDataTable, ByVal Co_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetMinimumStockLevel(ByVal Co_ID As Integer) As QuickInventoryDataSet.ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.ItemDataTable = New QuickInventoryDataSet.ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillNextByCoIDItemCode(ByVal dataTable As QuickInventoryDataSet.ItemDataTable, ByVal Co_ID As Integer, ByVal Item_Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            If (Item_Code Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Item_Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetNextByCoIDItemCode(ByVal Co_ID As Integer, ByVal Item_Code As String) As QuickInventoryDataSet.ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            If (Item_Code Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Item_Code,String)
            End If
            Dim dataTable As QuickInventoryDataSet.ItemDataTable = New QuickInventoryDataSet.ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillPreviousByCoIDItemCode(ByVal dataTable As QuickInventoryDataSet.ItemDataTable, ByVal Co_ID As Integer, ByVal Item_Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            If (Item_Code Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Item_Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetPreviousByCoIDItemCode(ByVal Co_ID As Integer, ByVal Item_Code As String) As QuickInventoryDataSet.ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            If (Item_Code Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Item_Code,String)
            End If
            Dim dataTable As QuickInventoryDataSet.ItemDataTable = New QuickInventoryDataSet.ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByCoIDAndItemID(ByVal Co_ID As Integer, ByVal Item_ID As Integer) As QuickInventoryDataSet.ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(10)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Item_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.ItemDataTable = New QuickInventoryDataSet.ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByItemCodeAndCoID(ByVal Item_Code As String, ByVal Co_ID As Integer) As QuickInventoryDataSet.ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(11)
            If (Item_Code Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Item_Code,String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Co_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.ItemDataTable = New QuickInventoryDataSet.ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetSaleInMinStockByCriteria(ByVal Co_ID As Short, ByVal FromItem_Code As String, ByVal ToItem_Code As String, ByVal FromDate As Global.System.Nullable(Of Date), ByVal ToDate As Global.System.Nullable(Of Date)) As QuickInventoryDataSet.ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(15)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            If (FromItem_Code Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FromItem_Code,String)
            End If
            If (ToItem_Code Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ToItem_Code,String)
            End If
            If (FromDate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FromDate.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ToDate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(ToDate.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As QuickInventoryDataSet.ItemDataTable = New QuickInventoryDataSet.ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetWithoutCategoriesByCoIDItemCode(ByVal Co_ID As Short, ByVal FromItem_Code As String, ByVal ToItem_Code As String) As QuickInventoryDataSet.ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(16)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            If (FromItem_Code Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FromItem_Code,String)
            End If
            If (ToItem_Code Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ToItem_Code,String)
            End If
            Dim dataTable As QuickInventoryDataSet.ItemDataTable = New QuickInventoryDataSet.ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As QuickInventoryDataSet.ItemDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As QuickInventoryDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Item")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Item_ID As Integer,  _
                    ByVal Original_Parent_Item_ID As Integer,  _
                    ByVal Original_Party_ID As Integer,  _
                    ByVal Original_Address_ID As Long,  _
                    ByVal Original_Item_Code As String,  _
                    ByVal Original_Item_Desc As String,  _
                    ByVal Original_Item_SaleRate_Size01 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size02 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size03 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size04 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size05 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size06 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size07 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size08 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size09 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size10 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size11 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size12 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size13 As Decimal,  _
                    ByVal Original_Item_MinStock_Size0 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size1 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size2 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size3 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size4 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size5 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size6 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size7 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size8 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size9 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size10 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size11 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size12 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size13 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Stamp_UserID As Integer,  _
                    ByVal Original_Stamp_DateTime As Date,  _
                    ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Co_ID,Short)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Item_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Parent_Item_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Party_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Address_ID,Long)
            If (Original_Item_Code Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Item_Code,String)
            End If
            If (Original_Item_Desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Item_Desc")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_Item_Desc,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Item_SaleRate_Size01,Decimal)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_Item_SaleRate_Size02,Decimal)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Item_SaleRate_Size03,Decimal)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_Item_SaleRate_Size04,Decimal)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Item_SaleRate_Size05,Decimal)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_Item_SaleRate_Size06,Decimal)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Item_SaleRate_Size07,Decimal)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_Item_SaleRate_Size08,Decimal)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Item_SaleRate_Size09,Decimal)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_Item_SaleRate_Size10,Decimal)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_Item_SaleRate_Size11,Decimal)
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_Item_SaleRate_Size12,Decimal)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_Item_SaleRate_Size13,Decimal)
            If (Original_Item_MinStock_Size0.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_Item_MinStock_Size0.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_Item_MinStock_Size1.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_Item_MinStock_Size2.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size3.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_Item_MinStock_Size3.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size4.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_Item_MinStock_Size4.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size5.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_Item_MinStock_Size5.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size6.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_Item_MinStock_Size6.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size7.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_Item_MinStock_Size7.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size8.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_Item_MinStock_Size8.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size9.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_Item_MinStock_Size9.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size10.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_Item_MinStock_Size10.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size11.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_Item_MinStock_Size11.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size12.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_Item_MinStock_Size12.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size13.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_Item_MinStock_Size13.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_Stamp_UserID,Integer)
            Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_Stamp_DateTime,Date)
            If (Original_Upload_DateTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_Upload_DateTime.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Co_ID As Short,  _
                    ByVal Item_ID As Integer,  _
                    ByVal Parent_Item_ID As Integer,  _
                    ByVal Party_ID As Integer,  _
                    ByVal Address_ID As Long,  _
                    ByVal Item_Code As String,  _
                    ByVal Item_Desc As String,  _
                    ByVal Item_SaleRate_Size01 As Decimal,  _
                    ByVal Item_SaleRate_Size02 As Decimal,  _
                    ByVal Item_SaleRate_Size03 As Decimal,  _
                    ByVal Item_SaleRate_Size04 As Decimal,  _
                    ByVal Item_SaleRate_Size05 As Decimal,  _
                    ByVal Item_SaleRate_Size06 As Decimal,  _
                    ByVal Item_SaleRate_Size07 As Decimal,  _
                    ByVal Item_SaleRate_Size08 As Decimal,  _
                    ByVal Item_SaleRate_Size09 As Decimal,  _
                    ByVal Item_SaleRate_Size10 As Decimal,  _
                    ByVal Item_SaleRate_Size11 As Decimal,  _
                    ByVal Item_SaleRate_Size12 As Decimal,  _
                    ByVal Item_SaleRate_Size13 As Decimal,  _
                    ByVal Item_MinStock_Size0 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size1 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size2 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size3 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size4 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size5 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size6 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size7 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size8 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size9 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size10 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size11 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size12 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size13 As Global.System.Nullable(Of Integer),  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Item_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Parent_Item_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(Party_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(Address_ID,Long)
            If (Item_Code Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Item_Code,String)
            End If
            If (Item_Desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Item_Desc")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Item_Desc,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(Item_SaleRate_Size01,Decimal)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(Item_SaleRate_Size02,Decimal)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(Item_SaleRate_Size03,Decimal)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(Item_SaleRate_Size04,Decimal)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(Item_SaleRate_Size05,Decimal)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(Item_SaleRate_Size06,Decimal)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(Item_SaleRate_Size07,Decimal)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(Item_SaleRate_Size08,Decimal)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(Item_SaleRate_Size09,Decimal)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(Item_SaleRate_Size10,Decimal)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(Item_SaleRate_Size11,Decimal)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(Item_SaleRate_Size12,Decimal)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(Item_SaleRate_Size13,Decimal)
            If (Item_MinStock_Size0.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Item_MinStock_Size0.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Item_MinStock_Size1.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(Item_MinStock_Size2.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Item_MinStock_Size3.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Item_MinStock_Size4.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Item_MinStock_Size5.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size6.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Item_MinStock_Size6.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Item_MinStock_Size7.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size8.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(Item_MinStock_Size8.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size9.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(Item_MinStock_Size9.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Item_MinStock_Size10.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size11.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Item_MinStock_Size11.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size12.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Item_MinStock_Size12.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size13.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(Item_MinStock_Size13.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(34).Value = CType(Stamp_UserID,Integer)
            Me.Adapter.InsertCommand.Parameters(35).Value = CType(Stamp_DateTime,Date)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Co_ID As Short,  _
                    ByVal Item_ID As Integer,  _
                    ByVal Parent_Item_ID As Integer,  _
                    ByVal Party_ID As Integer,  _
                    ByVal Address_ID As Long,  _
                    ByVal Item_Code As String,  _
                    ByVal Item_Desc As String,  _
                    ByVal Item_SaleRate_Size01 As Decimal,  _
                    ByVal Item_SaleRate_Size02 As Decimal,  _
                    ByVal Item_SaleRate_Size03 As Decimal,  _
                    ByVal Item_SaleRate_Size04 As Decimal,  _
                    ByVal Item_SaleRate_Size05 As Decimal,  _
                    ByVal Item_SaleRate_Size06 As Decimal,  _
                    ByVal Item_SaleRate_Size07 As Decimal,  _
                    ByVal Item_SaleRate_Size08 As Decimal,  _
                    ByVal Item_SaleRate_Size09 As Decimal,  _
                    ByVal Item_SaleRate_Size10 As Decimal,  _
                    ByVal Item_SaleRate_Size11 As Decimal,  _
                    ByVal Item_SaleRate_Size12 As Decimal,  _
                    ByVal Item_SaleRate_Size13 As Decimal,  _
                    ByVal Item_MinStock_Size0 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size1 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size2 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size3 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size4 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size5 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size6 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size7 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size8 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size9 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size10 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size11 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size12 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size13 As Global.System.Nullable(Of Integer),  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Item_ID As Integer,  _
                    ByVal Original_Parent_Item_ID As Integer,  _
                    ByVal Original_Party_ID As Integer,  _
                    ByVal Original_Address_ID As Long,  _
                    ByVal Original_Item_Code As String,  _
                    ByVal Original_Item_Desc As String,  _
                    ByVal Original_Item_SaleRate_Size01 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size02 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size03 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size04 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size05 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size06 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size07 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size08 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size09 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size10 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size11 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size12 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size13 As Decimal,  _
                    ByVal Original_Item_MinStock_Size0 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size1 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size2 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size3 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size4 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size5 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size6 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size7 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size8 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size9 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size10 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size11 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size12 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size13 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Stamp_UserID As Integer,  _
                    ByVal Original_Stamp_DateTime As Date,  _
                    ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Item_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Parent_Item_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Party_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Address_ID,Long)
            If (Item_Code Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Item_Code,String)
            End If
            If (Item_Desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Item_Desc")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Item_Desc,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Item_SaleRate_Size01,Decimal)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Item_SaleRate_Size02,Decimal)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Item_SaleRate_Size03,Decimal)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Item_SaleRate_Size04,Decimal)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Item_SaleRate_Size05,Decimal)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Item_SaleRate_Size06,Decimal)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Item_SaleRate_Size07,Decimal)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Item_SaleRate_Size08,Decimal)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Item_SaleRate_Size09,Decimal)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Item_SaleRate_Size10,Decimal)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Item_SaleRate_Size11,Decimal)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Item_SaleRate_Size12,Decimal)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Item_SaleRate_Size13,Decimal)
            If (Item_MinStock_Size0.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Item_MinStock_Size0.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Item_MinStock_Size1.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Item_MinStock_Size2.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Item_MinStock_Size3.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Item_MinStock_Size4.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Item_MinStock_Size5.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size6.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Item_MinStock_Size6.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size7.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Item_MinStock_Size7.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size8.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Item_MinStock_Size8.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size9.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Item_MinStock_Size9.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size10.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Item_MinStock_Size10.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size11.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Item_MinStock_Size11.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size12.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Item_MinStock_Size12.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Item_MinStock_Size13.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Item_MinStock_Size13.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Stamp_UserID,Integer)
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Stamp_DateTime,Date)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_Item_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_Parent_Item_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_Party_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_Address_ID,Long)
            If (Original_Item_Code Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_Item_Code,String)
            End If
            If (Original_Item_Desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Item_Desc")
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_Item_Desc,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_Item_SaleRate_Size01,Decimal)
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_Item_SaleRate_Size02,Decimal)
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_Item_SaleRate_Size03,Decimal)
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_Item_SaleRate_Size04,Decimal)
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_Item_SaleRate_Size05,Decimal)
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_Item_SaleRate_Size06,Decimal)
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_Item_SaleRate_Size07,Decimal)
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_Item_SaleRate_Size08,Decimal)
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_Item_SaleRate_Size09,Decimal)
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_Item_SaleRate_Size10,Decimal)
            Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_Item_SaleRate_Size11,Decimal)
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_Item_SaleRate_Size12,Decimal)
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_Item_SaleRate_Size13,Decimal)
            If (Original_Item_MinStock_Size0.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_Item_MinStock_Size0.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_Item_MinStock_Size1.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_Item_MinStock_Size2.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_Item_MinStock_Size3.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_Item_MinStock_Size4.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_Item_MinStock_Size5.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size6.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_Item_MinStock_Size6.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size7.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_Item_MinStock_Size7.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size8.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_Item_MinStock_Size8.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size9.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_Item_MinStock_Size9.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size10.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_Item_MinStock_Size10.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size11.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_Item_MinStock_Size11.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size12.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_Item_MinStock_Size12.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_Item_MinStock_Size13.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_Item_MinStock_Size13.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_Stamp_UserID,Integer)
            Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_Stamp_DateTime,Date)
            If (Original_Upload_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_Upload_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Parent_Item_ID As Integer,  _
                    ByVal Party_ID As Integer,  _
                    ByVal Address_ID As Long,  _
                    ByVal Item_Code As String,  _
                    ByVal Item_Desc As String,  _
                    ByVal Item_SaleRate_Size01 As Decimal,  _
                    ByVal Item_SaleRate_Size02 As Decimal,  _
                    ByVal Item_SaleRate_Size03 As Decimal,  _
                    ByVal Item_SaleRate_Size04 As Decimal,  _
                    ByVal Item_SaleRate_Size05 As Decimal,  _
                    ByVal Item_SaleRate_Size06 As Decimal,  _
                    ByVal Item_SaleRate_Size07 As Decimal,  _
                    ByVal Item_SaleRate_Size08 As Decimal,  _
                    ByVal Item_SaleRate_Size09 As Decimal,  _
                    ByVal Item_SaleRate_Size10 As Decimal,  _
                    ByVal Item_SaleRate_Size11 As Decimal,  _
                    ByVal Item_SaleRate_Size12 As Decimal,  _
                    ByVal Item_SaleRate_Size13 As Decimal,  _
                    ByVal Item_MinStock_Size0 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size1 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size2 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size3 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size4 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size5 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size6 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size7 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size8 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size9 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size10 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size11 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size12 As Global.System.Nullable(Of Integer),  _
                    ByVal Item_MinStock_Size13 As Global.System.Nullable(Of Integer),  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Item_ID As Integer,  _
                    ByVal Original_Parent_Item_ID As Integer,  _
                    ByVal Original_Party_ID As Integer,  _
                    ByVal Original_Address_ID As Long,  _
                    ByVal Original_Item_Code As String,  _
                    ByVal Original_Item_Desc As String,  _
                    ByVal Original_Item_SaleRate_Size01 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size02 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size03 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size04 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size05 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size06 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size07 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size08 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size09 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size10 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size11 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size12 As Decimal,  _
                    ByVal Original_Item_SaleRate_Size13 As Decimal,  _
                    ByVal Original_Item_MinStock_Size0 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size1 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size2 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size3 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size4 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size5 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size6 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size7 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size8 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size9 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size10 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size11 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size12 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_MinStock_Size13 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Stamp_UserID As Integer,  _
                    ByVal Original_Stamp_DateTime As Date,  _
                    ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_Co_ID, Original_Item_ID, Parent_Item_ID, Party_ID, Address_ID, Item_Code, Item_Desc, Item_SaleRate_Size01, Item_SaleRate_Size02, Item_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Size06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_SaleRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, Item_MinStock_Size0, Item_MinStock_Size1, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStock_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_MinStock_Size8, Item_MinStock_Size9, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size12, Item_MinStock_Size13, Stamp_UserID, Stamp_DateTime, Upload_DateTime, Original_Co_ID, Original_Item_ID, Original_Parent_Item_ID, Original_Party_ID, Original_Address_ID, Original_Item_Code, Original_Item_Desc, Original_Item_SaleRate_Size01, Original_Item_SaleRate_Size02, Original_Item_SaleRate_Size03, Original_Item_SaleRate_Size04, Original_Item_SaleRate_Size05, Original_Item_SaleRate_Size06, Original_Item_SaleRate_Size07, Original_Item_SaleRate_Size08, Original_Item_SaleRate_Size09, Original_Item_SaleRate_Size10, Original_Item_SaleRate_Size11, Original_Item_SaleRate_Size12, Original_Item_SaleRate_Size13, Original_Item_MinStock_Size0, Original_Item_MinStock_Size1, Original_Item_MinStock_Size2, Original_Item_MinStock_Size3, Original_Item_MinStock_Size4, Original_Item_MinStock_Size5, Original_Item_MinStock_Size6, Original_Item_MinStock_Size7, Original_Item_MinStock_Size8, Original_Item_MinStock_Size9, Original_Item_MinStock_Size10, Original_Item_MinStock_Size11, Original_Item_MinStock_Size12, Original_Item_MinStock_Size13, Original_Stamp_UserID, Original_Stamp_DateTime, Original_Upload_DateTime)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteAll(ByVal Co_Id As Short) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(Co_Id,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetDescByCoIDAndItemID(ByVal Co_ID As Integer, ByVal Item_ID As Integer) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(12)
            command.Parameters(0).Value = CType(Co_ID,Integer)
            command.Parameters(1).Value = CType(Item_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetItemDescByCoIdItemCode(ByVal Co_ID As Integer, ByVal Item_Code As String) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(13)
            command.Parameters(0).Value = CType(Co_ID,Integer)
            If (Item_Code Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(Item_Code,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetNewItemIDByCoID(ByVal Co_ID As Integer) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(14)
            command.Parameters(0).Value = CType(Co_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class InventoryTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Inventory"
            tableMapping.ColumnMappings.Add("Co_ID", "Co_ID")
            tableMapping.ColumnMappings.Add("Party_ID", "Party_ID")
            tableMapping.ColumnMappings.Add("Payment_Mode", "Payment_Mode")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("Stamp_DateTime", "Stamp_DateTime")
            tableMapping.ColumnMappings.Add("Stamp_UserID", "Stamp_UserID")
            tableMapping.ColumnMappings.Add("Inventory_ID", "Inventory_ID")
            tableMapping.ColumnMappings.Add("Inventory_Date", "Inventory_Date")
            tableMapping.ColumnMappings.Add("DocumentType_ID", "DocumentType_ID")
            tableMapping.ColumnMappings.Add("RecordStatus_ID", "RecordStatus_ID")
            tableMapping.ColumnMappings.Add("Upload_DateTime", "Upload_DateTime")
            tableMapping.ColumnMappings.Add("Category_Party_ID", "Category_Party_ID")
            tableMapping.ColumnMappings.Add("LogisticService", "LogisticService")
            tableMapping.ColumnMappings.Add("Discount", "Discount")
            tableMapping.ColumnMappings.Add("SalesTax", "SalesTax")
            tableMapping.ColumnMappings.Add("Source_DocumentType_ID", "Source_DocumentType_ID")
            tableMapping.ColumnMappings.Add("Source_Document_No", "Source_Document_No")
            tableMapping.ColumnMappings.Add("Source_Document_Co_ID", "Source_Document_Co_ID")
            tableMapping.ColumnMappings.Add("Inventory_No", "Inventory_No")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Inventory] WHERE (([Co_ID] = @Original_Co_ID) AND ([Inventory_ID] = "& _ 
                "@Original_Inventory_ID))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Inventory] ([Co_ID], [Inventory_ID], [Inventory_No], [DocumentType_I"& _ 
                "D], [Inventory_Date], [Category_Party_ID], [Party_ID], [Payment_Mode], [Remarks]"& _ 
                ", [Stamp_UserID], [Stamp_DateTime], [RecordStatus_ID], [Upload_DateTime], [Logis"& _ 
                "ticService], [Discount], [SalesTax], [Source_DocumentType_ID], [Source_Document_"& _ 
                "No], [Source_Document_Co_ID]) VALUES (@Co_ID, @Inventory_ID, @Inventory_No, @Doc"& _ 
                "umentType_ID, @Inventory_Date, @Category_Party_ID, @Party_ID, @Payment_Mode, @Re"& _ 
                "marks, @Stamp_UserID, @Stamp_DateTime, @RecordStatus_ID, @Upload_DateTime, @Logi"& _ 
                "sticService, @Discount, @SalesTax, @Source_DocumentType_ID, @Source_Document_No,"& _ 
                " @Source_Document_Co_ID);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, Inventory_ID, Inventory_No, DocumentTyp"& _ 
                "e_ID, Inventory_Date, Category_Party_ID, Party_ID, Payment_Mode, Remarks, Stamp_"& _ 
                "UserID, Stamp_DateTime, RecordStatus_ID, Upload_DateTime, LogisticService, Disco"& _ 
                "unt, SalesTax, Source_DocumentType_ID, Source_Document_No, Source_Document_Co_ID"& _ 
                " FROM Inventory WHERE (Co_ID = @Co_ID) AND (Inventory_ID = @Inventory_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_No", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Category_Party_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category_Party_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Party_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Party_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Payment_Mode", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Payment_Mode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordStatus_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordStatus_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LogisticService", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LogisticService", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalesTax", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesTax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Document_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Document_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Document_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Document_Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Inventory] SET [Co_ID] = @Co_ID, [Inventory_ID] = @Inventory_ID, [Invento"& _ 
                "ry_No] = @Inventory_No, [DocumentType_ID] = @DocumentType_ID, [Inventory_Date] ="& _ 
                " @Inventory_Date, [Category_Party_ID] = @Category_Party_ID, [Party_ID] = @Party_"& _ 
                "ID, [Payment_Mode] = @Payment_Mode, [Remarks] = @Remarks, [Stamp_UserID] = @Stam"& _ 
                "p_UserID, [Stamp_DateTime] = @Stamp_DateTime, [RecordStatus_ID] = @RecordStatus_"& _ 
                "ID, [Upload_DateTime] = @Upload_DateTime, [LogisticService] = @LogisticService, "& _ 
                "[Discount] = @Discount, [SalesTax] = @SalesTax, [Source_DocumentType_ID] = @Sour"& _ 
                "ce_DocumentType_ID, [Source_Document_No] = @Source_Document_No, [Source_Document"& _ 
                "_Co_ID] = @Source_Document_Co_ID WHERE (([Co_ID] = @Original_Co_ID) AND ([Invent"& _ 
                "ory_ID] = @Original_Inventory_ID));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, Inventory_ID, Inventory_No, D"& _ 
                "ocumentType_ID, Inventory_Date, Category_Party_ID, Party_ID, Payment_Mode, Remar"& _ 
                "ks, Stamp_UserID, Stamp_DateTime, RecordStatus_ID, Upload_DateTime, LogisticServ"& _ 
                "ice, Discount, SalesTax, Source_DocumentType_ID, Source_Document_No, Source_Docu"& _ 
                "ment_Co_ID FROM Inventory WHERE (Co_ID = @Co_ID) AND (Inventory_ID = @Inventory_"& _ 
                "ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_No", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Category_Party_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category_Party_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Party_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Party_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Payment_Mode", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Payment_Mode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordStatus_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordStatus_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LogisticService", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LogisticService", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalesTax", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesTax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Document_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Document_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Document_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Document_Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.QuickDAL.My.MySettings.Default.Quick_ERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(11) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Co_ID, Inventory_ID, Inventory_No, DocumentType_ID, Inventory_Date, Ca"& _ 
                "tegory_Party_ID, Party_ID, Payment_Mode, Remarks, Stamp_UserID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "        Stamp_DateTime, RecordStatus_ID, Upload_DateTime, LogisticService, Disco"& _ 
                "unt, SalesTax, Source_DocumentType_ID, Source_Document_No, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "   Source_Document_Co_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Inventory"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM [Inventory]  WHERE (Co_Id = @Co_Id)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT Category_Party_ID, Co_ID, Discount, DocumentType_ID, Inventory_Date, Inven"& _ 
                "tory_ID, Inventory_No, LogisticService, Party_ID, Payment_Mode, RecordStatus_ID,"& _ 
                " Remarks, SalesTax, Source_DocumentType_ID, Source_Document_Co_ID, Source_Docume"& _ 
                "nt_No, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inventory WHERE (Co_ID"& _ 
                " = @Co_ID OR @Co_ID = 0) AND (Stamp_DateTime > @Stamp_DateTime)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT Category_Party_ID, Co_ID, Discount, DocumentType_ID, Inventory_Date, Inven"& _ 
                "tory_ID, Inventory_No, LogisticService, Party_ID, Payment_Mode, RecordStatus_ID,"& _ 
                " Remarks, SalesTax, Source_DocumentType_ID, Source_Document_Co_ID, Source_Docume"& _ 
                "nt_No, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inventory WHERE (Co_ID"& _ 
                " = @Co_Id) AND (Upload_DateTime > @Upload_DateTime)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT Category_Party_ID, Co_ID, Discount, DocumentType_ID, Inventory_Date, Inven"& _ 
                "tory_ID, Inventory_No, LogisticService, Party_ID, Payment_Mode, RecordStatus_ID,"& _ 
                " Remarks, SalesTax, Source_DocumentType_ID, Source_Document_Co_ID, Source_Docume"& _ 
                "nt_No, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inventory WHERE (Co_ID"& _ 
                " = @Co_ID) AND (Inventory_ID = @Inventory_ID)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT TOP (1) Category_Party_ID, Co_ID, Discount, DocumentType_ID, Inventory_Dat"& _ 
                "e, Inventory_ID, Inventory_No, LogisticService, Party_ID, Payment_Mode, RecordSt"& _ 
                "atus_ID, Remarks, SalesTax, Source_DocumentType_ID, Source_Document_Co_ID, Sourc"& _ 
                "e_Document_No, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inventory WHER"& _ 
                "E (RecordStatus_ID <> 4) AND (Co_ID = @Co_ID) AND (DocumentType_ID = @DocumentTy"& _ 
                "pe_ID)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT TOP (1) Category_Party_ID, Co_ID, Discount, DocumentType_ID, Inventory_Dat"& _ 
                "e, Inventory_ID, Inventory_No, LogisticService, Party_ID, Payment_Mode, RecordSt"& _ 
                "atus_ID, Remarks, SalesTax, Source_DocumentType_ID, Source_Document_Co_ID, Sourc"& _ 
                "e_Document_No, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inventory WHER"& _ 
                "E (RecordStatus_ID <> 4) AND (Co_ID = @Co_ID) AND (DocumentType_ID = @DocumentTy"& _ 
                "pe_ID) ORDER BY Inventory_ID DESC"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT MAX(Inventory_No) AS Inventory_No"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM Inventory"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE Co_ID = @Co_ID AN"& _ 
                "D DocumentType_ID = @DocumentType_ID AND Inventory_No LIKE @LikeOperatorPattern"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LikeOperatorPattern", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT     ISNULL(MAX(Inventory_ID), 0) + 1 AS NewID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Inventory"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHE"& _ 
                "RE     (Co_ID = @Co_ID)"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "SELECT ISNULL(MAX(CONVERT(INT, Inventory_No)), 0) + 1 FROM Inventory WHERE Co_ID "& _ 
                "= @Co_ID AND DocumentType_ID = @DocumentType_ID"
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(10).Connection = Me.Connection
            Me._commandCollection(10).CommandText = "SELECT TOP (1) Category_Party_ID, Co_ID, Discount, DocumentType_ID, Inventory_Dat"& _ 
                "e, Inventory_ID, Inventory_No, LogisticService, Party_ID, Payment_Mode, RecordSt"& _ 
                "atus_ID, Remarks, SalesTax, Source_DocumentType_ID, Source_Document_Co_ID, Sourc"& _ 
                "e_Document_No, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inventory WHER"& _ 
                "E (Co_ID = @Co_ID) AND (Inventory_ID > @Inventory_ID) AND (RecordStatus_ID <> 4)"& _ 
                " AND (DocumentType_ID = @DocumentType_ID)"
            Me._commandCollection(10).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(11).Connection = Me.Connection
            Me._commandCollection(11).CommandText = "SELECT TOP (1) Category_Party_ID, Co_ID, Discount, DocumentType_ID, Inventory_Dat"& _ 
                "e, Inventory_ID, Inventory_No, LogisticService, Party_ID, Payment_Mode, RecordSt"& _ 
                "atus_ID, Remarks, SalesTax, Source_DocumentType_ID, Source_Document_Co_ID, Sourc"& _ 
                "e_Document_No, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inventory WHER"& _ 
                "E (Co_ID = @Co_ID) AND (Inventory_ID < @Inventory_ID) AND (RecordStatus_ID <> 4)"& _ 
                " AND (DocumentType_ID = @DocumentType_ID) ORDER BY Inventory_ID DESC"
            Me._commandCollection(11).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillAll(ByVal dataTable As QuickInventoryDataSet.InventoryDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetAll() As QuickInventoryDataSet.InventoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As QuickInventoryDataSet.InventoryDataTable = New QuickInventoryDataSet.InventoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllUpdatedByCoIDDateTime(ByVal Co_ID As Short, ByVal Stamp_DateTime As Global.System.Nullable(Of Date)) As QuickInventoryDataSet.InventoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            If (Stamp_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Stamp_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As QuickInventoryDataSet.InventoryDataTable = New QuickInventoryDataSet.InventoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllUploadedByCoIDDateTime(ByVal Co_Id As Short, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As QuickInventoryDataSet.InventoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Short)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As QuickInventoryDataSet.InventoryDataTable = New QuickInventoryDataSet.InventoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByCoIDInventoryID(ByVal Co_ID As Short, ByVal Inventory_ID As Integer) As QuickInventoryDataSet.InventoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.InventoryDataTable = New QuickInventoryDataSet.InventoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetFirstByCoIDDocumentTypeID(ByVal Co_ID As Short, ByVal DocumentType_ID As Short) As QuickInventoryDataSet.InventoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DocumentType_ID,Short)
            Dim dataTable As QuickInventoryDataSet.InventoryDataTable = New QuickInventoryDataSet.InventoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetLastByCoIDDocumentTypeID(ByVal Co_ID As Short, ByVal DocumentType_ID As Short) As QuickInventoryDataSet.InventoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DocumentType_ID,Short)
            Dim dataTable As QuickInventoryDataSet.InventoryDataTable = New QuickInventoryDataSet.InventoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetNextByCoIDInventoryIDDocumentTypeID(ByVal Co_ID As Short, ByVal Inventory_ID As Integer, ByVal DocumentType_ID As Short) As QuickInventoryDataSet.InventoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(10)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(DocumentType_ID,Short)
            Dim dataTable As QuickInventoryDataSet.InventoryDataTable = New QuickInventoryDataSet.InventoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetPreviousByCoIDInventoryIDDocumentTypeID(ByVal Co_ID As Short, ByVal Inventory_ID As Integer, ByVal DocumentType_ID As Short) As QuickInventoryDataSet.InventoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(11)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(DocumentType_ID,Short)
            Dim dataTable As QuickInventoryDataSet.InventoryDataTable = New QuickInventoryDataSet.InventoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As QuickInventoryDataSet.InventoryDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As QuickInventoryDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Inventory")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteAll(ByVal Co_Id As Short) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(Co_Id,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMaxInventoryNoByCoIDDocumentTypeID(ByVal Co_ID As Short, ByVal DocumentType_ID As Short, ByVal LikeOperatorPattern As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(7)
            command.Parameters(0).Value = CType(Co_ID,Short)
            command.Parameters(1).Value = CType(DocumentType_ID,Short)
            If (LikeOperatorPattern Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LikeOperatorPattern")
            Else
                command.Parameters(2).Value = CType(LikeOperatorPattern,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetNewInventoryIDByCoID(ByVal Co_ID As Integer) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(8)
            command.Parameters(0).Value = CType(Co_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetNewInventoryNoByCoIDDocumentTypeID(ByVal Co_ID As Integer, ByVal DocumentType_ID As Integer) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(9)
            command.Parameters(0).Value = CType(Co_ID,Integer)
            command.Parameters(1).Value = CType(DocumentType_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Invs_InventoryTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Invs_Inventory"
            tableMapping.ColumnMappings.Add("Co_ID", "Co_ID")
            tableMapping.ColumnMappings.Add("Party_ID", "Party_ID")
            tableMapping.ColumnMappings.Add("Payment_Mode", "Payment_Mode")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("Stamp_DateTime", "Stamp_DateTime")
            tableMapping.ColumnMappings.Add("Stamp_UserID", "Stamp_UserID")
            tableMapping.ColumnMappings.Add("Inventory_ID", "Inventory_ID")
            tableMapping.ColumnMappings.Add("Inventory_Date", "Inventory_Date")
            tableMapping.ColumnMappings.Add("Inventory_No", "Inventory_No")
            tableMapping.ColumnMappings.Add("DocumentType_ID", "DocumentType_ID")
            tableMapping.ColumnMappings.Add("Status_ID", "Status_ID")
            tableMapping.ColumnMappings.Add("Upload_DateTime", "Upload_DateTime")
            tableMapping.ColumnMappings.Add("Category_Party_ID", "Category_Party_ID")
            tableMapping.ColumnMappings.Add("LogisticService", "LogisticService")
            tableMapping.ColumnMappings.Add("Discount", "Discount")
            tableMapping.ColumnMappings.Add("SalesTax", "SalesTax")
            tableMapping.ColumnMappings.Add("Source_DocumentType_ID", "Source_DocumentType_ID")
            tableMapping.ColumnMappings.Add("Source_Document_No", "Source_Document_No")
            tableMapping.ColumnMappings.Add("Source_Document_Co_ID", "Source_Document_Co_ID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Invs_Inventory] WHERE (([Co_ID] = @Original_Co_ID) AND ([Inventory_I"& _ 
                "D] = @Original_Inventory_ID))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Invs_Inventory] ([Co_ID], [Inventory_ID], [Inventory_No], [DocumentT"& _ 
                "ype_ID], [Inventory_Date], [Party_ID], [Payment_Mode], [Remarks], [Stamp_UserID]"& _ 
                ", [Stamp_DateTime], [Status_ID], [Upload_DateTime], [Category_Party_ID], [Logist"& _ 
                "icService], [Discount], [SalesTax], [Source_DocumentType_ID], [Source_Document_N"& _ 
                "o], [Source_Document_Co_ID]) VALUES (@Co_ID, @Inventory_ID, @Inventory_No, @Docu"& _ 
                "mentType_ID, @Inventory_Date, @Party_ID, @Payment_Mode, @Remarks, @Stamp_UserID,"& _ 
                " @Stamp_DateTime, @Status_ID, @Upload_DateTime, @Category_Party_ID, @LogisticSer"& _ 
                "vice, @Discount, @SalesTax, @Source_DocumentType_ID, @Source_Document_No, @Sourc"& _ 
                "e_Document_Co_ID);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, Inventory_ID, Inventory_No, DocumentType_ID, I"& _ 
                "nventory_Date, Party_ID, Payment_Mode, Remarks, Stamp_UserID, Stamp_DateTime, St"& _ 
                "atus_ID, Upload_DateTime, Category_Party_ID, LogisticService, Discount, SalesTax"& _ 
                ", Source_DocumentType_ID, Source_Document_No, Source_Document_Co_ID FROM Invs_In"& _ 
                "ventory WHERE (Co_ID = @Co_ID) AND (Inventory_ID = @Inventory_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Party_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Party_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Payment_Mode", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Payment_Mode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Status_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Category_Party_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category_Party_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LogisticService", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LogisticService", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalesTax", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesTax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Document_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Document_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Document_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Document_Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Invs_Inventory] SET [Co_ID] = @Co_ID, [Inventory_ID] = @Inventory_ID, [In"& _ 
                "ventory_No] = @Inventory_No, [DocumentType_ID] = @DocumentType_ID, [Inventory_Da"& _ 
                "te] = @Inventory_Date, [Party_ID] = @Party_ID, [Payment_Mode] = @Payment_Mode, ["& _ 
                "Remarks] = @Remarks, [Stamp_UserID] = @Stamp_UserID, [Stamp_DateTime] = @Stamp_D"& _ 
                "ateTime, [Status_ID] = @Status_ID, [Upload_DateTime] = @Upload_DateTime, [Catego"& _ 
                "ry_Party_ID] = @Category_Party_ID, [LogisticService] = @LogisticService, [Discou"& _ 
                "nt] = @Discount, [SalesTax] = @SalesTax, [Source_DocumentType_ID] = @Source_Docu"& _ 
                "mentType_ID, [Source_Document_No] = @Source_Document_No, [Source_Document_Co_ID]"& _ 
                " = @Source_Document_Co_ID WHERE (([Co_ID] = @Original_Co_ID) AND ([Inventory_ID]"& _ 
                " = @Original_Inventory_ID));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, Inventory_ID, Inventory_No, Document"& _ 
                "Type_ID, Inventory_Date, Party_ID, Payment_Mode, Remarks, Stamp_UserID, Stamp_Da"& _ 
                "teTime, Status_ID, Upload_DateTime, Category_Party_ID, LogisticService, Discount"& _ 
                ", SalesTax, Source_DocumentType_ID, Source_Document_No, Source_Document_Co_ID FR"& _ 
                "OM Invs_Inventory WHERE (Co_ID = @Co_ID) AND (Inventory_ID = @Inventory_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Party_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Party_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Payment_Mode", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Payment_Mode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Status_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Category_Party_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category_Party_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LogisticService", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LogisticService", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalesTax", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesTax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Document_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Document_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Document_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Document_Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.QuickDAL.My.MySettings.Default.Quick_ERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(10) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Co_ID, Inventory_ID, Inventory_No, DocumentType_ID, Inventory_Date, Pa"& _ 
                "rty_ID, Payment_Mode, Remarks, Stamp_UserID, Stamp_DateTime, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "     Status_ID, Upload_DateTime, Category_Party_ID, LogisticService, Discount, S"& _ 
                "alesTax, Source_DocumentType_ID, Source_Document_No, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Sou"& _ 
                "rce_Document_Co_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Invs_Inventory"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM [Inventory]  WHERE (Co_Id = @Co_Id)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT Category_Party_ID, Co_ID, Discount, DocumentType_ID, Inventory_Date, Inven"& _ 
                "tory_ID, Inventory_No, LogisticService, Party_ID, Payment_Mode, Remarks, SalesTa"& _ 
                "x, Source_DocumentType_ID, Source_Document_Co_ID, Source_Document_No, Stamp_Date"& _ 
                "Time, Stamp_UserID, Status_ID, Upload_DateTime FROM Inventory WHERE (Co_ID = @Co"& _ 
                "_ID OR @Co_ID = 0) AND (Stamp_DateTime > @Stamp_DateTime)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT Category_Party_ID, Co_ID, Discount, DocumentType_ID, Inventory_Date, Inven"& _ 
                "tory_ID, Inventory_No, LogisticService, Party_ID, Payment_Mode, Remarks, SalesTa"& _ 
                "x, Source_DocumentType_ID, Source_Document_Co_ID, Source_Document_No, Stamp_Date"& _ 
                "Time, Stamp_UserID, Status_ID, Upload_DateTime FROM Inventory WHERE (Co_ID = @Co"& _ 
                "_Id) AND (Upload_DateTime > @Upload_DateTime)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT Category_Party_ID, Co_ID, Discount, DocumentType_ID, Inventory_Date, Inven"& _ 
                "tory_ID, Inventory_No, LogisticService, Party_ID, Payment_Mode, Remarks, SalesTa"& _ 
                "x, Source_DocumentType_ID, Source_Document_Co_ID, Source_Document_No, Stamp_Date"& _ 
                "Time, Stamp_UserID, Status_ID, Upload_DateTime FROM Inventory WHERE (Co_ID = @Co"& _ 
                "_ID) AND (Inventory_ID = @Inventory_ID)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT TOP (1) Category_Party_ID, Co_ID, Discount, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"DocumentType_ID, Inventory_"& _ 
                "Date, Inventory_ID, Inventory_No, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"LogisticService, Party_ID, Payment_Mode, Re"& _ 
                "marks, SalesTax, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Source_DocumentType_ID, Source_Document_Co_ID, Source_Docume"& _ 
                "nt_No, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Stamp_DateTime, Stamp_UserID, Status_ID, Upload_DateTime "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM Invent"& _ 
                "ory "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (Status_ID <> 4) AND (Co_ID = @Co_ID) AND DocumentType_ID = @Documen"& _ 
                "tType_ID"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT TOP (1) Category_Party_ID, Co_ID, Discount, DocumentType_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Inventory_"& _ 
                "Date, Inventory_ID, Inventory_No, LogisticService, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Party_ID, Payment_Mode, Re"& _ 
                "marks, SalesTax, Source_DocumentType_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Source_Document_Co_ID, Source_Docume"& _ 
                "nt_No, Stamp_DateTime, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Stamp_UserID, Status_ID, Upload_DateTime "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM Invent"& _ 
                "ory "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (Status_ID <> 4) AND (Co_ID = @Co_ID) AND DocumentType_ID = @Documen"& _ 
                "tType_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Inventory_ID DESC"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT     ISNULL(MAX(Inventory_ID), 0) + 1 AS NewID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Inventory"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHE"& _ 
                "RE     (Co_ID = @Co_ID)"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT ISNULL(MAX(CONVERT(INT, Inventory_No)), 0) + 1 FROM Inventory WHERE Co_ID "& _ 
                "= @Co_ID AND DocumentType_ID = @DocumentType_ID"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "SELECT TOP (1) Category_Party_ID, Co_ID, Discount, DocumentType_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Inventory_"& _ 
                "Date, Inventory_ID, Inventory_No, LogisticService, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Party_ID, Payment_Mode, Re"& _ 
                "marks, SalesTax, Source_DocumentType_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Source_Document_Co_ID, Source_Docume"& _ 
                "nt_No, Stamp_DateTime, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Stamp_UserID, Status_ID, Upload_DateTime "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM Invent"& _ 
                "ory "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (Co_ID = @Co_ID) AND (Inventory_ID > @Inventory_ID) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"AND (Status_I"& _ 
                "D <> 4) AND DocumentType_ID = @DocumentType_ID"
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(10).Connection = Me.Connection
            Me._commandCollection(10).CommandText = "SELECT TOP (1) Category_Party_ID, Co_ID, Discount, DocumentType_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Inventory_"& _ 
                "Date, Inventory_ID, Inventory_No, LogisticService, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Party_ID, Payment_Mode, Re"& _ 
                "marks, SalesTax, Source_DocumentType_ID, "&Global.Microsoft.VisualBasic.ChrW(9)&"Source_Document_Co_ID, Source_Document"& _ 
                "_No, Stamp_DateTime, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Stamp_UserID, Status_ID, Upload_DateTime "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM Invent"& _ 
                "ory "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (Co_ID = @Co_ID) AND (Inventory_ID < @Inventory_ID) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"AND (Status"& _ 
                "_ID <> 4) AND DocumentType_ID = @DocumentType_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Inventory_ID DESC"
            Me._commandCollection(10).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetAll() As QuickInventoryDataSet.Invs_InventoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As QuickInventoryDataSet.Invs_InventoryDataTable = New QuickInventoryDataSet.Invs_InventoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillAllUpdatedByCoIDDateTime(ByVal dataTable As QuickInventoryDataSet.Invs_InventoryDataTable, ByVal Co_ID As Integer, ByVal Stamp_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            If (Stamp_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Stamp_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllUpdatedByCoIDDateTime(ByVal Co_ID As Integer, ByVal Stamp_DateTime As Global.System.Nullable(Of Date)) As QuickInventoryDataSet.Invs_InventoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            If (Stamp_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Stamp_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As QuickInventoryDataSet.Invs_InventoryDataTable = New QuickInventoryDataSet.Invs_InventoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillAllUploadedByCoIDDateTime(ByVal dataTable As QuickInventoryDataSet.Invs_InventoryDataTable, ByVal Co_Id As Integer, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Integer)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllUploadedByCoIDDateTime(ByVal Co_Id As Integer, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As QuickInventoryDataSet.Invs_InventoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Integer)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As QuickInventoryDataSet.Invs_InventoryDataTable = New QuickInventoryDataSet.Invs_InventoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByCoIDInventoryID(ByVal Co_ID As Integer, ByVal Inventory_ID As Integer) As QuickInventoryDataSet.Invs_InventoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.Invs_InventoryDataTable = New QuickInventoryDataSet.Invs_InventoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetFirstByCoIDDocumentTypeID(ByVal Co_ID As Integer, ByVal DocumentType_ID As Integer) As QuickInventoryDataSet.Invs_InventoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DocumentType_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.Invs_InventoryDataTable = New QuickInventoryDataSet.Invs_InventoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetLastByCoIDDocumentTypeID(ByVal Co_ID As Integer, ByVal DocumentType_ID As Integer) As QuickInventoryDataSet.Invs_InventoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DocumentType_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.Invs_InventoryDataTable = New QuickInventoryDataSet.Invs_InventoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetNextByCoIDInventoryIDDocumentTypeID(ByVal Co_ID As Integer, ByVal Inventory_ID As Integer, ByVal DocumentType_ID As Integer) As QuickInventoryDataSet.Invs_InventoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(DocumentType_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.Invs_InventoryDataTable = New QuickInventoryDataSet.Invs_InventoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetPreviousByCoIDInventoryIDDocumentTypeID(ByVal Co_ID As Integer, ByVal Inventory_ID As Integer, ByVal DocumentType_ID As Integer) As QuickInventoryDataSet.Invs_InventoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(10)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(DocumentType_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.Invs_InventoryDataTable = New QuickInventoryDataSet.Invs_InventoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As QuickInventoryDataSet.Invs_InventoryDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As QuickInventoryDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Invs_Inventory")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Co_ID As Short, ByVal Original_Inventory_ID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Co_ID,Short)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Inventory_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Co_ID As Short,  _
                    ByVal Inventory_ID As Integer,  _
                    ByVal Inventory_No As Integer,  _
                    ByVal DocumentType_ID As Short,  _
                    ByVal Inventory_Date As Date,  _
                    ByVal Party_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Payment_Mode As Global.System.Nullable(Of Short),  _
                    ByVal Remarks As String,  _
                    ByVal Stamp_UserID As Global.System.Nullable(Of Integer),  _
                    ByVal Stamp_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Status_ID As Integer,  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Category_Party_ID As Global.System.Nullable(Of Integer),  _
                    ByVal LogisticService As String,  _
                    ByVal Discount As Integer,  _
                    ByVal SalesTax As Integer,  _
                    ByVal Source_DocumentType_ID As Global.System.Nullable(Of Short),  _
                    ByVal Source_Document_No As Global.System.Nullable(Of Integer),  _
                    ByVal Source_Document_Co_ID As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Inventory_No,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(DocumentType_ID,Short)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(Inventory_Date,Date)
            If (Party_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Party_ID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Payment_Mode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Payment_Mode.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Remarks,String)
            End If
            If (Stamp_UserID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Stamp_UserID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Stamp_DateTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Stamp_DateTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(Status_ID,Integer)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Category_Party_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Category_Party_ID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (LogisticService Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(LogisticService,String)
            End If
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(Discount,Integer)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(SalesTax,Integer)
            If (Source_DocumentType_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Source_DocumentType_ID.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Source_Document_No.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Source_Document_No.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Source_Document_Co_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Source_Document_Co_ID.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Co_ID As Short,  _
                    ByVal Inventory_ID As Integer,  _
                    ByVal Inventory_No As Integer,  _
                    ByVal DocumentType_ID As Short,  _
                    ByVal Inventory_Date As Date,  _
                    ByVal Party_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Payment_Mode As Global.System.Nullable(Of Short),  _
                    ByVal Remarks As String,  _
                    ByVal Stamp_UserID As Global.System.Nullable(Of Integer),  _
                    ByVal Stamp_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Status_ID As Integer,  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Category_Party_ID As Global.System.Nullable(Of Integer),  _
                    ByVal LogisticService As String,  _
                    ByVal Discount As Integer,  _
                    ByVal SalesTax As Integer,  _
                    ByVal Source_DocumentType_ID As Global.System.Nullable(Of Short),  _
                    ByVal Source_Document_No As Global.System.Nullable(Of Integer),  _
                    ByVal Source_Document_Co_ID As Global.System.Nullable(Of Short),  _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Inventory_ID As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Inventory_No,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DocumentType_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Inventory_Date,Date)
            If (Party_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Party_ID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Payment_Mode.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Payment_Mode.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Remarks,String)
            End If
            If (Stamp_UserID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Stamp_UserID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Stamp_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Stamp_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Status_ID,Integer)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Category_Party_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Category_Party_ID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (LogisticService Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(LogisticService,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Discount,Integer)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(SalesTax,Integer)
            If (Source_DocumentType_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Source_DocumentType_ID.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Source_Document_No.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Source_Document_No.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Source_Document_Co_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Source_Document_Co_ID.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_Inventory_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Inventory_No As Integer,  _
                    ByVal DocumentType_ID As Short,  _
                    ByVal Inventory_Date As Date,  _
                    ByVal Party_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Payment_Mode As Global.System.Nullable(Of Short),  _
                    ByVal Remarks As String,  _
                    ByVal Stamp_UserID As Global.System.Nullable(Of Integer),  _
                    ByVal Stamp_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Status_ID As Integer,  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Category_Party_ID As Global.System.Nullable(Of Integer),  _
                    ByVal LogisticService As String,  _
                    ByVal Discount As Integer,  _
                    ByVal SalesTax As Integer,  _
                    ByVal Source_DocumentType_ID As Global.System.Nullable(Of Short),  _
                    ByVal Source_Document_No As Global.System.Nullable(Of Integer),  _
                    ByVal Source_Document_Co_ID As Global.System.Nullable(Of Short),  _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Inventory_ID As Integer) As Integer
            Return Me.Update(Original_Co_ID, Original_Inventory_ID, Inventory_No, DocumentType_ID, Inventory_Date, Party_ID, Payment_Mode, Remarks, Stamp_UserID, Stamp_DateTime, Status_ID, Upload_DateTime, Category_Party_ID, LogisticService, Discount, SalesTax, Source_DocumentType_ID, Source_Document_No, Source_Document_Co_ID, Original_Co_ID, Original_Inventory_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteAll(ByVal Co_Id As Short) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(Co_Id,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetNewInventoryIDByCoID(ByVal Co_ID As Integer) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(7)
            command.Parameters(0).Value = CType(Co_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetNewInventoryNoByCoIDDocumentTypeID(ByVal Co_ID As Integer, ByVal DocumentType_ID As Integer) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(8)
            command.Parameters(0).Value = CType(Co_ID,Integer)
            command.Parameters(1).Value = CType(DocumentType_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Invs_InventoryDetailTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Invs_InventoryDetail"
            tableMapping.ColumnMappings.Add("Co_ID", "Co_ID")
            tableMapping.ColumnMappings.Add("Inventory_ID", "Inventory_ID")
            tableMapping.ColumnMappings.Add("InventoryDetail_ID", "InventoryDetail_ID")
            tableMapping.ColumnMappings.Add("DocumentType_ID", "DocumentType_ID")
            tableMapping.ColumnMappings.Add("Item_ID", "Item_ID")
            tableMapping.ColumnMappings.Add("Stamp_UserID", "Stamp_UserID")
            tableMapping.ColumnMappings.Add("Stamp_DateTime", "Stamp_DateTime")
            tableMapping.ColumnMappings.Add("Source_DocumentType_ID", "Source_DocumentType_ID")
            tableMapping.ColumnMappings.Add("Source_Document_Co_ID", "Source_Document_Co_ID")
            tableMapping.ColumnMappings.Add("Source_Document_No", "Source_Document_No")
            tableMapping.ColumnMappings.Add("Upload_DateTime", "Upload_DateTime")
            tableMapping.ColumnMappings.Add("Warehouse_ID", "Warehouse_ID")
            tableMapping.ColumnMappings.Add("ItemSize_ID", "ItemSize_ID")
            tableMapping.ColumnMappings.Add("ItemQty", "ItemQty")
            tableMapping.ColumnMappings.Add("ItemRate", "ItemRate")
            tableMapping.ColumnMappings.Add("Discount", "Discount")
            tableMapping.ColumnMappings.Add("SalesTax", "SalesTax")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Invs_Inventory_Detail] WHERE (([Co_ID] = @Original_Co_ID) AND ([Inve"& _ 
                "ntory_ID] = @Original_Inventory_ID) AND ([InventoryDetail_ID] = @Original_Invent"& _ 
                "oryDetail_ID))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InventoryDetail_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InventoryDetail_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Invs_Inventory_Detail] ([Co_ID], [Inventory_ID], [InventoryDetail_ID"& _ 
                "], [Warehouse_ID], [DocumentType_ID], [Item_ID], [ItemSize_ID], [ItemQty], [Item"& _ 
                "Rate], [Stamp_UserID], [Stamp_DateTime], [Source_DocumentType_ID], [Source_Docum"& _ 
                "ent_No], [Source_Document_Co_ID], [Upload_DateTime], [Discount], [SalesTax]) VAL"& _ 
                "UES (@Co_ID, @Inventory_ID, @InventoryDetail_ID, @Warehouse_ID, @DocumentType_ID"& _ 
                ", @Item_ID, @ItemSize_ID, @ItemQty, @ItemRate, @Stamp_UserID, @Stamp_DateTime, @"& _ 
                "Source_DocumentType_ID, @Source_Document_No, @Source_Document_Co_ID, @Upload_Dat"& _ 
                "eTime, @Discount, @SalesTax);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, Inventory_ID, InventoryDetail_ID, W"& _ 
                "arehouse_ID, DocumentType_ID, Item_ID, ItemSize_ID, ItemQty, ItemRate, Stamp_Use"& _ 
                "rID, Stamp_DateTime, Source_DocumentType_ID, Source_Document_No, Source_Document"& _ 
                "_Co_ID, Upload_DateTime, Discount, SalesTax FROM Invs_Inventory_Detail WHERE (Co"& _ 
                "_ID = @Co_ID) AND (InventoryDetail_ID = @InventoryDetail_ID) AND (Inventory_ID ="& _ 
                " @Inventory_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InventoryDetail_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InventoryDetail_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Warehouse_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSize_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemSize_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemQty", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemRate", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Document_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Document_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Document_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Document_Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalesTax", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesTax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Invs_Inventory_Detail] SET [Co_ID] = @Co_ID, [Inventory_ID] = @Inventory_"& _ 
                "ID, [InventoryDetail_ID] = @InventoryDetail_ID, [Warehouse_ID] = @Warehouse_ID, "& _ 
                "[DocumentType_ID] = @DocumentType_ID, [Item_ID] = @Item_ID, [ItemSize_ID] = @Ite"& _ 
                "mSize_ID, [ItemQty] = @ItemQty, [ItemRate] = @ItemRate, [Stamp_UserID] = @Stamp_"& _ 
                "UserID, [Stamp_DateTime] = @Stamp_DateTime, [Source_DocumentType_ID] = @Source_D"& _ 
                "ocumentType_ID, [Source_Document_No] = @Source_Document_No, [Source_Document_Co_"& _ 
                "ID] = @Source_Document_Co_ID, [Upload_DateTime] = @Upload_DateTime, [Discount] ="& _ 
                " @Discount, [SalesTax] = @SalesTax WHERE (([Co_ID] = @Original_Co_ID) AND ([Inve"& _ 
                "ntory_ID] = @Original_Inventory_ID) AND ([InventoryDetail_ID] = @Original_Invent"& _ 
                "oryDetail_ID));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, Inventory_ID, InventoryDetail_ID, Warehouse_ID, D"& _ 
                "ocumentType_ID, Item_ID, ItemSize_ID, ItemQty, ItemRate, Stamp_UserID, Stamp_Dat"& _ 
                "eTime, Source_DocumentType_ID, Source_Document_No, Source_Document_Co_ID, Upload"& _ 
                "_DateTime, Discount, SalesTax FROM Invs_Inventory_Detail WHERE (Co_ID = @Co_ID) "& _ 
                "AND (InventoryDetail_ID = @InventoryDetail_ID) AND (Inventory_ID = @Inventory_ID"& _ 
                ")"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InventoryDetail_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InventoryDetail_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Warehouse_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSize_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemSize_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemQty", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemRate", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_DocumentType_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Document_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Document_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Document_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Document_Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalesTax", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesTax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InventoryDetail_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InventoryDetail_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.QuickDAL.My.MySettings.Default.Quick_ERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(8) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Co_ID, Inventory_ID, InventoryDetail_ID, Warehouse_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"DocumentType"& _ 
                "_ID, Item_ID, ItemSize_ID, ItemQty, ItemRate, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Stamp_UserID, Stamp_DateTime, S"& _ 
                "ource_DocumentType_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Source_Document_No, Source_Document_Co_ID, Upload_Date"& _ 
                "Time, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Discount, SalesTax"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Invs_Inventory_Detail"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM [Inventory_Detail] WHERE (Co_Id = @Co_Id)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "ALTER TABLE [Inventory_Detail] DISABLE TRIGGER ALL"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "ALTER TABLE [Inventory_Detail] ENABLE TRIGGER ALL"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT Co_ID, Discount, DocumentType_ID, InventoryDetail_ID, Inventory_ID, Invent"& _ 
                "ory_Qty_Size01, Inventory_Qty_Size02, Inventory_Qty_Size03, Inventory_Qty_Size04"& _ 
                ", Inventory_Qty_Size05, Inventory_Qty_Size06, Inventory_Qty_Size07, Inventory_Qt"& _ 
                "y_Size08, Inventory_Qty_Size09, Inventory_Qty_Size10, Inventory_Qty_Size11, Inve"& _ 
                "ntory_Qty_Size12, Inventory_Qty_Size13, Inventory_Rate_Size01, Inventory_Rate_Si"& _ 
                "ze02, Inventory_Rate_Size03, Inventory_Rate_Size04, Inventory_Rate_Size05, Inven"& _ 
                "tory_Rate_Size06, Inventory_Rate_Size07, Inventory_Rate_Size08, Inventory_Rate_S"& _ 
                "ize09, Inventory_Rate_Size10, Inventory_Rate_Size11, Inventory_Rate_Size12, Inve"& _ 
                "ntory_Rate_Size13, Item_ID, SalesTax, Source_DocumentType_ID, Source_Document_Co"& _ 
                "_ID, Source_Document_No, Stamp_DateTime, Stamp_UserID, Upload_DateTime, Warehous"& _ 
                "e_ID FROM Inventory_Detail WHERE (Co_ID = @Co_ID OR @Co_ID = 0) AND (Stamp_DateT"& _ 
                "ime > @Stamp_DateTime)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT Co_ID, Discount, DocumentType_ID, InventoryDetail_ID, Inventory_ID, Invent"& _ 
                "ory_Qty_Size01, Inventory_Qty_Size02, Inventory_Qty_Size03, Inventory_Qty_Size04"& _ 
                ", Inventory_Qty_Size05, Inventory_Qty_Size06, Inventory_Qty_Size07, Inventory_Qt"& _ 
                "y_Size08, Inventory_Qty_Size09, Inventory_Qty_Size10, Inventory_Qty_Size11, Inve"& _ 
                "ntory_Qty_Size12, Inventory_Qty_Size13, Inventory_Rate_Size01, Inventory_Rate_Si"& _ 
                "ze02, Inventory_Rate_Size03, Inventory_Rate_Size04, Inventory_Rate_Size05, Inven"& _ 
                "tory_Rate_Size06, Inventory_Rate_Size07, Inventory_Rate_Size08, Inventory_Rate_S"& _ 
                "ize09, Inventory_Rate_Size10, Inventory_Rate_Size11, Inventory_Rate_Size12, Inve"& _ 
                "ntory_Rate_Size13, Item_ID, SalesTax, Source_DocumentType_ID, Source_Document_Co"& _ 
                "_ID, Source_Document_No, Stamp_DateTime, Stamp_UserID, Upload_DateTime, Warehous"& _ 
                "e_ID FROM Inventory_Detail WHERE (Co_ID = @Co_Id) AND (Upload_DateTime > @Upload"& _ 
                "_DateTime)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT        Inventory_Detail.Co_ID, Inventory_Detail.DocumentType_ID, Inventory"& _ 
                "_Detail.InventoryDetail_ID, Inventory_Detail.Inventory_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      Inventory_Detail.Inventory_Qty_Size01, Inventory_Detail.Inventory_Qty_Size"& _ 
                "02, Inventory_Detail.Inventory_Qty_Size03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inventory_"& _ 
                "Detail.Inventory_Qty_Size04, Inventory_Detail.Inventory_Qty_Size05, Inventory_De"& _ 
                "tail.Inventory_Qty_Size06, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inventory_Detail.Inventory"& _ 
                "_Qty_Size07, Inventory_Detail.Inventory_Qty_Size08, Inventory_Detail.Inventory_Q"& _ 
                "ty_Size09, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inventory_Detail.Inventory_Qty_Size10, Inv"& _ 
                "entory_Detail.Inventory_Qty_Size11, Inventory_Detail.Inventory_Qty_Size12, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                      Inventory_Detail.Inventory_Qty_Size13, Inventory_Detail.In"& _ 
                "ventory_Rate_Size01, Inventory_Detail.Inventory_Rate_Size02, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        Inventory_Detail.Inventory_Rate_Size03, Inventory_Detail.Inventory_Rate_"& _ 
                "Size04, Inventory_Detail.Inventory_Rate_Size05, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inven"& _ 
                "tory_Detail.Inventory_Rate_Size06, Inventory_Detail.Inventory_Rate_Size07, Inven"& _ 
                "tory_Detail.Inventory_Rate_Size08, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inventory_Detail.I"& _ 
                "nventory_Rate_Size09, Inventory_Detail.Inventory_Rate_Size10, Inventory_Detail.I"& _ 
                "nventory_Rate_Size11, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inventory_Detail.Inventory_Rate"& _ 
                "_Size12, Inventory_Detail.Inventory_Rate_Size13, Inventory_Detail.Item_ID, Inven"& _ 
                "tory_Detail.Stamp_DateTime, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inventory_Detail.Stamp_Us"& _ 
                "erID, Inv_Item.Item_Code, Inv_Item.Item_Desc, Inventory_Detail.Source_DocumentTy"& _ 
                "pe_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inventory_Detail.Source_Document_No, Inventory"& _ 
                "_Detail.Source_Document_Co_ID, Inventory_Detail.Upload_DateTime"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM           "& _ 
                " Inventory_Detail INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inv_Item ON Inventory_Det"& _ 
                "ail.Co_ID = Inv_Item.Co_ID AND Inventory_Detail.Item_ID = Inv_Item.Item_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHER"& _ 
                "E        (Inventory_Detail.Co_ID = @Co_ID) AND (Inventory_Detail.Inventory_ID = "& _ 
                "@Inventory_ID)"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT        Inventory_Detail.Co_ID, Inventory_Detail.DocumentType_ID, Inventory"& _ 
                "_Detail.InventoryDetail_ID, Inventory_Detail.Inventory_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      Inventory_Detail.Inventory_Qty_Size01, Inventory_Detail.Inventory_Qty_Size"& _ 
                "02, Inventory_Detail.Inventory_Qty_Size03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inventory_"& _ 
                "Detail.Inventory_Qty_Size04, Inventory_Detail.Inventory_Qty_Size05, Inventory_De"& _ 
                "tail.Inventory_Qty_Size06, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inventory_Detail.Inventory"& _ 
                "_Qty_Size07, Inventory_Detail.Inventory_Qty_Size08, Inventory_Detail.Inventory_Q"& _ 
                "ty_Size09, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inventory_Detail.Inventory_Qty_Size10, Inv"& _ 
                "entory_Detail.Inventory_Qty_Size11, Inventory_Detail.Inventory_Qty_Size12, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                      Inventory_Detail.Inventory_Qty_Size13, Inventory_Detail.In"& _ 
                "ventory_Rate_Size01, Inventory_Detail.Inventory_Rate_Size02, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        Inventory_Detail.Inventory_Rate_Size03, Inventory_Detail.Inventory_Rate_"& _ 
                "Size04, Inventory_Detail.Inventory_Rate_Size05, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inven"& _ 
                "tory_Detail.Inventory_Rate_Size06, Inventory_Detail.Inventory_Rate_Size07, Inven"& _ 
                "tory_Detail.Inventory_Rate_Size08, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inventory_Detail.I"& _ 
                "nventory_Rate_Size09, Inventory_Detail.Inventory_Rate_Size10, Inventory_Detail.I"& _ 
                "nventory_Rate_Size11, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inventory_Detail.Inventory_Rate"& _ 
                "_Size12, Inventory_Detail.Inventory_Rate_Size13, Inventory_Detail.Item_ID, Inven"& _ 
                "tory_Detail.Stamp_DateTime, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inventory_Detail.Stamp_Us"& _ 
                "erID, Inv_Item.Item_Code, Inv_Item.Item_Desc, Inventory_Detail.Source_DocumentTy"& _ 
                "pe_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inventory_Detail.Source_Document_No, Inventory"& _ 
                "_Detail.Source_Document_Co_ID, Inventory_Detail.Upload_DateTime"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM           "& _ 
                " Inventory_Detail INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inv_Item ON Inventory_Det"& _ 
                "ail.Co_ID = Inv_Item.Co_ID AND Inventory_Detail.Item_ID = Inv_Item.Item_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHER"& _ 
                "E        (Inventory_Detail.Co_ID = @Co_ID) AND (Inventory_Detail.Inventory_ID = "& _ 
                "@Inventory_ID)  AND (Inventory_Detail.InventoryDetail_ID = @InventoryDetail_ID)"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InventoryDetail_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "InventoryDetail_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT     ISNULL(MAX(InventoryDetail_ID), 0) + 1 AS NewID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Inventor"& _ 
                "y_Detail"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Co_ID = @Co_ID) AND (Inventory_ID = @Inventory_ID)"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetAll() As QuickInventoryDataSet.Invs_InventoryDetailDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As QuickInventoryDataSet.Invs_InventoryDetailDataTable = New QuickInventoryDataSet.Invs_InventoryDetailDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillAllUpdatedByCoIDDateTime(ByVal dataTable As QuickInventoryDataSet.Invs_InventoryDetailDataTable, ByVal Co_ID As Short, ByVal Stamp_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            If (Stamp_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Stamp_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllUpdatedByCoIDDateTime(ByVal Co_ID As Short, ByVal Stamp_DateTime As Global.System.Nullable(Of Date)) As QuickInventoryDataSet.Invs_InventoryDetailDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            If (Stamp_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Stamp_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As QuickInventoryDataSet.Invs_InventoryDetailDataTable = New QuickInventoryDataSet.Invs_InventoryDetailDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillAllUploadedByCoIDDateTime(ByVal dataTable As QuickInventoryDataSet.Invs_InventoryDetailDataTable, ByVal Co_Id As Integer, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Integer)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllUploadedByCoIDDateTime(ByVal Co_Id As Integer, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As QuickInventoryDataSet.Invs_InventoryDetailDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Integer)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As QuickInventoryDataSet.Invs_InventoryDetailDataTable = New QuickInventoryDataSet.Invs_InventoryDetailDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByCoIDInventoryID(ByVal Co_ID As Integer, ByVal Inventory_ID As Integer) As QuickInventoryDataSet.Invs_InventoryDetailDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.Invs_InventoryDetailDataTable = New QuickInventoryDataSet.Invs_InventoryDetailDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByCoIDInventoryIDInventoryDetailID(ByVal Co_ID As Integer, ByVal Inventory_ID As Integer, ByVal InventoryDetail_ID As Integer) As QuickInventoryDataSet.Invs_InventoryDetailDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(InventoryDetail_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.Invs_InventoryDetailDataTable = New QuickInventoryDataSet.Invs_InventoryDetailDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As QuickInventoryDataSet.Invs_InventoryDetailDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As QuickInventoryDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Invs_InventoryDetail")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Co_ID As Short, ByVal Original_Inventory_ID As Integer, ByVal Original_InventoryDetail_ID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Co_ID,Short)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Inventory_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_InventoryDetail_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Co_ID As Short,  _
                    ByVal Inventory_ID As Integer,  _
                    ByVal InventoryDetail_ID As Integer,  _
                    ByVal Warehouse_ID As Global.System.Nullable(Of Integer),  _
                    ByVal DocumentType_ID As Short,  _
                    ByVal Item_ID As Integer,  _
                    ByVal ItemSize_ID As Short,  _
                    ByVal ItemQty As Double,  _
                    ByVal ItemRate As Decimal,  _
                    ByVal Stamp_UserID As Global.System.Nullable(Of Integer),  _
                    ByVal Stamp_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Source_DocumentType_ID As Global.System.Nullable(Of Short),  _
                    ByVal Source_Document_No As Global.System.Nullable(Of Integer),  _
                    ByVal Source_Document_Co_ID As Global.System.Nullable(Of Short),  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Discount As Global.System.Nullable(Of Double),  _
                    ByVal SalesTax As Global.System.Nullable(Of Double)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(InventoryDetail_ID,Integer)
            If (Warehouse_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Warehouse_ID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(DocumentType_ID,Short)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(Item_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(ItemSize_ID,Short)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(ItemQty,Double)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(ItemRate,Decimal)
            If (Stamp_UserID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Stamp_UserID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Stamp_DateTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Stamp_DateTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Source_DocumentType_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Source_DocumentType_ID.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Source_Document_No.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Source_Document_No.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Source_Document_Co_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Source_Document_Co_ID.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Discount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Discount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (SalesTax.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(SalesTax.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Co_ID As Short,  _
                    ByVal Inventory_ID As Integer,  _
                    ByVal InventoryDetail_ID As Integer,  _
                    ByVal Warehouse_ID As Global.System.Nullable(Of Integer),  _
                    ByVal DocumentType_ID As Short,  _
                    ByVal Item_ID As Integer,  _
                    ByVal ItemSize_ID As Short,  _
                    ByVal ItemQty As Double,  _
                    ByVal ItemRate As Decimal,  _
                    ByVal Stamp_UserID As Global.System.Nullable(Of Integer),  _
                    ByVal Stamp_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Source_DocumentType_ID As Global.System.Nullable(Of Short),  _
                    ByVal Source_Document_No As Global.System.Nullable(Of Integer),  _
                    ByVal Source_Document_Co_ID As Global.System.Nullable(Of Short),  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Discount As Global.System.Nullable(Of Double),  _
                    ByVal SalesTax As Global.System.Nullable(Of Double),  _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Inventory_ID As Integer,  _
                    ByVal Original_InventoryDetail_ID As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(InventoryDetail_ID,Integer)
            If (Warehouse_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Warehouse_ID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DocumentType_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Item_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ItemSize_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ItemQty,Double)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ItemRate,Decimal)
            If (Stamp_UserID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Stamp_UserID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Stamp_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Stamp_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Source_DocumentType_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Source_DocumentType_ID.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Source_Document_No.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Source_Document_No.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Source_Document_Co_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Source_Document_Co_ID.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Discount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Discount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (SalesTax.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(SalesTax.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_Inventory_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_InventoryDetail_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Warehouse_ID As Global.System.Nullable(Of Integer),  _
                    ByVal DocumentType_ID As Short,  _
                    ByVal Item_ID As Integer,  _
                    ByVal ItemSize_ID As Short,  _
                    ByVal ItemQty As Double,  _
                    ByVal ItemRate As Decimal,  _
                    ByVal Stamp_UserID As Global.System.Nullable(Of Integer),  _
                    ByVal Stamp_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Source_DocumentType_ID As Global.System.Nullable(Of Short),  _
                    ByVal Source_Document_No As Global.System.Nullable(Of Integer),  _
                    ByVal Source_Document_Co_ID As Global.System.Nullable(Of Short),  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Discount As Global.System.Nullable(Of Double),  _
                    ByVal SalesTax As Global.System.Nullable(Of Double),  _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Inventory_ID As Integer,  _
                    ByVal Original_InventoryDetail_ID As Integer) As Integer
            Return Me.Update(Original_Co_ID, Original_Inventory_ID, Original_InventoryDetail_ID, Warehouse_ID, DocumentType_ID, Item_ID, ItemSize_ID, ItemQty, ItemRate, Stamp_UserID, Stamp_DateTime, Source_DocumentType_ID, Source_Document_No, Source_Document_Co_ID, Upload_DateTime, Discount, SalesTax, Original_Co_ID, Original_Inventory_ID, Original_InventoryDetail_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteAll(ByVal Co_Id As Short) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(Co_Id,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function DisableAllTriggers() As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function EnableAllTriggers() As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetNewInventoryDetailIDByCoIDInventoryID(ByVal Co_ID As Integer, ByVal Inventory_ID As Integer) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(8)
            command.Parameters(0).Value = CType(Co_ID,Integer)
            command.Parameters(1).Value = CType(Inventory_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Invs_ItemTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Invs_Item"
            tableMapping.ColumnMappings.Add("Item_Desc", "Item_Desc")
            tableMapping.ColumnMappings.Add("Co_ID", "Co_ID")
            tableMapping.ColumnMappings.Add("Item_ID", "Item_ID")
            tableMapping.ColumnMappings.Add("Item_Code", "Item_Code")
            tableMapping.ColumnMappings.Add("Stamp_UserID", "Stamp_UserID")
            tableMapping.ColumnMappings.Add("Stamp_DateTime", "Stamp_DateTime")
            tableMapping.ColumnMappings.Add("Parent_Item_ID", "Parent_Item_ID")
            tableMapping.ColumnMappings.Add("Party_ID", "Party_ID")
            tableMapping.ColumnMappings.Add("Upload_DateTime", "Upload_DateTime")
            tableMapping.ColumnMappings.Add("Address_ID", "Address_ID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Invs_Item] WHERE (([Co_ID] = @Original_Co_ID) AND ([Item_ID] = @Orig"& _ 
                "inal_Item_ID) AND ([Parent_Item_ID] = @Original_Parent_Item_ID) AND ([Party_ID] "& _ 
                "= @Original_Party_ID) AND ([Address_ID] = @Original_Address_ID) AND ([Item_Code]"& _ 
                " = @Original_Item_Code) AND ([Item_Desc] = @Original_Item_Desc) AND ([Stamp_User"& _ 
                "ID] = @Original_Stamp_UserID) AND ([Stamp_DateTime] = @Original_Stamp_DateTime) "& _ 
                "AND ((@IsNull_Upload_DateTime = 1 AND [Upload_DateTime] IS NULL) OR ([Upload_Dat"& _ 
                "eTime] = @Original_Upload_DateTime)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Parent_Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Parent_Item_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Party_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Party_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Address_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_Desc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Desc", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Upload_DateTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Invs_Item] ([Co_ID], [Item_ID], [Parent_Item_ID], [Party_ID], [Addre"& _ 
                "ss_ID], [Item_Code], [Item_Desc], [Stamp_UserID], [Stamp_DateTime], [Upload_Date"& _ 
                "Time]) VALUES (@Co_ID, @Item_ID, @Parent_Item_ID, @Party_ID, @Address_ID, @Item_"& _ 
                "Code, @Item_Desc, @Stamp_UserID, @Stamp_DateTime, @Upload_DateTime);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_"& _ 
                "ID, Item_ID, Parent_Item_ID, Party_ID, Address_ID, Item_Code, Item_Desc, Stamp_U"& _ 
                "serID, Stamp_DateTime, Upload_DateTime FROM Invs_Item WHERE (Co_ID = @Co_ID) AND"& _ 
                " (Item_ID = @Item_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Parent_Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Parent_Item_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Party_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Party_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Address_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Desc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Desc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Invs_Item] SET [Co_ID] = @Co_ID, [Item_ID] = @Item_ID, [Parent_Item_ID] ="& _ 
                " @Parent_Item_ID, [Party_ID] = @Party_ID, [Address_ID] = @Address_ID, [Item_Code"& _ 
                "] = @Item_Code, [Item_Desc] = @Item_Desc, [Stamp_UserID] = @Stamp_UserID, [Stamp"& _ 
                "_DateTime] = @Stamp_DateTime, [Upload_DateTime] = @Upload_DateTime WHERE (([Co_I"& _ 
                "D] = @Original_Co_ID) AND ([Item_ID] = @Original_Item_ID) AND ([Parent_Item_ID] "& _ 
                "= @Original_Parent_Item_ID) AND ([Party_ID] = @Original_Party_ID) AND ([Address_"& _ 
                "ID] = @Original_Address_ID) AND ([Item_Code] = @Original_Item_Code) AND ([Item_D"& _ 
                "esc] = @Original_Item_Desc) AND ([Stamp_UserID] = @Original_Stamp_UserID) AND (["& _ 
                "Stamp_DateTime] = @Original_Stamp_DateTime) AND ((@IsNull_Upload_DateTime = 1 AN"& _ 
                "D [Upload_DateTime] IS NULL) OR ([Upload_DateTime] = @Original_Upload_DateTime))"& _ 
                ");"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, Item_ID, Parent_Item_ID, Party_ID, Address_ID, Item_Code, Item"& _ 
                "_Desc, Stamp_UserID, Stamp_DateTime, Upload_DateTime FROM Invs_Item WHERE (Co_ID"& _ 
                " = @Co_ID) AND (Item_ID = @Item_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Parent_Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Parent_Item_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Party_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Party_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Address_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Desc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Desc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Parent_Item_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Parent_Item_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Party_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Party_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Address_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_Desc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Desc", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Upload_DateTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.QuickDAL.My.MySettings.Default.Quick_ERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(16) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Co_ID, Item_ID, Parent_Item_ID, Party_ID, Address_ID, Item_Code, Item_"& _ 
                "Desc, Stamp_UserID, Stamp_DateTime, Upload_DateTime"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Invs_Item"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM [Inv_Item] WHERE (Co_Id = @Co_Id)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Size0, Ite"& _ 
                "m_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size"& _ 
                "12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStoc"& _ 
                "k_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Min"& _ 
                "Stock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Size02, It"& _ 
                "em_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Si"& _ 
                "ze06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_Sal"& _ 
                "eRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, "& _ 
                "Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inv"& _ 
                "_Item WHERE (Co_ID = @Co_ID OR @Co_ID = 0) AND (Stamp_DateTime > @Stamp_DateTime"& _ 
                ")"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Size0, Ite"& _ 
                "m_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size"& _ 
                "12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStoc"& _ 
                "k_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Min"& _ 
                "Stock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Size02, It"& _ 
                "em_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Si"& _ 
                "ze06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_Sal"& _ 
                "eRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, "& _ 
                "Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inv"& _ 
                "_Item WHERE (Co_ID = @Co_Id) AND (Upload_DateTime > @Upload_DateTime) ORDER BY C"& _ 
                "o_ID, Item_Code"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Size0, Ite"& _ 
                "m_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size"& _ 
                "12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStoc"& _ 
                "k_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Min"& _ 
                "Stock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Size02, It"& _ 
                "em_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Si"& _ 
                "ze06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_Sal"& _ 
                "eRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, "& _ 
                "Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inv"& _ 
                "_Item WHERE (Co_ID = @Co_ID) ORDER BY Co_ID, Item_Code"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT TOP (1) Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Si"& _ 
                "ze0, Item_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinSt"& _ 
                "ock_Size12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item"& _ 
                "_MinStock_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, "& _ 
                "Item_MinStock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Si"& _ 
                "ze02, Item_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_Sal"& _ 
                "eRate_Size06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, "& _ 
                "Item_SaleRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_"& _ 
                "Size13, Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime "& _ 
                "FROM Inv_Item WHERE (Co_ID = @Co_ID) ORDER BY Co_ID, Item_Code"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT TOP (1) Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Si"& _ 
                "ze0, Item_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinSt"& _ 
                "ock_Size12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item"& _ 
                "_MinStock_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, "& _ 
                "Item_MinStock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Si"& _ 
                "ze02, Item_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_Sal"& _ 
                "eRate_Size06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, "& _ 
                "Item_SaleRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_"& _ 
                "Size13, Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime "& _ 
                "FROM Inv_Item WHERE (Co_ID = @Co_ID) ORDER BY Co_ID DESC, Item_Code DESC"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Size0, Ite"& _ 
                "m_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size"& _ 
                "12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStoc"& _ 
                "k_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Min"& _ 
                "Stock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Size02, It"& _ 
                "em_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Si"& _ 
                "ze06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_Sal"& _ 
                "eRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, "& _ 
                "Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inv"& _ 
                "_Item WHERE (Co_ID = @Co_ID) ORDER BY Item_ID"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT TOP (1) Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Si"& _ 
                "ze0, Item_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinSt"& _ 
                "ock_Size12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item"& _ 
                "_MinStock_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, "& _ 
                "Item_MinStock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Si"& _ 
                "ze02, Item_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_Sal"& _ 
                "eRate_Size06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, "& _ 
                "Item_SaleRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_"& _ 
                "Size13, Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime "& _ 
                "FROM Inv_Item WHERE (Co_ID = @Co_ID) AND (Item_Code > @Item_Code) ORDER BY Co_ID"& _ 
                ", Item_Code"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Code", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "SELECT TOP (1) Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Si"& _ 
                "ze0, Item_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinSt"& _ 
                "ock_Size12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item"& _ 
                "_MinStock_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, "& _ 
                "Item_MinStock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Si"& _ 
                "ze02, Item_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_Sal"& _ 
                "eRate_Size06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, "& _ 
                "Item_SaleRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_"& _ 
                "Size13, Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime "& _ 
                "FROM Inv_Item WHERE (Co_ID = @Co_ID) AND (Item_Code < @Item_Code) ORDER BY Co_ID"& _ 
                " DESC, Item_Code DESC"
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Code", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(10).Connection = Me.Connection
            Me._commandCollection(10).CommandText = "SELECT        Inv_Item.Co_ID, Inv_Item.Item_ID, Inv_Item.Parent_Item_ID, Inv_Item"& _ 
                ".Party_ID, Inv_Item.Address_ID, Inv_Item.Item_Code, Inv_Item.Item_Desc, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                   Inv_Item.Item_SaleRate_Size01, Inv_Item.Item_SaleRate_Size02,"& _ 
                " Inv_Item.Item_SaleRate_Size03, Inv_Item.Item_SaleRate_Size04, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          Inv_Item.Item_SaleRate_Size05, Inv_Item.Item_SaleRate_Size06, Inv_Item"& _ 
                ".Item_SaleRate_Size07, Inv_Item.Item_SaleRate_Size08, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " Inv_Item.Item_SaleRate_Size09, Inv_Item.Item_SaleRate_Size10, Inv_Item.Item_Sal"& _ 
                "eRate_Size11, Inv_Item.Item_SaleRate_Size12, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inv_Item"& _ 
                ".Item_SaleRate_Size13, SUM(Inventory_Detail.Inventory_Qty_Size01) AS Item_MinSto"& _ 
                "ck_Size0, SUM(Inventory_Detail.Inventory_Qty_Size02) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "AS Item_MinStock_Size1, SUM(Inventory_Detail.Inventory_Qty_Size03) AS Item_MinSt"& _ 
                "ock_Size2, SUM(Inventory_Detail.Inventory_Qty_Size04) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " AS Item_MinStock_Size3, SUM(Inventory_Detail.Inventory_Qty_Size05) AS Item_MinS"& _ 
                "tock_Size4, SUM(Inventory_Detail.Inventory_Qty_Size06) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  AS Item_MinStock_Size5, SUM(Inventory_Detail.Inventory_Qty_Size07) AS Item_Min"& _ 
                "Stock_Size6, SUM(Inventory_Detail.Inventory_Qty_Size08) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   AS Item_MinStock_Size7, SUM(Inventory_Detail.Inventory_Qty_Size09) AS Item_Mi"& _ 
                "nStock_Size8, SUM(Inventory_Detail.Inventory_Qty_Size10) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    AS Item_MinStock_Size9, SUM(Inventory_Detail.Inventory_Qty_Size11) AS Item_M"& _ 
                "inStock_Size10, SUM(Inventory_Detail.Inventory_Qty_Size12) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      AS Item_MinStock_Size11, SUM(Inventory_Detail.Inventory_Qty_Size13) AS Ite"& _ 
                "m_MinStock_Size12, SUM(Inv_Item.Item_MinStock_Size13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " AS Item_MinStock_Size13, Inv_Item.Stamp_UserID, Inv_Item.Stamp_DateTime, Inv_It"& _ 
                "em.Upload_DateTime"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            Inv_Item LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       Inventory_Detail ON Inv_Item.Co_ID = Inventory_Detail.Co_ID AND Inv_Item."& _ 
                "Item_ID = Inventory_Detail.Item_ID LEFT JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inventory"& _ 
                " ON Inventory_Detail.Co_ID = Inventory.Co_ID AND Inventory_Detail.Inventory_ID ="& _ 
                " Inventory.Inventory_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (Inv_Item.Co_ID = @Co_ID) AND (Inv_Item.It"& _ 
                "em_Code >= @FromItem_Code OR @FromItem_Code = '') AND (Inv_Item.Item_Code <= @To"& _ 
                "Item_Code OR @ToItem_Code = '') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"AND (Inventory.Inventory_Date >= @FromDate OR"& _ 
                " @FromDate IS NULL) AND (Inventory.Inventory_Date <= @ToDate OR @ToDate IS NULL)"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"AND (LEN(Inv_Item.Item_Code) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ="&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "            (SELECT        MAX(LEN(Item_Code)) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "        FROM            Inv_Item AS Inv_Item_1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               W"& _ 
                "HERE        (Co_ID = @Co_ID)))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY Inv_Item.Co_ID, Inv_Item.Item_ID, Inv_I"& _ 
                "tem.Parent_Item_ID, Inv_Item.Party_ID, Inv_Item.Address_ID, Inv_Item.Item_Code, "& _ 
                "Inv_Item.Item_Desc, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inv_Item.Item_SaleRate_Size01, In"& _ 
                "v_Item.Item_SaleRate_Size02, Inv_Item.Item_SaleRate_Size03, Inv_Item.Item_SaleRa"& _ 
                "te_Size04, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inv_Item.Item_SaleRate_Size05, Inv_Item.It"& _ 
                "em_SaleRate_Size06, Inv_Item.Item_SaleRate_Size07, Inv_Item.Item_SaleRate_Size08"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Inv_Item.Item_SaleRate_Size09, Inv_Item.Item_SaleRa"& _ 
                "te_Size10, Inv_Item.Item_SaleRate_Size11, Inv_Item.Item_SaleRate_Size12, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    Inv_Item.Item_SaleRate_Size13, Inv_Item.Stamp_UserID, Inv_It"& _ 
                "em.Stamp_DateTime, Inv_Item.Upload_DateTime"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Inv_Item.Co_ID, Inv_Item.I"& _ 
                "tem_Code"
            Me._commandCollection(10).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FromItem_Code", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToItem_Code", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FromDate", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToDate", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(11).Connection = Me.Connection
            Me._commandCollection(11).CommandText = "SELECT Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Size0, Ite"& _ 
                "m_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size"& _ 
                "12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStoc"& _ 
                "k_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Min"& _ 
                "Stock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Size02, It"& _ 
                "em_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Si"& _ 
                "ze06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_Sal"& _ 
                "eRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, "& _ 
                "Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inv"& _ 
                "_Item WHERE (Co_ID = @Co_ID) AND (Item_Code >= @FromItem_Code) AND (Item_Code <="& _ 
                " @ToItem_Code) AND (LEN(Item_Code) = (SELECT MAX(LEN(Item_Code)) AS Expr1 FROM I"& _ 
                "nv_Item AS Inv_Item_4 WHERE (Co_ID = @Co_ID))) OR (Co_ID = @Co_ID) AND (Item_Cod"& _ 
                "e <= @ToItem_Code) AND (LEN(Item_Code) = (SELECT MAX(LEN(Item_Code)) AS Expr1 FR"& _ 
                "OM Inv_Item AS Inv_Item_3 WHERE (Co_ID = @Co_ID))) AND (@FromItem_Code = '') OR "& _ 
                "(Co_ID = @Co_ID) AND (Item_Code >= @FromItem_Code) AND (LEN(Item_Code) = (SELECT"& _ 
                " MAX(LEN(Item_Code)) AS Expr1 FROM Inv_Item AS Inv_Item_2 WHERE (Co_ID = @Co_ID)"& _ 
                ")) AND (@ToItem_Code = '') OR (Co_ID = @Co_ID) AND (LEN(Item_Code) = (SELECT MAX"& _ 
                "(LEN(Item_Code)) AS Expr1 FROM Inv_Item AS Inv_Item_1 WHERE (Co_ID = @Co_ID))) A"& _ 
                "ND (@FromItem_Code = '') AND (@ToItem_Code = '') ORDER BY Co_ID, Item_Code"
            Me._commandCollection(11).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FromItem_Code", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ToItem_Code", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(12).Connection = Me.Connection
            Me._commandCollection(12).CommandText = "SELECT Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Size0, Ite"& _ 
                "m_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size"& _ 
                "12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStoc"& _ 
                "k_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Min"& _ 
                "Stock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Size02, It"& _ 
                "em_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Si"& _ 
                "ze06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_Sal"& _ 
                "eRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, "& _ 
                "Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inv"& _ 
                "_Item WHERE (Co_ID = @Co_ID) AND (Item_ID = @Item_ID)"
            Me._commandCollection(12).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(13).Connection = Me.Connection
            Me._commandCollection(13).CommandText = "SELECT Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Size0, Ite"& _ 
                "m_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size"& _ 
                "12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStoc"& _ 
                "k_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Min"& _ 
                "Stock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Size02, It"& _ 
                "em_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Si"& _ 
                "ze06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_Sal"& _ 
                "eRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, "& _ 
                "Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inv"& _ 
                "_Item WHERE (Item_Code = @Item_Code) AND (Co_ID = @Co_ID)"
            Me._commandCollection(13).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Code", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(14) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(14).Connection = Me.Connection
            Me._commandCollection(14).CommandText = "SELECT Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Size0, Ite"& _ 
                "m_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size"& _ 
                "12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStoc"& _ 
                "k_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Min"& _ 
                "Stock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Size02, It"& _ 
                "em_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Si"& _ 
                "ze06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_Sal"& _ 
                "eRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, "& _ 
                "Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inv"& _ 
                "_Item WHERE (Co_ID = @Co_ID) AND (Item_ID = @Item_ID)"
            Me._commandCollection(14).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(15).Connection = Me.Connection
            Me._commandCollection(15).CommandText = "SELECT Address_ID, Co_ID, Item_Code, Item_Desc, Item_ID, Item_MinStock_Size0, Ite"& _ 
                "m_MinStock_Size1, Item_MinStock_Size10, Item_MinStock_Size11, Item_MinStock_Size"& _ 
                "12, Item_MinStock_Size13, Item_MinStock_Size2, Item_MinStock_Size3, Item_MinStoc"& _ 
                "k_Size4, Item_MinStock_Size5, Item_MinStock_Size6, Item_MinStock_Size7, Item_Min"& _ 
                "Stock_Size8, Item_MinStock_Size9, Item_SaleRate_Size01, Item_SaleRate_Size02, It"& _ 
                "em_SaleRate_Size03, Item_SaleRate_Size04, Item_SaleRate_Size05, Item_SaleRate_Si"& _ 
                "ze06, Item_SaleRate_Size07, Item_SaleRate_Size08, Item_SaleRate_Size09, Item_Sal"& _ 
                "eRate_Size10, Item_SaleRate_Size11, Item_SaleRate_Size12, Item_SaleRate_Size13, "& _ 
                "Parent_Item_ID, Party_ID, Stamp_DateTime, Stamp_UserID, Upload_DateTime FROM Inv"& _ 
                "_Item WHERE (Co_ID = @Co_ID) AND (Item_Code = @Item_Code)"
            Me._commandCollection(15).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Code", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(16) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(16).Connection = Me.Connection
            Me._commandCollection(16).CommandText = "SELECT     ISNULL(MAX(Item_ID), 0) + 1 AS NewID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Inv_Item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE    "& _ 
                " (Co_ID = @Co_ID)"
            Me._commandCollection(16).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetAll() As QuickInventoryDataSet.Invs_ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As QuickInventoryDataSet.Invs_ItemDataTable = New QuickInventoryDataSet.Invs_ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillAllUpdatedByCoIDDateTime(ByVal dataTable As QuickInventoryDataSet.Invs_ItemDataTable, ByVal Co_ID As Integer, ByVal Stamp_DateTime As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Stamp_DateTime,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllUpdatedByCoIDDateTime(ByVal Co_ID As Integer, ByVal Stamp_DateTime As Date) As QuickInventoryDataSet.Invs_ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Stamp_DateTime,Date)
            Dim dataTable As QuickInventoryDataSet.Invs_ItemDataTable = New QuickInventoryDataSet.Invs_ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillAllUploadedByCoIDDateTime(ByVal dataTable As QuickInventoryDataSet.Invs_ItemDataTable, ByVal Co_Id As Integer, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Integer)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllUploadedByCoIDDateTime(ByVal Co_Id As Integer, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As QuickInventoryDataSet.Invs_ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Integer)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As QuickInventoryDataSet.Invs_ItemDataTable = New QuickInventoryDataSet.Invs_ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCoID(ByVal dataTable As QuickInventoryDataSet.Invs_ItemDataTable, ByVal Co_ID As Short) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByCoID(ByVal Co_ID As Short) As QuickInventoryDataSet.Invs_ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            Dim dataTable As QuickInventoryDataSet.Invs_ItemDataTable = New QuickInventoryDataSet.Invs_ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillFirstByCoID(ByVal dataTable As QuickInventoryDataSet.Invs_ItemDataTable, ByVal Co_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetFirstByCoID(ByVal Co_ID As Integer) As QuickInventoryDataSet.Invs_ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.Invs_ItemDataTable = New QuickInventoryDataSet.Invs_ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillLastByCoID(ByVal dataTable As QuickInventoryDataSet.Invs_ItemDataTable, ByVal Co_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetLastByCoID(ByVal Co_ID As Integer) As QuickInventoryDataSet.Invs_ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.Invs_ItemDataTable = New QuickInventoryDataSet.Invs_ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillMinimumStockLevel(ByVal dataTable As QuickInventoryDataSet.Invs_ItemDataTable, ByVal Co_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetMinimumStockLevel(ByVal Co_ID As Integer) As QuickInventoryDataSet.Invs_ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.Invs_ItemDataTable = New QuickInventoryDataSet.Invs_ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillNextByCoIDItemCode(ByVal dataTable As QuickInventoryDataSet.Invs_ItemDataTable, ByVal Co_ID As Integer, ByVal Item_Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            If (Item_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Item_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Item_Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetNextByCoIDItemCode(ByVal Co_ID As Integer, ByVal Item_Code As String) As QuickInventoryDataSet.Invs_ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            If (Item_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Item_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Item_Code,String)
            End If
            Dim dataTable As QuickInventoryDataSet.Invs_ItemDataTable = New QuickInventoryDataSet.Invs_ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillPreviousByCoIDItemCode(ByVal dataTable As QuickInventoryDataSet.Invs_ItemDataTable, ByVal Co_ID As Integer, ByVal Item_Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            If (Item_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Item_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Item_Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetPreviousByCoIDItemCode(ByVal Co_ID As Integer, ByVal Item_Code As String) As QuickInventoryDataSet.Invs_ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            If (Item_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Item_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Item_Code,String)
            End If
            Dim dataTable As QuickInventoryDataSet.Invs_ItemDataTable = New QuickInventoryDataSet.Invs_ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillSaleInMinStockByCriteria(ByVal dataTable As QuickInventoryDataSet.Invs_ItemDataTable, ByVal Co_ID As Short, ByVal FromItem_Code As String, ByVal ToItem_Code As String, ByVal FromDate As Global.System.Nullable(Of Date), ByVal ToDate As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(10)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            If (FromItem_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FromItem_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FromItem_Code,String)
            End If
            If (ToItem_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ToItem_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ToItem_Code,String)
            End If
            If (FromDate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FromDate.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ToDate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(ToDate.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetSaleInMinStockByCriteria(ByVal Co_ID As Short, ByVal FromItem_Code As String, ByVal ToItem_Code As String, ByVal FromDate As Global.System.Nullable(Of Date), ByVal ToDate As Global.System.Nullable(Of Date)) As QuickInventoryDataSet.Invs_ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(10)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            If (FromItem_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FromItem_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FromItem_Code,String)
            End If
            If (ToItem_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ToItem_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ToItem_Code,String)
            End If
            If (FromDate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FromDate.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ToDate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(ToDate.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As QuickInventoryDataSet.Invs_ItemDataTable = New QuickInventoryDataSet.Invs_ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillWithoutCategoriesByCoIDItemCode(ByVal dataTable As QuickInventoryDataSet.Invs_ItemDataTable, ByVal Co_ID As Short, ByVal FromItem_Code As String, ByVal ToItem_Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(11)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            If (FromItem_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FromItem_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FromItem_Code,String)
            End If
            If (ToItem_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ToItem_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ToItem_Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetWithoutCategoriesByCoIDItemCode(ByVal Co_ID As Short, ByVal FromItem_Code As String, ByVal ToItem_Code As String) As QuickInventoryDataSet.Invs_ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(11)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Short)
            If (FromItem_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FromItem_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FromItem_Code,String)
            End If
            If (ToItem_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ToItem_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ToItem_Code,String)
            End If
            Dim dataTable As QuickInventoryDataSet.Invs_ItemDataTable = New QuickInventoryDataSet.Invs_ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByCoIDAndItemID(ByVal Co_ID As Integer, ByVal Item_ID As Integer) As QuickInventoryDataSet.Invs_ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(12)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Item_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.Invs_ItemDataTable = New QuickInventoryDataSet.Invs_ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByItemCodeAndCoID(ByVal Item_Code As String, ByVal Co_ID As Integer) As QuickInventoryDataSet.Invs_ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(13)
            If (Item_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Item_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Item_Code,String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Co_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.Invs_ItemDataTable = New QuickInventoryDataSet.Invs_ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As QuickInventoryDataSet.Invs_ItemDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As QuickInventoryDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Invs_Item")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Co_ID As Short, ByVal Original_Item_ID As Integer, ByVal Original_Parent_Item_ID As Integer, ByVal Original_Party_ID As Integer, ByVal Original_Address_ID As Integer, ByVal Original_Item_Code As String, ByVal Original_Item_Desc As String, ByVal Original_Stamp_UserID As Integer, ByVal Original_Stamp_DateTime As Date, ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Co_ID,Short)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Item_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Parent_Item_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Party_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Address_ID,Integer)
            If (Original_Item_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Item_Code")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Item_Code,String)
            End If
            If (Original_Item_Desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Item_Desc")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Item_Desc,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_Stamp_UserID,Integer)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Stamp_DateTime,Date)
            If (Original_Upload_DateTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Upload_DateTime.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Co_ID As Short, ByVal Item_ID As Integer, ByVal Parent_Item_ID As Integer, ByVal Party_ID As Integer, ByVal Address_ID As Integer, ByVal Item_Code As String, ByVal Item_Desc As String, ByVal Stamp_UserID As Integer, ByVal Stamp_DateTime As Date, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Item_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Parent_Item_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(Party_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(Address_ID,Integer)
            If (Item_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Item_Code")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Item_Code,String)
            End If
            If (Item_Desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Item_Desc")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Item_Desc,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(Stamp_UserID,Integer)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(Stamp_DateTime,Date)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Co_ID As Short,  _
                    ByVal Item_ID As Integer,  _
                    ByVal Parent_Item_ID As Integer,  _
                    ByVal Party_ID As Integer,  _
                    ByVal Address_ID As Integer,  _
                    ByVal Item_Code As String,  _
                    ByVal Item_Desc As String,  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Item_ID As Integer,  _
                    ByVal Original_Parent_Item_ID As Integer,  _
                    ByVal Original_Party_ID As Integer,  _
                    ByVal Original_Address_ID As Integer,  _
                    ByVal Original_Item_Code As String,  _
                    ByVal Original_Item_Desc As String,  _
                    ByVal Original_Stamp_UserID As Integer,  _
                    ByVal Original_Stamp_DateTime As Date,  _
                    ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Item_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Parent_Item_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Party_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Address_ID,Integer)
            If (Item_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Item_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Item_Code,String)
            End If
            If (Item_Desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Item_Desc")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Item_Desc,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Stamp_UserID,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Stamp_DateTime,Date)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_Item_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_Parent_Item_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_Party_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_Address_ID,Integer)
            If (Original_Item_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Item_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_Item_Code,String)
            End If
            If (Original_Item_Desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Item_Desc")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_Item_Desc,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_Stamp_UserID,Integer)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_Stamp_DateTime,Date)
            If (Original_Upload_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_Upload_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Parent_Item_ID As Integer,  _
                    ByVal Party_ID As Integer,  _
                    ByVal Address_ID As Integer,  _
                    ByVal Item_Code As String,  _
                    ByVal Item_Desc As String,  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Item_ID As Integer,  _
                    ByVal Original_Parent_Item_ID As Integer,  _
                    ByVal Original_Party_ID As Integer,  _
                    ByVal Original_Address_ID As Integer,  _
                    ByVal Original_Item_Code As String,  _
                    ByVal Original_Item_Desc As String,  _
                    ByVal Original_Stamp_UserID As Integer,  _
                    ByVal Original_Stamp_DateTime As Date,  _
                    ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_Co_ID, Original_Item_ID, Parent_Item_ID, Party_ID, Address_ID, Item_Code, Item_Desc, Stamp_UserID, Stamp_DateTime, Upload_DateTime, Original_Co_ID, Original_Item_ID, Original_Parent_Item_ID, Original_Party_ID, Original_Address_ID, Original_Item_Code, Original_Item_Desc, Original_Stamp_UserID, Original_Stamp_DateTime, Original_Upload_DateTime)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteAll(ByVal Co_Id As Short) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(Co_Id,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetDescByCoIDAndItemID(ByVal Co_ID As Integer, ByVal Item_ID As Integer) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(14)
            command.Parameters(0).Value = CType(Co_ID,Integer)
            command.Parameters(1).Value = CType(Item_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetItemDescByCoIdItemCode(ByVal Co_ID As Integer, ByVal Item_Code As String) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(15)
            command.Parameters(0).Value = CType(Co_ID,Integer)
            If (Item_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Item_Code")
            Else
                command.Parameters(1).Value = CType(Item_Code,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetNewItemIDByCoID(ByVal Co_ID As Integer) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(16)
            command.Parameters(0).Value = CType(Co_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Invs_Inventory_SalesInvoiceTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Invs_Inventory_SalesInvoice"
            tableMapping.ColumnMappings.Add("Co_ID", "Co_ID")
            tableMapping.ColumnMappings.Add("Inventory_ID", "Inventory_ID")
            tableMapping.ColumnMappings.Add("SalesMan_ID", "SalesMan_ID")
            tableMapping.ColumnMappings.Add("Stamp_DateTime", "Stamp_DateTime")
            tableMapping.ColumnMappings.Add("Stamp_UserID", "Stamp_UserID")
            tableMapping.ColumnMappings.Add("Discount", "Discount")
            tableMapping.ColumnMappings.Add("SalesTax", "SalesTax")
            tableMapping.ColumnMappings.Add("TotalCashReceived", "TotalCashReceived")
            tableMapping.ColumnMappings.Add("Upload_DateTime", "Upload_DateTime")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Invs_Inventory_SalesInvoice] WHERE (([Co_ID] = @Original_Co_ID) AND "& _ 
                "([Inventory_ID] = @Original_Inventory_ID) AND ([SalesMan_ID] = @Original_SalesMa"& _ 
                "n_ID) AND ([Discount] = @Original_Discount) AND ([SalesTax] = @Original_SalesTax"& _ 
                ") AND ([Stamp_DateTime] = @Original_Stamp_DateTime) AND ([Stamp_UserID] = @Origi"& _ 
                "nal_Stamp_UserID) AND ((@IsNull_TotalCashReceived = 1 AND [TotalCashReceived] IS"& _ 
                " NULL) OR ([TotalCashReceived] = @Original_TotalCashReceived)) AND ((@IsNull_Upl"& _ 
                "oad_DateTime = 1 AND [Upload_DateTime] IS NULL) OR ([Upload_DateTime] = @Origina"& _ 
                "l_Upload_DateTime)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SalesMan_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesMan_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Discount", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SalesTax", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesTax", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalCashReceived", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalCashReceived", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalCashReceived", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "TotalCashReceived", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Upload_DateTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Invs_Inventory_SalesInvoice] ([Co_ID], [Inventory_ID], [SalesMan_ID]"& _ 
                ", [Discount], [SalesTax], [Stamp_DateTime], [Stamp_UserID], [TotalCashReceived],"& _ 
                " [Upload_DateTime]) VALUES (@Co_ID, @Inventory_ID, @SalesMan_ID, @Discount, @Sal"& _ 
                "esTax, @Stamp_DateTime, @Stamp_UserID, @TotalCashReceived, @Upload_DateTime);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"S"& _ 
                "ELECT Co_ID, Inventory_ID, SalesMan_ID, Discount, SalesTax, Stamp_DateTime, Stam"& _ 
                "p_UserID, TotalCashReceived, Upload_DateTime FROM Invs_Inventory_SalesInvoice WH"& _ 
                "ERE (Co_ID = @Co_ID) AND (Inventory_ID = @Inventory_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalesMan_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesMan_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discount", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalesTax", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesTax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalCashReceived", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "TotalCashReceived", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Invs_Inventory_SalesInvoice] SET [Co_ID] = @Co_ID, [Inventory_ID] = @Inve"& _ 
                "ntory_ID, [SalesMan_ID] = @SalesMan_ID, [Discount] = @Discount, [SalesTax] = @Sa"& _ 
                "lesTax, [Stamp_DateTime] = @Stamp_DateTime, [Stamp_UserID] = @Stamp_UserID, [Tot"& _ 
                "alCashReceived] = @TotalCashReceived, [Upload_DateTime] = @Upload_DateTime WHERE"& _ 
                " (([Co_ID] = @Original_Co_ID) AND ([Inventory_ID] = @Original_Inventory_ID) AND "& _ 
                "([SalesMan_ID] = @Original_SalesMan_ID) AND ([Discount] = @Original_Discount) AN"& _ 
                "D ([SalesTax] = @Original_SalesTax) AND ([Stamp_DateTime] = @Original_Stamp_Date"& _ 
                "Time) AND ([Stamp_UserID] = @Original_Stamp_UserID) AND ((@IsNull_TotalCashRecei"& _ 
                "ved = 1 AND [TotalCashReceived] IS NULL) OR ([TotalCashReceived] = @Original_Tot"& _ 
                "alCashReceived)) AND ((@IsNull_Upload_DateTime = 1 AND [Upload_DateTime] IS NULL"& _ 
                ") OR ([Upload_DateTime] = @Original_Upload_DateTime)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, Inventory"& _ 
                "_ID, SalesMan_ID, Discount, SalesTax, Stamp_DateTime, Stamp_UserID, TotalCashRec"& _ 
                "eived, Upload_DateTime FROM Invs_Inventory_SalesInvoice WHERE (Co_ID = @Co_ID) A"& _ 
                "ND (Inventory_ID = @Inventory_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalesMan_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesMan_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discount", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalesTax", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesTax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalCashReceived", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "TotalCashReceived", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Inventory_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SalesMan_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesMan_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Discount", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SalesTax", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalesTax", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalCashReceived", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalCashReceived", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalCashReceived", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "TotalCashReceived", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Upload_DateTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.QuickDAL.My.MySettings.Default.Quick_ERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Co_ID, Inventory_ID, SalesMan_ID, Discount, SalesTax, Stamp_DateTime, "& _ 
                "Stamp_UserID, TotalCashReceived, Upload_DateTime"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Invs_Inventory_Sa"& _ 
                "lesInvoice"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM [Inventory_SalesInvoice] WHERE (Co_Id = @Co_Id)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT Co_ID, Discount, Inventory_ID, SalesMan_ID, SalesTax, Stamp_DateTime, Stam"& _ 
                "p_UserID, TotalCashReceived, Upload_DateTime FROM Inventory_SalesInvoice WHERE ("& _ 
                "Co_ID = @Co_Id) AND (Upload_DateTime > @Upload_DateTime)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT Co_ID, Discount, Inventory_ID, SalesMan_ID, SalesTax, Stamp_DateTime, Stam"& _ 
                "p_UserID, TotalCashReceived, Upload_DateTime FROM Inventory_SalesInvoice WHERE ("& _ 
                "Co_ID = @Co_ID) AND (Inventory_ID = @Inventory_ID)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inventory_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Inventory_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetAll() As QuickInventoryDataSet.Invs_Inventory_SalesInvoiceDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As QuickInventoryDataSet.Invs_Inventory_SalesInvoiceDataTable = New QuickInventoryDataSet.Invs_Inventory_SalesInvoiceDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillAllUploadedByCoIDDateTime(ByVal dataTable As QuickInventoryDataSet.Invs_Inventory_SalesInvoiceDataTable, ByVal Co_Id As Integer, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Integer)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllUploadedByCoIDDateTime(ByVal Co_Id As Integer, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As QuickInventoryDataSet.Invs_Inventory_SalesInvoiceDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Integer)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As QuickInventoryDataSet.Invs_Inventory_SalesInvoiceDataTable = New QuickInventoryDataSet.Invs_Inventory_SalesInvoiceDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCoIDInventoryID(ByVal dataTable As QuickInventoryDataSet.Invs_Inventory_SalesInvoiceDataTable, ByVal Co_ID As Integer, ByVal Inventory_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByCoIDInventoryID(ByVal Co_ID As Integer, ByVal Inventory_ID As Integer) As QuickInventoryDataSet.Invs_Inventory_SalesInvoiceDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.Invs_Inventory_SalesInvoiceDataTable = New QuickInventoryDataSet.Invs_Inventory_SalesInvoiceDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As QuickInventoryDataSet.Invs_Inventory_SalesInvoiceDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As QuickInventoryDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Invs_Inventory_SalesInvoice")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Co_ID As Short, ByVal Original_Inventory_ID As Integer, ByVal Original_SalesMan_ID As Integer, ByVal Original_Discount As Decimal, ByVal Original_SalesTax As Decimal, ByVal Original_Stamp_DateTime As Date, ByVal Original_Stamp_UserID As Integer, ByVal Original_TotalCashReceived As Global.System.Nullable(Of Decimal), ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Co_ID,Short)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Inventory_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_SalesMan_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Discount,Decimal)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_SalesTax,Decimal)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Stamp_DateTime,Date)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Stamp_UserID,Integer)
            If (Original_TotalCashReceived.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_TotalCashReceived.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_Upload_DateTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Upload_DateTime.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Co_ID As Short, ByVal Inventory_ID As Integer, ByVal SalesMan_ID As Integer, ByVal Discount As Decimal, ByVal SalesTax As Decimal, ByVal Stamp_DateTime As Date, ByVal Stamp_UserID As Integer, ByVal TotalCashReceived As Global.System.Nullable(Of Decimal), ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(SalesMan_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(Discount,Decimal)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(SalesTax,Decimal)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(Stamp_DateTime,Date)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(Stamp_UserID,Integer)
            If (TotalCashReceived.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(TotalCashReceived.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Co_ID As Short,  _
                    ByVal Inventory_ID As Integer,  _
                    ByVal SalesMan_ID As Integer,  _
                    ByVal Discount As Decimal,  _
                    ByVal SalesTax As Decimal,  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal TotalCashReceived As Global.System.Nullable(Of Decimal),  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Inventory_ID As Integer,  _
                    ByVal Original_SalesMan_ID As Integer,  _
                    ByVal Original_Discount As Decimal,  _
                    ByVal Original_SalesTax As Decimal,  _
                    ByVal Original_Stamp_DateTime As Date,  _
                    ByVal Original_Stamp_UserID As Integer,  _
                    ByVal Original_TotalCashReceived As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Inventory_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SalesMan_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Discount,Decimal)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(SalesTax,Decimal)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Stamp_DateTime,Date)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Stamp_UserID,Integer)
            If (TotalCashReceived.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(TotalCashReceived.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_Inventory_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_SalesMan_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_Discount,Decimal)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_SalesTax,Decimal)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_Stamp_DateTime,Date)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_Stamp_UserID,Integer)
            If (Original_TotalCashReceived.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_TotalCashReceived.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_Upload_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_Upload_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SalesMan_ID As Integer,  _
                    ByVal Discount As Decimal,  _
                    ByVal SalesTax As Decimal,  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal TotalCashReceived As Global.System.Nullable(Of Decimal),  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Inventory_ID As Integer,  _
                    ByVal Original_SalesMan_ID As Integer,  _
                    ByVal Original_Discount As Decimal,  _
                    ByVal Original_SalesTax As Decimal,  _
                    ByVal Original_Stamp_DateTime As Date,  _
                    ByVal Original_Stamp_UserID As Integer,  _
                    ByVal Original_TotalCashReceived As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_Co_ID, Original_Inventory_ID, SalesMan_ID, Discount, SalesTax, Stamp_DateTime, Stamp_UserID, TotalCashReceived, Upload_DateTime, Original_Co_ID, Original_Inventory_ID, Original_SalesMan_ID, Original_Discount, Original_SalesTax, Original_Stamp_DateTime, Original_Stamp_UserID, Original_TotalCashReceived, Original_Upload_DateTime)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteAll(ByVal Co_Id As Short) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(Co_Id,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Invs_ItemSummaryTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Invs_ItemSummary"
            tableMapping.ColumnMappings.Add("Co_ID", "Co_ID")
            tableMapping.ColumnMappings.Add("Source_First_ID", "Source_First_ID")
            tableMapping.ColumnMappings.Add("Source_Second_ID", "Source_Second_ID")
            tableMapping.ColumnMappings.Add("Source_DocumentType_ID", "Source_DocumentType_ID")
            tableMapping.ColumnMappings.Add("Stamp_UserID", "Stamp_UserID")
            tableMapping.ColumnMappings.Add("Stamp_DateTime", "Stamp_DateTime")
            tableMapping.ColumnMappings.Add("Upload_DateTime", "Upload_DateTime")
            tableMapping.ColumnMappings.Add("Warehouse_ID", "Warehouse_ID")
            tableMapping.ColumnMappings.Add("ItemSize_ID", "ItemSize_ID")
            tableMapping.ColumnMappings.Add("ItemQty", "ItemQty")
            tableMapping.ColumnMappings.Add("ItemValue", "ItemValue")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Invs_ItemSummary] WHERE (([Co_ID] = @Original_Co_ID) AND ([Source_Fi"& _ 
                "rst_ID] = @Original_Source_First_ID) AND ([Source_Second_ID] = @Original_Source_"& _ 
                "Second_ID) AND ([Source_DocumentType_ID] = @Original_Source_DocumentType_ID) AND"& _ 
                " ([Warehouse_ID] = @Original_Warehouse_ID))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Source_First_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_First_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Source_Second_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Second_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Source_DocumentType_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Warehouse_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Invs_ItemSummary] ([Co_ID], [Source_First_ID], [Source_Second_ID], ["& _ 
                "Source_DocumentType_ID], [Warehouse_ID], [ItemSize_ID], [ItemQty], [ItemValue], "& _ 
                "[Stamp_UserID], [Stamp_DateTime], [Upload_DateTime]) VALUES (@Co_ID, @Source_Fir"& _ 
                "st_ID, @Source_Second_ID, @Source_DocumentType_ID, @Warehouse_ID, @ItemSize_ID, "& _ 
                "@ItemQty, @ItemValue, @Stamp_UserID, @Stamp_DateTime, @Upload_DateTime);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT"& _ 
                " Co_ID, Source_First_ID, Source_Second_ID, Source_DocumentType_ID, Warehouse_ID,"& _ 
                " ItemSize_ID, ItemQty, ItemValue, Stamp_UserID, Stamp_DateTime, Upload_DateTime "& _ 
                "FROM Invs_ItemSummary WHERE (Co_ID = @Co_ID) AND (Source_DocumentType_ID = @Sour"& _ 
                "ce_DocumentType_ID) AND (Source_First_ID = @Source_First_ID) AND (Source_Second_"& _ 
                "ID = @Source_Second_ID) AND (Warehouse_ID = @Warehouse_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_First_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_First_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Second_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Second_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_DocumentType_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Warehouse_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSize_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemSize_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemQty", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemValue", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemValue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Invs_ItemSummary] SET [Co_ID] = @Co_ID, [Source_First_ID] = @Source_First"& _ 
                "_ID, [Source_Second_ID] = @Source_Second_ID, [Source_DocumentType_ID] = @Source_"& _ 
                "DocumentType_ID, [Warehouse_ID] = @Warehouse_ID, [ItemSize_ID] = @ItemSize_ID, ["& _ 
                "ItemQty] = @ItemQty, [ItemValue] = @ItemValue, [Stamp_UserID] = @Stamp_UserID, ["& _ 
                "Stamp_DateTime] = @Stamp_DateTime, [Upload_DateTime] = @Upload_DateTime WHERE (("& _ 
                "[Co_ID] = @Original_Co_ID) AND ([Source_First_ID] = @Original_Source_First_ID) A"& _ 
                "ND ([Source_Second_ID] = @Original_Source_Second_ID) AND ([Source_DocumentType_I"& _ 
                "D] = @Original_Source_DocumentType_ID) AND ([Warehouse_ID] = @Original_Warehouse"& _ 
                "_ID));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, Source_First_ID, Source_Second_ID, Source_DocumentType_ID,"& _ 
                " Warehouse_ID, ItemSize_ID, ItemQty, ItemValue, Stamp_UserID, Stamp_DateTime, Up"& _ 
                "load_DateTime FROM Invs_ItemSummary WHERE (Co_ID = @Co_ID) AND (Source_DocumentT"& _ 
                "ype_ID = @Source_DocumentType_ID) AND (Source_First_ID = @Source_First_ID) AND ("& _ 
                "Source_Second_ID = @Source_Second_ID) AND (Warehouse_ID = @Warehouse_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_First_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_First_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Second_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Second_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_DocumentType_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Warehouse_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSize_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemSize_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemQty", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemValue", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ItemValue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Source_First_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_First_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Source_Second_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Second_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Source_DocumentType_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Warehouse_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.QuickDAL.My.MySettings.Default.Quick_ERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Co_ID, Source_First_ID, Source_Second_ID, Source_DocumentType_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"W"& _ 
                "arehouse_ID, ItemSize_ID, ItemQty, ItemValue, Stamp_UserID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Stamp_DateTime, U"& _ 
                "pload_DateTime"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Invs_ItemSummary"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM [Inv_ItemSummary] WHERE (Co_Id = @Co_Id)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT S.Co_ID, Source_First_ID, Source_Second_ID, Source_DocumentType_ID, Docume"& _ 
                "ntType_Desc AS Summary_Type, ItemSummary_Size01, ItemSummary_Size02, ItemSummary"& _ 
                "_Size03, ItemSummary_Size04, ItemSummary_Size05, ItemSummary_Size06, ItemSummary"& _ 
                "_Size07, ItemSummary_Size08, ItemSummary_Size09, ItemSummary_Size10, ItemSummary"& _ 
                "_Size11, ItemSummary_Size12, ItemSummary_Size13, S.Stamp_UserID, S.Stamp_DateTim"& _ 
                "e, S.Upload_DateTime, ItemSummary_Size01 + ItemSummary_Size02 + ItemSummary_Size"& _ 
                "03 + ItemSummary_Size04 + ItemSummary_Size05 + ItemSummary_Size06 + ItemSummary_"& _ 
                "Size07 + ItemSummary_Size08 + ItemSummary_Size09 + ItemSummary_Size10 + ItemSumm"& _ 
                "ary_Size11 + ItemSummary_Size12 + ItemSummary_Size13 AS Total "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM Inv_ItemSum"& _ 
                "mary S"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    LEFT OUTER JOIN Common_DocumentType ON Source_DocumentType_ID = Docu"& _ 
                "mentType_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (S.Co_ID = @Co_Id) AND (S.Upload_DateTime > @Upload_DateTime)"& _ 
                ""
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_Id", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT S.Co_ID, Source_First_ID, Source_Second_ID, Source_DocumentType_ID, Wareho"& _ 
                "use_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", DocumentType_Desc AS Summary_Type, ItemSummary_Size01, ItemSummary_Si"& _ 
                "ze02"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", ItemSummary_Size03, ItemSummary_Size04, ItemSummary_Size05, ItemSummary"& _ 
                "_Size06"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", ItemSummary_Size07, ItemSummary_Size08, ItemSummary_Size09, ItemSumm"& _ 
                "ary_Size10"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", ItemSummary_Size11, ItemSummary_Size12, ItemSummary_Size13, S.Sta"& _ 
                "mp_UserID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&", S.Stamp_DateTime, S.Upload_DateTime, ItemSummary_Size01 + ItemSumm"& _ 
                "ary_Size02 "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"+ ItemSummary_Size03 + ItemSummary_Size04 + ItemSummary_Size05 + I"& _ 
                "temSummary_Size06 "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"+ ItemSummary_Size07 + ItemSummary_Size08 + ItemSummary_Siz"& _ 
                "e09 + ItemSummary_Size10 "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"+ ItemSummary_Size11 + ItemSummary_Size12 + ItemSumm"& _ 
                "ary_Size13 AS Total "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM Inv_ItemSummary S"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    LEFT OUTER JOIN Common_Documen"& _ 
                "tType ON Source_DocumentType_ID = DocumentType_ID "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (S.Co_ID = @Co_ID) AND"& _ 
                " (Source_First_ID = @Source_First_ID) AND (Source_Second_ID = @Source_Second_ID)"& _ 
                " AND (Source_DocumentType_ID = @Source_DocumentType_ID) AND Warehouse_ID = @Ware"& _ 
                "house_ID"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_First_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_First_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_Second_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_Second_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Source_DocumentType_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Source_DocumentType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Warehouse_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Warehouse_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetAll() As QuickInventoryDataSet.Invs_ItemSummaryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As QuickInventoryDataSet.Invs_ItemSummaryDataTable = New QuickInventoryDataSet.Invs_ItemSummaryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillAllUploadedByCoIDDateTime(ByVal dataTable As QuickInventoryDataSet.Invs_ItemSummaryDataTable, ByVal Co_Id As Short, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Short)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllUploadedByCoIDDateTime(ByVal Co_Id As Short, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As QuickInventoryDataSet.Invs_ItemSummaryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_Id,Short)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As QuickInventoryDataSet.Invs_ItemSummaryDataTable = New QuickInventoryDataSet.Invs_ItemSummaryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByPrimaryKey(ByVal Co_ID As Integer, ByVal Source_First_ID As Integer, ByVal Source_Second_ID As Integer, ByVal Source_DocumentType_ID As Integer, ByVal Warehouse_ID As Integer) As QuickInventoryDataSet.Invs_ItemSummaryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Co_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Source_First_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(Source_Second_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(Source_DocumentType_ID,Integer)
            Me.Adapter.SelectCommand.Parameters(4).Value = CType(Warehouse_ID,Integer)
            Dim dataTable As QuickInventoryDataSet.Invs_ItemSummaryDataTable = New QuickInventoryDataSet.Invs_ItemSummaryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As QuickInventoryDataSet.Invs_ItemSummaryDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As QuickInventoryDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Invs_ItemSummary")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Co_ID As Short, ByVal Original_Source_First_ID As Integer, ByVal Original_Source_Second_ID As Integer, ByVal Original_Source_DocumentType_ID As Integer, ByVal Original_Warehouse_ID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Co_ID,Short)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Source_First_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Source_Second_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Source_DocumentType_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Warehouse_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Co_ID As Short, ByVal Source_First_ID As Integer, ByVal Source_Second_ID As Integer, ByVal Source_DocumentType_ID As Integer, ByVal Warehouse_ID As Integer, ByVal ItemSize_ID As Short, ByVal ItemQty As Double, ByVal ItemValue As Decimal, ByVal Stamp_UserID As Integer, ByVal Stamp_DateTime As Date, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Source_First_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Source_Second_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(Source_DocumentType_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(Warehouse_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(ItemSize_ID,Short)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(ItemQty,Double)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(ItemValue,Decimal)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(Stamp_UserID,Integer)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(Stamp_DateTime,Date)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Co_ID As Short,  _
                    ByVal Source_First_ID As Integer,  _
                    ByVal Source_Second_ID As Integer,  _
                    ByVal Source_DocumentType_ID As Integer,  _
                    ByVal Warehouse_ID As Integer,  _
                    ByVal ItemSize_ID As Short,  _
                    ByVal ItemQty As Double,  _
                    ByVal ItemValue As Decimal,  _
                    ByVal Stamp_UserID As Integer,  _
                    ByVal Stamp_DateTime As Date,  _
                    ByVal Upload_DateTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_Co_ID As Short,  _
                    ByVal Original_Source_First_ID As Integer,  _
                    ByVal Original_Source_Second_ID As Integer,  _
                    ByVal Original_Source_DocumentType_ID As Integer,  _
                    ByVal Original_Warehouse_ID As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Source_First_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Source_Second_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Source_DocumentType_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Warehouse_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ItemSize_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ItemQty,Double)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ItemValue,Decimal)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Stamp_UserID,Integer)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Stamp_DateTime,Date)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_Source_First_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_Source_Second_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_Source_DocumentType_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_Warehouse_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ItemSize_ID As Short, ByVal ItemQty As Double, ByVal ItemValue As Decimal, ByVal Stamp_UserID As Integer, ByVal Stamp_DateTime As Date, ByVal Upload_DateTime As Global.System.Nullable(Of Date), ByVal Original_Co_ID As Short, ByVal Original_Source_First_ID As Integer, ByVal Original_Source_Second_ID As Integer, ByVal Original_Source_DocumentType_ID As Integer, ByVal Original_Warehouse_ID As Integer) As Integer
            Return Me.Update(Original_Co_ID, Original_Source_First_ID, Original_Source_Second_ID, Original_Source_DocumentType_ID, Original_Warehouse_ID, ItemSize_ID, ItemQty, ItemValue, Stamp_UserID, Stamp_DateTime, Upload_DateTime, Original_Co_ID, Original_Source_First_ID, Original_Source_Second_ID, Original_Source_DocumentType_ID, Original_Warehouse_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteAll(ByVal Co_Id As Short) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(Co_Id,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Inv_ItemSizeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Inv_ItemSize"
            tableMapping.ColumnMappings.Add("Co_ID", "Co_ID")
            tableMapping.ColumnMappings.Add("ItemSize_ID", "ItemSize_ID")
            tableMapping.ColumnMappings.Add("Stamp_UserID", "Stamp_UserID")
            tableMapping.ColumnMappings.Add("Stamp_DateTime", "Stamp_DateTime")
            tableMapping.ColumnMappings.Add("Upload_DateTime", "Upload_DateTime")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Inv_ItemSize] WHERE (([Co_ID] = @Original_Co_ID) AND ([ItemSize_ID] "& _ 
                "= @Original_ItemSize_ID) AND ([Stamp_UserID] = @Original_Stamp_UserID) AND ([Sta"& _ 
                "mp_DateTime] = @Original_Stamp_DateTime) AND ((@IsNull_Upload_DateTime = 1 AND ["& _ 
                "Upload_DateTime] IS NULL) OR ([Upload_DateTime] = @Original_Upload_DateTime)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ItemSize_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemSize_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Upload_DateTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Inv_ItemSize] ([Co_ID], [ItemSize_ID], [Stamp_UserID], [Stamp_DateTi"& _ 
                "me], [Upload_DateTime]) VALUES (@Co_ID, @ItemSize_ID, @Stamp_UserID, @Stamp_Date"& _ 
                "Time, @Upload_DateTime);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Co_ID, ItemSize_ID, Stamp_UserID, Stamp_DateTim"& _ 
                "e, Upload_DateTime FROM Inv_ItemSize WHERE (Co_ID = @Co_ID) AND (ItemSize_ID = @"& _ 
                "ItemSize_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSize_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemSize_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Inv_ItemSize] SET [Co_ID] = @Co_ID, [ItemSize_ID] = @ItemSize_ID, [Stamp_"& _ 
                "UserID] = @Stamp_UserID, [Stamp_DateTime] = @Stamp_DateTime, [Upload_DateTime] ="& _ 
                " @Upload_DateTime WHERE (([Co_ID] = @Original_Co_ID) AND ([ItemSize_ID] = @Origi"& _ 
                "nal_ItemSize_ID) AND ([Stamp_UserID] = @Original_Stamp_UserID) AND ([Stamp_DateT"& _ 
                "ime] = @Original_Stamp_DateTime) AND ((@IsNull_Upload_DateTime = 1 AND [Upload_D"& _ 
                "ateTime] IS NULL) OR ([Upload_DateTime] = @Original_Upload_DateTime)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT "& _ 
                "Co_ID, ItemSize_ID, Stamp_UserID, Stamp_DateTime, Upload_DateTime FROM Inv_ItemS"& _ 
                "ize WHERE (Co_ID = @Co_ID) AND (ItemSize_ID = @ItemSize_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemSize_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemSize_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Co_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Co_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ItemSize_ID", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemSize_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_UserID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stamp_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stamp_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Upload_DateTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Upload_DateTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upload_DateTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.QuickDAL.My.MySettings.Default.Quick_ERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Co_ID, ItemSize_ID, Stamp_UserID, Stamp_DateTime, Upload_DateTime"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FRO"& _ 
                "M         Inv_ItemSize"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetAll() As QuickInventoryDataSet.Inv_ItemSizeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As QuickInventoryDataSet.Inv_ItemSizeDataTable = New QuickInventoryDataSet.Inv_ItemSizeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As QuickInventoryDataSet.Inv_ItemSizeDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As QuickInventoryDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Inv_ItemSize")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Co_ID As Short, ByVal Original_ItemSize_ID As Short, ByVal Original_Stamp_UserID As Integer, ByVal Original_Stamp_DateTime As Date, ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Co_ID,Short)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ItemSize_ID,Short)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Stamp_UserID,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Stamp_DateTime,Date)
            If (Original_Upload_DateTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Upload_DateTime.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Co_ID As Short, ByVal ItemSize_ID As Short, ByVal Stamp_UserID As Integer, ByVal Stamp_DateTime As Date, ByVal Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(ItemSize_ID,Short)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Stamp_UserID,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(Stamp_DateTime,Date)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Co_ID As Short, ByVal ItemSize_ID As Short, ByVal Stamp_UserID As Integer, ByVal Stamp_DateTime As Date, ByVal Upload_DateTime As Global.System.Nullable(Of Date), ByVal Original_Co_ID As Short, ByVal Original_ItemSize_ID As Short, ByVal Original_Stamp_UserID As Integer, ByVal Original_Stamp_DateTime As Date, ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ItemSize_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Stamp_UserID,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Stamp_DateTime,Date)
            If (Upload_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Upload_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_Co_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ItemSize_ID,Short)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Stamp_UserID,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_Stamp_DateTime,Date)
            If (Original_Upload_DateTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_Upload_DateTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Stamp_UserID As Integer, ByVal Stamp_DateTime As Date, ByVal Upload_DateTime As Global.System.Nullable(Of Date), ByVal Original_Co_ID As Short, ByVal Original_ItemSize_ID As Short, ByVal Original_Stamp_UserID As Integer, ByVal Original_Stamp_DateTime As Date, ByVal Original_Upload_DateTime As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_Co_ID, Original_ItemSize_ID, Stamp_UserID, Stamp_DateTime, Upload_DateTime, Original_Co_ID, Original_ItemSize_ID, Original_Stamp_UserID, Original_Stamp_DateTime, Original_Upload_DateTime)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class StockInquiryTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "StockInquiry"
            tableMapping.ColumnMappings.Add("Co_ID", "Co_ID")
            tableMapping.ColumnMappings.Add("Co_Code", "Co_Code")
            tableMapping.ColumnMappings.Add("Item_ID", "Item_ID")
            tableMapping.ColumnMappings.Add("Item_Code", "Item_Code")
            tableMapping.ColumnMappings.Add("Item_Category", "Item_Category")
            tableMapping.ColumnMappings.Add("Item_Desc", "Item_Desc")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size01", "Inventory_Qty_Size01")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size02", "Inventory_Qty_Size02")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size03", "Inventory_Qty_Size03")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size04", "Inventory_Qty_Size04")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size05", "Inventory_Qty_Size05")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size06", "Inventory_Qty_Size06")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size07", "Inventory_Qty_Size07")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size08", "Inventory_Qty_Size08")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size09", "Inventory_Qty_Size09")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size10", "Inventory_Qty_Size10")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size11", "Inventory_Qty_Size11")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size12", "Inventory_Qty_Size12")
            tableMapping.ColumnMappings.Add("Inventory_Qty_Size13", "Inventory_Qty_Size13")
            tableMapping.ColumnMappings.Add("Qty_Total", "Qty_Total")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.QuickDAL.My.MySettings.Default.Quick_ERPConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Co_ID, Co_Code, Item_ID, Item_Code, Item_Category, Item_Desc, Inventory_Qt"& _ 
                "y_Size01, Inventory_Qty_Size02, Inventory_Qty_Size03, Inventory_Qty_Size04, Inve"& _ 
                "ntory_Qty_Size05, Inventory_Qty_Size06, Inventory_Qty_Size07, Inventory_Qty_Size"& _ 
                "08, Inventory_Qty_Size09, Inventory_Qty_Size10, Inventory_Qty_Size11, Inventory_"& _ 
                "Qty_Size12, Inventory_Qty_Size13, Inventory_Qty_Size01 + Inventory_Qty_Size02 + "& _ 
                "Inventory_Qty_Size03 + Inventory_Qty_Size04 + Inventory_Qty_Size05 + Inventory_Q"& _ 
                "ty_Size06 + Inventory_Qty_Size07 + Inventory_Qty_Size08 + Inventory_Qty_Size09 +"& _ 
                " Inventory_Qty_Size10 + Inventory_Qty_Size11 + Inventory_Qty_Size12 + Inventory_"& _ 
                "Qty_Size13 AS Qty_Total FROM vwStockInquiry WHERE (Item_Code = @Item_Code)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Code", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.QuickDAL.My.MySettings.Default.Quick_ERPConnectionString)
            Me._commandCollection(1).CommandText = "dbo.spGetMinimumStockLevelByItemCodeCompanies"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemCode", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Companies", Global.System.Data.SqlDbType.VarChar, 8000, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.QuickDAL.My.MySettings.Default.Quick_ERPConnectionString)
            Me._commandCollection(2).CommandText = "dbo.spGetStockByItemCodeCompanies"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemCode", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Companies", Global.System.Data.SqlDbType.VarChar, 8000, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetByItemCode(ByVal Item_Code As String) As QuickInventoryDataSet.StockInquiryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Item_Code Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Item_Code,String)
            End If
            Dim dataTable As QuickInventoryDataSet.StockInquiryDataTable = New QuickInventoryDataSet.StockInquiryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetMinimumStockLevelByItemCodeCompanies(ByVal ItemCode As String, ByVal Companies As String) As QuickInventoryDataSet.StockInquiryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (ItemCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ItemCode,String)
            End If
            If (Companies Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Companies,String)
            End If
            Dim dataTable As QuickInventoryDataSet.StockInquiryDataTable = New QuickInventoryDataSet.StockInquiryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetStockByItemCodeCompanies(ByVal ItemCode As String, ByVal Companies As String) As QuickInventoryDataSet.StockInquiryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (ItemCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ItemCode,String)
            End If
            If (Companies Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Companies,String)
            End If
            Dim dataTable As QuickInventoryDataSet.StockInquiryDataTable = New QuickInventoryDataSet.StockInquiryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
