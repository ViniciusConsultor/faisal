IF EXISTS (SELECT o.[NAME] FROM sysobjects o WHERE o.[Name] ='Inv_Stock')
	exec sp_rename 'Inv_Stock', 'Inv_ItemSummary'
go
IF EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Inv_ItemSummary' AND c.[Name]='Item_Stock_Size01')
	exec sp_rename 'Inv_ItemSummary.Item_Stock_Size01', 'ItemSummary_Size01'
go
IF EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Inv_ItemSummary' AND c.[Name]='Item_Stock_Size02')
	exec sp_rename 'Inv_ItemSummary.Item_Stock_Size02', 'ItemSummary_Size02'
go
IF EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Inv_ItemSummary' AND c.[Name]='Item_Stock_Size03')
	exec sp_rename 'Inv_ItemSummary.Item_Stock_Size03', 'ItemSummary_Size03'
go
IF EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Inv_ItemSummary' AND c.[Name]='Item_Stock_Size04')
	exec sp_rename 'Inv_ItemSummary.Item_Stock_Size04', 'ItemSummary_Size04'
go
IF EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Inv_ItemSummary' AND c.[Name]='Item_Stock_Size05')
	exec sp_rename 'Inv_ItemSummary.Item_Stock_Size05', 'ItemSummary_Size05'
go
IF EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Inv_ItemSummary' AND c.[Name]='Item_Stock_Size06')
	exec sp_rename 'Inv_ItemSummary.Item_Stock_Size06', 'ItemSummary_Size06'
go
IF EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Inv_ItemSummary' AND c.[Name]='Item_Stock_Size07')
	exec sp_rename 'Inv_ItemSummary.Item_Stock_Size07', 'ItemSummary_Size07'
go
IF EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Inv_ItemSummary' AND c.[Name]='Item_Stock_Size08')
	exec sp_rename 'Inv_ItemSummary.Item_Stock_Size08', 'ItemSummary_Size08'
go
IF EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Inv_ItemSummary' AND c.[Name]='Item_Stock_Size09')
	exec sp_rename 'Inv_ItemSummary.Item_Stock_Size09', 'ItemSummary_Size09'
go
IF EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Inv_ItemSummary' AND c.[Name]='Item_Stock_Size10')
	exec sp_rename 'Inv_ItemSummary.Item_Stock_Size10', 'ItemSummary_Size10'
go
IF EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Inv_ItemSummary' AND c.[Name]='Item_Stock_Size11')
	exec sp_rename 'Inv_ItemSummary.Item_Stock_Size11', 'ItemSummary_Size11'
go
IF EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Inv_ItemSummary' AND c.[Name]='Item_Stock_Size12')
	exec sp_rename 'Inv_ItemSummary.Item_Stock_Size12', 'ItemSummary_Size12'
go
IF EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Inv_ItemSummary' AND c.[Name]='Item_Stock_Size13')
	exec sp_rename 'Inv_ItemSummary.Item_Stock_Size13', 'ItemSummary_Size13'
go
IF NOT EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Common_DocumentType' AND c.[Name]='Stamp_DateTime') 
	ALTER TABLE Common_DocumentType ADD Stamp_DateTime DATETIME NULL
go
IF NOT EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Common_DocumentType' AND c.[Name]='Stamp_UserID') 
	ALTER TABLE Common_DocumentType ADD Stamp_UserID DATETIME NULL
go
IF NOT EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Common_DocumentType' AND c.[Name]='Upload_DateTime') 
	ALTER TABLE Common_DocumentType ADD Upload_DateTime DATETIME NULL
go
UPDATE Common_DocumentType SET Stamp_DateTime = '2008-01-01' WHERE Stamp_DateTime IS NULL
go
UPDATE Common_DocumentType SET Stamp_UserID = 0 WHERE Stamp_UserID IS NULL
go
IF EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Common_DocumentType' AND c.[Name]='Stamp_DateTime') 
	ALTER TABLE Common_DocumentType ALTER COLUMN Stamp_DateTime DATETIME NOT NULL
go
IF EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Common_DocumentType' AND c.[Name]='Stamp_UserID') 
	ALTER TABLE Common_DocumentType ALTER COLUMN Stamp_UserID DATETIME NOT NULL
go
IF NOT EXISTS (SELECT DocumentType_ID FROM Common_DocumentType WHERE DocumentType_ID = 15) 
	INSERT INTO Common_DocumentType
			   (DocumentType_ID
			   ,DocumentType_Desc
			   ,Stamp_DateTime
			   ,Stamp_UserID
			   ,Upload_DateTime)
		 VALUES
			   (15, 'Stock', GetDate(), 0, NULL)
GO
IF NOT EXISTS (SELECT DocumentType_ID FROM Common_DocumentType WHERE DocumentType_ID = 16)
	INSERT INTO Common_DocumentType
			   (DocumentType_ID
			   ,DocumentType_Desc
			   ,Stamp_DateTime
			   ,Stamp_UserID
			   ,Upload_DateTime)
		 VALUES
			   (16, 'In', GetDate(), 0, NULL)
GO
IF NOT EXISTS (SELECT DocumentType_ID FROM Common_DocumentType WHERE DocumentType_ID = 17)
	INSERT INTO Common_DocumentType
			   (DocumentType_ID
			   ,DocumentType_Desc
			   ,Stamp_DateTime
			   ,Stamp_UserID
			   ,Upload_DateTime)
		 VALUES
			   (17, 'Out', GetDate(), 0, NULL)
GO
IF EXISTS (SELECT o.[NAME] FROM sysobjects o WHERE o.[Name] ='trigUpdateStock')
	DROP TRIGGER [trigUpdateStock]
GO
IF EXISTS (SELECT o.[NAME] FROM sysobjects o WHERE o.[Name] ='trigUpdateItemSummaryStock')
	DROP TRIGGER [trigUpdateItemSummaryStock]
go
IF NOT EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Inventory_Detail' AND c.[Name]='Source_DocumentType_ID') 
	ALTER TABLE Inventory_Detail ADD Source_DocumentType_ID SMALLINT NULL
go
IF NOT EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Inventory_Detail' AND c.[Name]='Source_Document_No') 
	ALTER TABLE Inventory_Detail ADD Source_Document_No INT NULL
go
IF NOT EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Inventory_Detail' AND c.[Name]='Source_Document_Co_ID') 
	ALTER TABLE Inventory_Detail ADD Source_Document_Co_ID DATETIME NULL
GO
-- =============================================
-- Author:		Faisal
-- Create date: 23-Nov-2008
-- Description:	This trigger updates the ItemSummary table for stock, total purchased, total sold etc.
-- Modification Hisotry
-- Date			Updated By		Details
-- 24-Jan-2009	Faisal			Table name is changed from Inv_Stock to Inv_ItemSummary so the trigger
--								is changed accordingly. Summary_Type field will now hold the different
--								summary types, such as "Stock", "Purchased", "Sold". Trigger is also
--								changed from trigUpdateStock to trigUpdateItemSummaryStock. Because
--								this trigger will only hold code for stock.
-- =============================================
CREATE TRIGGER [trigUpdateItemSummaryStock]
   ON  [Inventory_Detail] 
   AFTER INSERT,DELETE,UPDATE
AS 
DECLARE @Factor AS INT

	IF (SELECT Count(*) FROM Deleted) > 0
		BEGIN
		SET @Factor = 0
		IF (SELECT Source_DocumentType_ID FROM Deleted) = 2 OR (SELECT Source_DocumentType_ID FROM Deleted) = 3
			--For Purchase and Sales Return
			SET @Factor = -1
		ELSE
			IF (SELECT Source_DocumentType_ID FROM Deleted) = 1 OR (SELECT Source_DocumentType_ID FROM Deleted) = 4
				--For Purchase Return and Sales
				SET @Factor = 1
		--FOR SUMMARY TYPE STOCK
		IF (SELECT Count(*) FROM Inv_ItemSummary WHERE Co_Id = (Select Co_Id FROM Deleted) AND Source_First_Id = (Select Item_Id From Deleted) AND Source_DocumentType_ID = 15) > 0 
			BEGIN
			UPDATE Inv_ItemSummary 
				SET ItemSummary_Size01 = ItemSummary_Size01 + (Select Inventory_Qty_Size01 FROM Deleted) * @Factor
				, ItemSummary_Size02 = ItemSummary_Size02 + (Select Inventory_Qty_Size02 FROM Deleted) * @Factor
				, ItemSummary_Size03 = ItemSummary_Size03 + (Select Inventory_Qty_Size03 FROM Deleted) * @Factor
				, ItemSummary_Size04 = ItemSummary_Size04 + (Select Inventory_Qty_Size04 FROM Deleted) * @Factor
				, ItemSummary_Size05 = ItemSummary_Size05 + (Select Inventory_Qty_Size05 FROM Deleted) * @Factor
				, ItemSummary_Size06 = ItemSummary_Size06 + (Select Inventory_Qty_Size06 FROM Deleted) * @Factor
				, ItemSummary_Size07 = ItemSummary_Size07 + (Select Inventory_Qty_Size07 FROM Deleted) * @Factor
				, ItemSummary_Size08 = ItemSummary_Size08 + (Select Inventory_Qty_Size08 FROM Deleted) * @Factor
				, ItemSummary_Size09 = ItemSummary_Size09 + (Select Inventory_Qty_Size09 FROM Deleted) * @Factor
				, ItemSummary_Size10 = ItemSummary_Size10 + (Select Inventory_Qty_Size10 FROM Deleted) * @Factor
				, ItemSummary_Size11 = ItemSummary_Size11 + (Select Inventory_Qty_Size11 FROM Deleted) * @Factor
				, ItemSummary_Size12 = ItemSummary_Size12 + (Select Inventory_Qty_Size12 FROM Deleted) * @Factor
				, ItemSummary_Size13 = ItemSummary_Size13 + (Select Inventory_Qty_Size13 FROM Deleted) * @Factor
				, Stamp_DateTime = GetDate()
			WHERE  Co_Id = (Select Co_Id FROM Deleted) AND Source_First_Id = (Select Item_Id From Deleted)
					AND Source_DocumentType_ID = 15
			END
		ELSE
			BEGIN
			INSERT INTO [Inv_ItemSummary]
			   ([Co_ID], [Source_First_ID], [Source_Second_ID], [Source_DocumentType_ID]
			   ,[ItemSummary_Size01], [ItemSummary_Size02], [ItemSummary_Size03]
			   ,[ItemSummary_Size04], [ItemSummary_Size05], [ItemSummary_Size06]
			   ,[ItemSummary_Size07], [ItemSummary_Size08], [ItemSummary_Size09]
			   ,[ItemSummary_Size10], [ItemSummary_Size11], [ItemSummary_Size12]
			   ,[ItemSummary_Size13], [Stamp_UserID], [Stamp_DateTime], [Upload_DateTime])
			SELECT Co_Id, Item_Id, 0, 15		--Stock
				,Inventory_Qty_Size01 * @Factor, Inventory_Qty_Size02 * @Factor, Inventory_Qty_Size03 * @Factor
				, Inventory_Qty_Size04 * @Factor, Inventory_Qty_Size05 * @Factor, Inventory_Qty_Size06 * @Factor
				, Inventory_Qty_Size07 * @Factor, Inventory_Qty_Size08 * @Factor, Inventory_Qty_Size09 * @Factor
				, Inventory_Qty_Size10 * @Factor, Inventory_Qty_Size11 * @Factor, Inventory_Qty_Size12 * @Factor
				, Inventory_Qty_Size13 * @Factor, [Stamp_UserID], [Stamp_DateTime], NULL
				FROM Deleted
			END
		END

-- Add the values if inserted

	IF (SELECT Count(*) FROM Inserted) >0
		BEGIN
		SET @Factor = 0
		IF (SELECT Source_DocumentType_ID FROM Deleted) = 2 OR (SELECT Source_DocumentType_ID FROM Deleted) = 3
			--For Purchase and Sales Return
			SET @Factor = 1
		ELSE
			IF (SELECT Source_DocumentType_ID FROM Deleted) = 1 OR (SELECT Source_DocumentType_ID FROM Deleted) = 4
				--For Purchase Return and Sales
				SET @Factor = -1
		--FOR SUMMARY TYPE STOCK
		IF (SELECT Count(*) FROM Inv_ItemSummary WHERE Co_Id = (Select Co_Id FROM Inserted) AND Source_First_Id = (Select Item_Id From Inserted) AND Source_DocumentType_ID = 15) > 0 
			BEGIN
			UPDATE Inv_ItemSummary 
				SET ItemSummary_Size01 = ItemSummary_Size01 + (Select Inventory_Qty_Size01 FROM Inserted) * @Factor
				, ItemSummary_Size02 = ItemSummary_Size02 + (Select Inventory_Qty_Size02 FROM Inserted) * @Factor
				, ItemSummary_Size03 = ItemSummary_Size03 + (Select Inventory_Qty_Size03 FROM Inserted) * @Factor
				, ItemSummary_Size04 = ItemSummary_Size04 + (Select Inventory_Qty_Size04 FROM Inserted) * @Factor
				, ItemSummary_Size05 = ItemSummary_Size05 + (Select Inventory_Qty_Size05 FROM Inserted) * @Factor
				, ItemSummary_Size06 = ItemSummary_Size06 + (Select Inventory_Qty_Size06 FROM Inserted) * @Factor
				, ItemSummary_Size07 = ItemSummary_Size07 + (Select Inventory_Qty_Size07 FROM Inserted) * @Factor
				, ItemSummary_Size08 = ItemSummary_Size08 + (Select Inventory_Qty_Size08 FROM Inserted) * @Factor
				, ItemSummary_Size09 = ItemSummary_Size09 + (Select Inventory_Qty_Size09 FROM Inserted) * @Factor
				, ItemSummary_Size10 = ItemSummary_Size10 + (Select Inventory_Qty_Size10 FROM Inserted) * @Factor
				, ItemSummary_Size11 = ItemSummary_Size11 + (Select Inventory_Qty_Size11 FROM Inserted) * @Factor
				, ItemSummary_Size12 = ItemSummary_Size12 + (Select Inventory_Qty_Size12 FROM Inserted) * @Factor
				, ItemSummary_Size13 = ItemSummary_Size13 + (Select Inventory_Qty_Size13 FROM Inserted) * @Factor
				, Stamp_DateTime = GetDate()
			WHERE  Co_Id = (Select Co_Id FROM Inserted) AND Source_First_Id = (Select Item_Id From Inserted)
				AND Source_DocumentType_ID = 15
			END
		ELSE
			BEGIN
			INSERT INTO [Inv_ItemSummary]
			   ([Co_ID], [Source_First_ID], [Source_Second_ID], [Source_DocumentType_ID]
			   ,[ItemSummary_Size01], [ItemSummary_Size02], [ItemSummary_Size03]
			   ,[ItemSummary_Size04], [ItemSummary_Size05], [ItemSummary_Size06]
			   ,[ItemSummary_Size07], [ItemSummary_Size08], [ItemSummary_Size09]
			   ,[ItemSummary_Size10], [ItemSummary_Size11], [ItemSummary_Size12]
			   ,[ItemSummary_Size13], [Stamp_UserID], [Stamp_DateTime], [Upload_DateTime])
			SELECT Co_Id, Item_Id, 0, 15		--Stock
				, Inventory_Qty_Size01 * @Factor, Inventory_Qty_Size02 * @Factor, Inventory_Qty_Size03 * @Factor
				, Inventory_Qty_Size04 * @Factor, Inventory_Qty_Size05 * @Factor, Inventory_Qty_Size06 * @Factor
				, Inventory_Qty_Size07 * @Factor, Inventory_Qty_Size08 * @Factor, Inventory_Qty_Size09 * @Factor
				, Inventory_Qty_Size10 * @Factor, Inventory_Qty_Size11 * @Factor, Inventory_Qty_Size12 * @Factor
				, Inventory_Qty_Size13 * @Factor, [Stamp_UserID], [Stamp_DateTime], NULL
				FROM Inserted
			END
		END
GO
DELETE FROM Base_setting WHERE Setting_Id LIKE 'DBColumnCaptionItem_Stock_Size%'