IF NOT EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Accounting_VoucherType' AND c.[Name]='Inactive_From')
	ALTER TABLE Accounting_VoucherType ADD Inactive_From DATETIME NULL
GO
IF NOT EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Accounting_VoucherType' AND c.[Name]='Inactive_To')
	ALTER TABLE Accounting_VoucherType ADD Inactive_To DATETIME NULL
go
IF NOT EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Accounting_COA' AND c.[Name]='Inactive_From')
	ALTER TABLE Accounting_COA ADD Inactive_From DATETIME NULL
GO
IF NOT EXISTS (SELECT C.[NAME] FROM sysobjects o INNER JOIN syscolumns c ON o.id=c.id WHERE o.[Name] ='Accounting_COA' AND c.[Name]='Inactive_To')
	ALTER TABLE Accounting_COA ADD Inactive_To DATETIME NULL
GO
IF EXISTS (SELECT O.[NAME] FROM sysobjects o WHERE o.[Name] ='PK_Inv_ItemSummary')
	BEGIN
	ALTER TABLE Inv_ItemSummary
		DROP CONSTRAINT PK_Inv_ItemSummary
	
	ALTER TABLE Inv_ItemSummary
		ALTER COLUMN Warehouse_ID INT NULL
	END
GO
ALTER TABLE [Inventory_Detail] DISABLE TRIGGER ALL
GO
WHILE (Select Count(0) FROM Inventory_Detail WHERE Warehouse_ID IS NULL) > 0
	BEGIN
	UPDATE Inventory_Detail SET Warehouse_ID = 0 
		WHERE (CONVERT(VARCHAR(50), Co_ID) + '-' + CONVERT(VARCHAR(50), Inventory_ID) + '-' + CONVERT(VARCHAR(50), InventoryDetail_ID))
			= (SELECT TOP 1 CONVERT(VARCHAR(50), Co_ID) + '-' + CONVERT(VARCHAR(50), Inventory_ID) + '-' + CONVERT(VARCHAR(50), InventoryDetail_ID) A
				FROM Inventory_Detail WHERE Warehouse_ID IS NULL)
	END
GO
--Delete the records having NULL because they are duplicate records due to trigger.
DELETE FROM Inv_ItemSummary  WHERE Warehouse_ID IS NULL
GO
IF NOT EXISTS (SELECT * FROM Inv_ItemSummary WHERE Warehouse_ID IS NULL)
	ALTER TABLE Inv_ItemSummary
		ALTER COLUMN Warehouse_ID INT NOT NULL

GO
IF NOT EXISTS (SELECT O.[NAME] FROM sysobjects o WHERE o.[Name] ='PK_Inv_ItemSummary')
	ALTER TABLE Inv_ItemSummary 
		ADD CONSTRAINT PK_Inv_ItemSummary PRIMARY KEY CLUSTERED
		(Co_ID, Source_First_ID, Source_Second_ID, Source_DocumentType_ID, Warehouse_ID)
GO
-- =============================================
-- Author:		Faisal Saleem
-- Create date: 01-Mar-2009
-- Description:	This stored procedure calculates the values from inventory table(s)
--				based on item and document type specified and stores in item summary table
--				It will be called in the tigger so that if some user is now upgrading the
--				software then his/her previous entries should be reflected in summary table.
--				It may also be called whenever the summary table is not accorate.
-- =============================================
-- ------------ Modification History -----------
-- Author	Date		Details
-- ------   ----        -------
-- Faisal	17-May-2009	Incorporated WarehouseID
-- ---------------------------------------------
ALTER PROCEDURE [spRecalculateItemSummary]
	@Co_ID AS SMALLINT,
	@Item_Id AS INT,
	@ItemSummary_DocumentType_ID AS SMALLINT
	
AS
	DECLARE @PurchaseFactor AS INT
		, @PurchaseReturnFactor AS INT
		, @SalesFactor AS INT
		, @SalesReturnFactor AS INT
	
	IF @ItemSummary_DocumentType_ID = 15	--Stock
		BEGIN
		SET @PurchaseFactor = 1
		SET @PurchaseReturnFactor = -1
		SET @SalesFactor = -1
		SET @SalesReturnFactor = 1
		END
	IF @ItemSummary_DocumentType_ID = 16	--Purchased
		BEGIN
		SET @PurchaseFactor = 1
		SET @PurchaseReturnFactor = -1
		SET @SalesFactor = 0
		SET @SalesReturnFactor = 0
		END
	IF @ItemSummary_DocumentType_ID = 17	--Sold
		BEGIN
		SET @PurchaseFactor = 0
		SET @PurchaseReturnFactor = 0
		SET @SalesFactor = 1
		SET @SalesReturnFactor = -1
		END

	DELETE FROM Inv_ItemSummary 
		WHERE (Co_Id = @Co_Id OR @Co_Id = 0) AND (Source_First_Id = @Item_Id OR @Item_Id = 0) AND (Source_DocumentType_ID = @ItemSummary_DocumentType_ID OR @ItemSummary_DocumentType_ID = 0)

	INSERT INTO [Inv_ItemSummary]
	   ([Co_ID], [Source_First_ID], [Source_Second_ID], [Source_DocumentType_ID], [Warehouse_ID]
	   ,[ItemSummary_Size01], [ItemSummary_Size02], [ItemSummary_Size03]
	   ,[ItemSummary_Size04], [ItemSummary_Size05], [ItemSummary_Size06]
	   ,[ItemSummary_Size07], [ItemSummary_Size08], [ItemSummary_Size09]
	   ,[ItemSummary_Size10], [ItemSummary_Size11], [ItemSummary_Size12]
	   ,[ItemSummary_Size13], [Stamp_UserID], [Stamp_DateTime], [Upload_DateTime])
	SELECT [Co_ID], Item_ID, [Source_Second_ID], [Source_DocumentType_ID], [Warehouse_ID]
	   ,Sum(Inventory_Qty_Size01), Sum(Inventory_Qty_Size02), Sum(Inventory_Qty_Size03)
	   ,Sum(Inventory_Qty_Size04), Sum(Inventory_Qty_Size05), Sum(Inventory_Qty_Size06)
	   ,Sum(Inventory_Qty_Size07), Sum(Inventory_Qty_Size08), Sum(Inventory_Qty_Size09)
	   ,Sum(Inventory_Qty_Size10), Sum(Inventory_Qty_Size11), Sum(Inventory_Qty_Size12)
	   ,Sum(Inventory_Qty_Size13), 0 AS Stamp_UserID, GetDate() AS Stamp_DateTime, NULL AS Upload_DateTime
	FROM 
		(
			SELECT Co_Id, Item_Id, 0 AS Source_Second_ID, @ItemSummary_DocumentType_ID AS Source_DocumentType_ID, [Warehouse_ID]
			, Inventory_Qty_Size01 * @PurchaseFactor AS Inventory_Qty_Size01 , Inventory_Qty_Size02 * @PurchaseFactor AS Inventory_Qty_Size02 
			, Inventory_Qty_Size03 * @PurchaseFactor AS Inventory_Qty_Size03 , Inventory_Qty_Size04 * @PurchaseFactor AS Inventory_Qty_Size04
			, Inventory_Qty_Size05 * @PurchaseFactor AS Inventory_Qty_Size05 , Inventory_Qty_Size06 * @PurchaseFactor AS Inventory_Qty_Size06
			, Inventory_Qty_Size07 * @PurchaseFactor AS Inventory_Qty_Size07 , Inventory_Qty_Size08 * @PurchaseFactor AS Inventory_Qty_Size08
			, Inventory_Qty_Size09 * @PurchaseFactor AS Inventory_Qty_Size09 , Inventory_Qty_Size10 * @PurchaseFactor AS Inventory_Qty_Size10
			, Inventory_Qty_Size11 * @PurchaseFactor AS Inventory_Qty_Size11 , Inventory_Qty_Size12 * @PurchaseFactor AS Inventory_Qty_Size12
			, Inventory_Qty_Size13 * @PurchaseFactor AS Inventory_Qty_Size13, 0 AS Stamp_UserID, GetDate() AS Stamp_DateTime
			, NULL AS Upload_DateTime
			FROM Inventory_Detail
			WHERE (Co_Id = @Co_Id OR @Co_Id = 0) AND (Item_Id = @Item_Id OR @Item_Id = 0) 
				AND DocumentType_ID = 3 AND (@ItemSummary_DocumentType_ID = 16 OR @ItemSummary_DocumentType_ID = 15)	--Purchased, Stock
			
			UNION ALL

			SELECT Co_Id, Item_Id, 0 AS Source_Second_ID, @ItemSummary_DocumentType_ID AS Source_DocumentType_ID, [Warehouse_ID]
			, Inventory_Qty_Size01 * @PurchaseReturnFactor AS Inventory_Qty_Size01 , Inventory_Qty_Size02 * @PurchaseReturnFactor AS Inventory_Qty_Size02 
			, Inventory_Qty_Size03 * @PurchaseReturnFactor AS Inventory_Qty_Size03 , Inventory_Qty_Size04 * @PurchaseReturnFactor AS Inventory_Qty_Size04
			, Inventory_Qty_Size05 * @PurchaseReturnFactor AS Inventory_Qty_Size05 , Inventory_Qty_Size06 * @PurchaseReturnFactor AS Inventory_Qty_Size06
			, Inventory_Qty_Size07 * @PurchaseReturnFactor AS Inventory_Qty_Size07 , Inventory_Qty_Size08 * @PurchaseReturnFactor AS Inventory_Qty_Size08
			, Inventory_Qty_Size09 * @PurchaseReturnFactor AS Inventory_Qty_Size09 , Inventory_Qty_Size10 * @PurchaseReturnFactor AS Inventory_Qty_Size10
			, Inventory_Qty_Size11 * @PurchaseReturnFactor AS Inventory_Qty_Size11 , Inventory_Qty_Size12 * @PurchaseReturnFactor AS Inventory_Qty_Size12
			, Inventory_Qty_Size13 * @PurchaseReturnFactor AS Inventory_Qty_Size13, 0 AS Stamp_UserID, GetDate() AS Stamp_DateTime
			, NULL AS Upload_DateTime
			FROM Inventory_Detail
			WHERE (Co_Id = @Co_Id OR @Co_Id = 0) AND (Item_Id = @Item_Id OR @Item_Id = 0) 
				AND DocumentType_ID = 4 AND (@ItemSummary_DocumentType_ID = 16 OR @ItemSummary_DocumentType_ID = 15)	--Purchased , Stock

			UNION ALL

			SELECT Co_Id, Item_Id, 0 AS Source_Second_ID, @ItemSummary_DocumentType_ID AS Source_DocumentType_ID, [Warehouse_ID]
			, Inventory_Qty_Size01 * @SalesFactor AS Inventory_Qty_Size01 , Inventory_Qty_Size02 * @SalesFactor AS Inventory_Qty_Size02 
			, Inventory_Qty_Size03 * @SalesFactor AS Inventory_Qty_Size03 , Inventory_Qty_Size04 * @SalesFactor AS Inventory_Qty_Size04
			, Inventory_Qty_Size05 * @SalesFactor AS Inventory_Qty_Size05 , Inventory_Qty_Size06 * @SalesFactor AS Inventory_Qty_Size06
			, Inventory_Qty_Size07 * @SalesFactor AS Inventory_Qty_Size07 , Inventory_Qty_Size08 * @SalesFactor AS Inventory_Qty_Size08
			, Inventory_Qty_Size09 * @SalesFactor AS Inventory_Qty_Size09 , Inventory_Qty_Size10 * @SalesFactor AS Inventory_Qty_Size10
			, Inventory_Qty_Size11 * @SalesFactor AS Inventory_Qty_Size11 , Inventory_Qty_Size12 * @SalesFactor AS Inventory_Qty_Size12
			, Inventory_Qty_Size13 * @SalesFactor AS Inventory_Qty_Size13, 0 AS Stamp_UserID, GetDate() AS Stamp_DateTime
			, NULL AS Upload_DateTime
			FROM Inventory_Detail
			WHERE (Co_Id = @Co_Id OR @Co_Id = 0) AND (Item_Id = @Item_Id OR @Item_Id = 0) 
				AND DocumentType_ID = 1 AND (@ItemSummary_DocumentType_ID = 17 OR @ItemSummary_DocumentType_ID = 15)	--Sold, Stock

			UNION ALL

			SELECT Co_Id, Item_Id, 0 AS Source_Second_ID, @ItemSummary_DocumentType_ID AS Source_DocumentType_ID, [Warehouse_ID]
			, Inventory_Qty_Size01 * @SalesReturnFactor AS Inventory_Qty_Size01 , Inventory_Qty_Size02 * @SalesReturnFactor AS Inventory_Qty_Size02 
			, Inventory_Qty_Size03 * @SalesReturnFactor AS Inventory_Qty_Size03 , Inventory_Qty_Size04 * @SalesReturnFactor AS Inventory_Qty_Size04
			, Inventory_Qty_Size05 * @SalesReturnFactor AS Inventory_Qty_Size05 , Inventory_Qty_Size06 * @SalesReturnFactor AS Inventory_Qty_Size06
			, Inventory_Qty_Size07 * @SalesReturnFactor AS Inventory_Qty_Size07 , Inventory_Qty_Size08 * @SalesReturnFactor AS Inventory_Qty_Size08
			, Inventory_Qty_Size09 * @SalesReturnFactor AS Inventory_Qty_Size09 , Inventory_Qty_Size10 * @SalesReturnFactor AS Inventory_Qty_Size10
			, Inventory_Qty_Size11 * @SalesReturnFactor AS Inventory_Qty_Size11 , Inventory_Qty_Size12 * @SalesReturnFactor AS Inventory_Qty_Size12
			, Inventory_Qty_Size13 * @SalesReturnFactor AS Inventory_Qty_Size13, 0 AS Stamp_UserID, GetDate() AS Stamp_DateTime
			, NULL AS Upload_DateTime
			FROM Inventory_Detail
			WHERE (Co_Id = @Co_Id OR @Co_Id = 0) AND (Item_Id = @Item_Id OR @Item_Id = 0) 
				AND DocumentType_ID = 2 AND (@ItemSummary_DocumentType_ID = 17 OR @ItemSummary_DocumentType_ID = 15)	--Sold, Stock
			
		) a
		GROUP BY Co_ID, Item_ID, Source_Second_ID, Source_DocumentType_ID, [Warehouse_ID]
GO
DELETE FROM Inv_ItemSummary
GO
spRecalculateItemSummary 0,0,0
GO
ALTER TABLE [Inventory_Detail] ENABLE TRIGGER ALL
